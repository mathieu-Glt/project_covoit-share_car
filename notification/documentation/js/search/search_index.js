var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.723,1,1.502]],["body/modules/AppModule.html",[0,1.26,1,2.868,2,1.111,3,1.282,4,1.722,5,1.722,6,1.282,7,2.231,8,1.722,9,2.424,10,2.424,11,2.392,12,0.056,13,2.392,14,2.231,15,1.722,16,1.722,17,0.6,18,0.6,19,0.5,20,3.035,21,2.231,22,1.078,23,0.709,24,3.035,25,3.035,26,3.035,27,3.142,28,1.722,29,3.035,30,3.142,31,2.424,32,3.035,33,3.035,34,3.035,35,2.022,36,2.424,37,3.035,38,3.485,39,2.424,40,2.022,41,3.035,42,2.424,43,2.022,44,0.6,45,0.323,46,0.041,47,0.041]],["title/modules/DatabaseNotificationModule.html",[0,0.723,48,1.764]],["body/modules/DatabaseNotificationModule.html",[0,1.224,2,1.371,12,0.056,17,0.741,18,0.741,19,0.618,21,2.125,22,1.121,23,0.875,44,0.741,45,0.399,46,0.047,47,0.047,48,2.988,49,3.746,50,3.746,51,2.992,52,2.544,53,2.496,54,3.746]],["title/modules/EmailBuilderModule.html",[0,0.723,11,1.293]],["body/modules/EmailBuilderModule.html",[0,1.178,2,1.085,3,1.252,4,1.682,5,1.682,6,1.252,7,2.447,8,2.447,11,2.421,12,0.057,14,2.197,15,1.682,16,1.682,17,0.586,18,0.586,19,0.489,21,1.682,22,1.137,23,0.692,28,1.682,43,2.581,44,0.586,45,0.316,46,0.041,47,0.041,52,2.197,53,1.975,55,2.368,56,2.368,57,2.368,58,2.198,59,2.964,60,2.447,61,2.368,62,3.094,63,1.447,64,3.873,65,2.964,66,2.368,67,2.368,68,0.939,69,2.368,70,2.368,71,2.368,72,2.368,73,2.368]],["title/controllers/EmailController.html",[60,1.502,74,1.502]],["body/controllers/EmailController.html",[12,0.057,17,0.267,18,0.267,19,0.358,22,0.801,23,0.315,43,0.898,44,0.267,45,0.143,46,0.023,47,0.023,58,1.152,60,1.547,63,0.658,66,1.077,68,1.311,74,1.774,75,1.077,76,0.368,77,1.232,78,3.333,79,2.727,80,2.171,81,2.171,82,2.171,83,2.171,84,1.735,85,1.735,86,2.171,87,2.171,88,1.348,89,2.452,90,4.139,91,2.171,92,2.021,93,1.348,94,2.021,95,1.13,96,1.515,97,3.127,98,1.749,99,1.348,100,2.171,101,1.348,102,2.279,103,1.348,104,2.171,105,1.348,106,3.079,107,1.348,108,2.171,109,1.348,110,1.348,111,2.171,112,1.348,113,1.077,114,2.171,115,1.348,116,1.077,117,2.171,118,1.348,119,1.348,120,2.171,121,1.348,122,1.348,123,2.171,124,1.348,125,1.348,126,1.348,127,0.658,128,1.077,129,1.06,130,1.348,131,1.348,132,1.348,133,2.588,134,1.348,135,1.348,136,1.348,137,1.348,138,1.348,139,0.765,140,2.758,141,3.307,142,1.348,143,1.077,144,3.127,145,1.348,146,2.758,147,1.882,148,2.758,149,1.348,150,2.758,151,2.758,152,3.307,153,2.831,154,2.928,155,2.442,156,1.077,157,1.077,158,1.348,159,1.348,160,1.735,161,1.348,162,1.348,163,1.348,164,1.348,165,1.348,166,1.077,167,1.348,168,1.348,169,3.429,170,1.348,171,1.077,172,1.348,173,1.348,174,1.348,175,1.348,176,1.348,177,1.348,178,1.348,179,1.348,180,1.348,181,1.348,182,1.348,183,2.727,184,2.727,185,1.232,186,2.171,187,1.348,188,1.348,189,1.348,190,1.077,191,1.348,192,1.348]],["title/classes/EmailDto.html",[45,0.282,89,1.293]],["body/classes/EmailDto.html",[12,0.056,17,0.634,18,0.634,19,0.529,44,0.634,45,0.341,46,0.043,47,0.043,68,1.291,76,0.875,89,1.989,92,2.375,95,1.395,96,1.491,133,2.311,193,3.206,194,2.561,195,1.721,196,4.478,197,4.478,198,4.478,199,4.478,200,4.478,201,3.206,202,3.206,203,2.134,204,3.206,205,2.714,206,3.206,207,3.206,208,2.561]],["title/injectables/EmailService.html",[58,1.118,209,0.839]],["body/injectables/EmailService.html",[12,0.057,17,0.184,18,0.184,19,0.263,22,0.652,23,0.217,30,0.742,39,0.742,44,0.184,45,0.17,46,0.017,47,0.017,52,1.187,53,0.619,58,0.673,68,1.179,76,0.254,77,0.904,78,3.139,84,1.273,85,1.273,89,2.402,92,1.874,94,1.752,95,1.207,96,1.314,98,1.516,102,1.817,106,1.98,113,1.273,116,1.273,128,0.742,133,2.845,139,1.187,141,2.228,143,1.273,146,2.39,147,1.677,148,2.39,150,2.39,151,2.686,152,2.866,153,2.945,154,2.866,155,2.479,156,0.742,157,0.742,160,0.742,166,0.742,171,0.742,190,0.742,195,0.673,208,0.742,209,0.663,210,0.527,211,0.742,212,1.671,213,3.043,214,1.593,215,1.593,216,1.593,217,1.593,218,1.593,219,1.593,220,1.593,221,1.394,222,1.593,223,1.593,224,0.929,225,1.593,226,0.929,227,1.593,228,0.929,229,2.743,230,1.593,231,0.929,232,1.593,233,0.929,234,1.593,235,0.929,236,0.929,237,0.929,238,1.593,239,0.929,240,2.092,241,0.929,242,1.273,243,2.431,244,1.273,245,1.187,246,2.79,247,0.742,248,3.94,249,0.929,250,0.929,251,1.593,252,1.593,253,0.929,254,0.929,255,1.593,256,2.092,257,0.929,258,0.929,259,0.929,260,0.929,261,0.929,262,0.929,263,2.447,264,0.929,265,0.929,266,0.929,267,0.929,268,1.593,269,0.929,270,0.929,271,0.929,272,3.434,273,0.929,274,0.929,275,0.929,276,2.479,277,1.671,278,0.742,279,1.593,280,0.929,281,4.253,282,3.434,283,3.434,284,3.434,285,3.434,286,0.929,287,2.79,288,0.929,289,2.479,290,0.929,291,3.434,292,3.434,293,3.255,294,3.434,295,0.929,296,3.434,297,1.593,298,1.593,299,1.593,300,2.79,301,1.593,302,1.593,303,1.593,304,0.619,305,0.619,306,0.619,307,0.619,308,0.929,309,0.929,310,0.929,311,0.929,312,0.929,313,1.593,314,0.929,315,0.929,316,0.929,317,0.929,318,1.593,319,0.929,320,0.929,321,1.671,322,0.929,323,0.929,324,0.929,325,0.929,326,2.092,327,1.593,328,1.593,329,2.092,330,0.929,331,0.929,332,0.929,333,1.593,334,1.593,335,1.593,336,0.929,337,0.929,338,0.929,339,0.929,340,1.593,341,0.742,342,0.929,343,0.929,344,0.929,345,0.929,346,0.742,347,0.929,348,0.929,349,0.929]],["title/interfaces/IUser.html",[350,1.118,351,1.764]],["body/interfaces/IUser.html",[12,0.055,17,0.681,18,0.681,19,0.568,22,0.804,44,0.681,46,0.045,47,0.045,76,0.94,95,1.263,133,2.742,139,2.625,195,1.8,203,2.207,350,1.455,351,2.839,352,2.294,353,2.751,354,4.26,355,4.626,356,4.834,357,4.834,358,3.443]],["title/modules/NatsMessengerModule.html",[0,0.723,13,1.293]],["body/modules/NatsMessengerModule.html",[0,1.292,2,1.076,3,1.242,4,1.667,5,1.667,6,1.242,7,2.437,8,2.437,12,0.057,13,2.416,14,2.185,15,1.667,16,1.667,17,0.581,18,0.581,19,0.485,21,1.667,22,1.065,23,0.686,27,2.348,28,1.667,36,2.348,38,2.348,42,2.348,44,0.581,45,0.313,46,0.04,47,0.04,61,2.348,62,3.077,63,1.435,67,2.348,68,0.931,69,2.348,70,2.348,71,2.348,72,2.348,73,2.348,221,1.958,359,2.348,360,2.348,361,2.348,362,2.537,363,1.958,364,1.958,365,2.939,366,1.242,367,2.939,368,2.939,369,3.851,370,2.939,371,2.939,372,2.939]],["title/injectables/NatsMessengerService.html",[209,0.839,362,1.293]],["body/injectables/NatsMessengerService.html",[12,0.057,17,0.493,18,0.493,19,0.411,22,0.996,23,0.583,44,0.493,45,0.266,46,0.036,47,0.036,63,1.218,68,1.252,76,0.681,77,1.957,78,3.085,92,1.93,94,1.93,95,1.079,96,1.447,98,1.457,127,2.397,139,1.415,146,2.298,147,1.218,148,1.662,150,2.298,151,2.841,155,2.841,203,1.956,209,1.093,210,1.415,212,1.993,221,2.298,229,2.755,263,1.415,277,2.755,278,1.993,321,1.993,341,2.755,346,2.755,362,1.684,363,2.841,364,2.841,366,1.67,373,1.993,374,3.953,375,2.495,376,4.265,377,2.495,378,3.449,379,2.495,380,3.953,381,3.449,382,2.495,383,2.495,384,2.495,385,1.993,386,2.495,387,2.495,388,3.449,389,3.449,390,2.495,391,2.495,392,2.495,393,3.449,394,2.495,395,2.495]],["title/injectables/RpcSuccessInterceptor.html",[129,1.293,209,0.839]],["body/injectables/RpcSuccessInterceptor.html",[12,0.057,17,0.376,18,0.376,19,0.314,22,0.663,23,0.444,35,2.507,40,2.507,44,0.376,45,0.202,46,0.03,47,0.03,68,0.602,76,0.519,77,1.609,92,0.928,94,0.928,95,0.519,96,0.696,98,1.59,102,1.385,127,2.348,129,1.385,140,1.89,147,1.657,185,2.607,203,0.803,205,1.267,209,0.899,210,1.079,245,1.079,263,1.079,304,1.267,305,1.267,306,2.996,307,1.267,350,1.198,366,1.59,396,1.079,397,1.609,398,3.006,399,2.711,400,2.266,401,2.266,402,2.507,403,2.261,404,3.006,405,2.135,406,2.813,407,2.837,408,2.266,409,3.006,410,3.006,411,1.901,412,2.266,413,2.266,414,2.266,415,2.266,416,2.266,417,2.266,418,2.266,419,2.266,420,2.266,421,1.519,422,1.519,423,1.519,424,1.519,425,1.837,426,1.519,427,2.813,428,1.519,429,2.266,430,3.006,431,2.507,432,1.267,433,1.267,434,1.267,435,1.267,436,1.267,437,1.519,438,1.519,439,2.261,440,1.519,441,1.519,442,2.711,443,1.519,444,1.519,445,2.266,446,2.266,447,1.519,448,1.519,449,1.519,450,1.519,451,2.266,452,1.519,453,1.519,454,2.266,455,1.519,456,1.519,457,1.267,458,1.89,459,1.519,460,2.507,461,2.266,462,1.267,463,1.89,464,1.89,465,1.519,466,1.519,467,1.519,468,1.519,469,1.519]],["title/coverage.html",[470,2.869]],["body/coverage.html",[6,1.372,12,0.055,19,0.535,45,0.346,46,0.043,47,0.043,58,1.372,60,1.842,74,1.842,75,2.594,89,1.585,95,0.886,129,1.585,153,2.163,194,2.594,209,1.427,211,2.594,350,1.735,351,2.163,353,2.594,362,1.585,363,2.163,364,2.163,373,2.594,396,2.685,405,1.842,406,3.001,425,1.585,470,2.594,471,3.247,472,3.247,473,3.247,474,4.987,475,4.107,476,4.504,477,3.247,478,3.247,479,3.247,480,2.594,481,4.107,482,3.247,483,3.247,484,3.247,485,2.594,486,3.247,487,3.247,488,3.247]],["title/dependencies.html",[3,1.343,489,1.774]],["body/dependencies.html",[3,1.421,12,0.057,23,0.786,28,1.908,45,0.447,46,0.044,47,0.044,51,2.687,52,1.908,63,1.643,242,3.354,243,3.354,244,3.354,245,1.908,247,2.687,366,1.421,385,2.687,490,4.578,491,3.364,492,3.364,493,3.364,494,3.364,495,3.364,496,3.364,497,3.364,498,3.364,499,3.364,500,3.364,501,3.364,502,3.364,503,3.364,504,3.364,505,3.364,506,3.364,507,3.364,508,3.364,509,3.364,510,3.364,511,3.364,512,3.364,513,3.364]],["title/miscellaneous/functions.html",[514,1.774,515,2.539]],["body/miscellaneous/functions.html",[6,1.92,12,0.053,46,0.044,47,0.044,68,1.317,76,0.904,94,2.03,95,1.135,96,1.522,98,1.756,102,1.616,127,2.219,185,2.358,203,1.398,366,1.398,396,1.878,397,2.358,402,2.205,403,2.205,405,2.358,425,2.03,427,3.272,431,2.769,432,2.205,433,2.205,434,2.205,435,2.205,436,2.205,439,2.205,458,2.205,460,3.028,462,2.205,463,2.769,464,2.769,480,3.32,485,2.644,514,2.644,515,2.644,516,3.31,517,4.157]],["title/index.html",[76,0.606,518,2.221,519,2.221]],["body/index.html",[12,0.05,31,3.294,46,0.05,47,0.05,520,4.124,521,4.124,522,4.124]],["title/modules.html",[2,1.315]],["body/modules.html",[1,2.198,2,1.418,11,1.891,12,0.048,13,1.891,46,0.048,47,0.048,48,2.581,523,4.869,524,4.869,525,4.869,526,5.03,527,3.874,528,3.874]],["title/overview.html",[529,2.869]],["body/overview.html",[0,0.895,1,2.836,2,1.2,3,1.385,4,1.86,5,1.86,6,1.385,7,1.86,8,1.86,9,2.618,10,2.618,11,2.441,12,0.054,13,2.441,14,2.344,15,1.86,16,1.86,45,0.349,46,0.043,47,0.043,55,2.618,56,2.618,57,2.618,58,2.144,74,1.86,210,1.86,352,2.184,359,2.618,360,2.618,361,2.618,362,2.478,457,2.753,529,2.618,530,3.278,531,3.278,532,3.278]],["title/properties.html",[195,1.343,489,1.774]],["body/properties.html",[12,0.055,46,0.049,47,0.049,195,1.694,397,2.275,533,4.01,534,4.01,535,4.01,536,4.01,537,4.01]],["title/interfaces/responsePayloadNatsInterface.html",[350,1.118,425,1.293]],["body/interfaces/responsePayloadNatsInterface.html",[12,0.057,17,0.391,18,0.391,19,0.326,22,0.683,23,0.462,35,1.947,40,2.556,44,0.391,45,0.211,46,0.031,47,0.031,76,0.54,95,0.948,96,1.405,98,1.468,102,1.427,127,2.34,129,0.966,140,1.318,147,1.696,185,2.514,195,1.234,203,0.836,205,2.315,209,0.926,245,1.122,263,1.122,304,1.318,305,1.318,306,2.727,307,1.318,350,1.468,352,1.318,366,1.621,396,1.122,397,1.122,398,2.334,399,2.334,400,1.58,401,1.58,402,2.556,403,1.947,404,2.334,405,1.658,406,2.556,408,1.58,409,2.334,410,2.334,412,1.58,413,1.58,414,1.58,415,1.58,416,1.58,417,1.58,418,1.58,419,1.58,420,1.58,421,1.58,422,1.58,423,2.334,424,2.334,425,1.999,426,3.065,427,3.031,428,3.065,429,3.27,430,3.065,431,2.556,432,1.318,433,1.318,434,1.318,435,1.318,436,1.318,437,1.58,438,1.58,439,2.315,440,1.58,441,1.58,442,2.775,443,1.58,444,1.58,445,2.334,446,2.334,447,1.58,448,1.58,449,1.58,450,1.58,451,2.334,452,1.58,453,1.58,454,2.334,455,1.58,456,1.58,457,1.318,458,1.947,459,1.58,460,2.556,461,2.334,462,1.318,463,1.947,464,1.947,465,1.58,466,1.58,467,1.58,468,1.58,469,1.58]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"interfaces/IUser.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["0",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":534,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":457,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"overview.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["1.4.1",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":295,"title":{},"body":{"injectables/EmailService.html":{}}}],["12",{"_index":316,"title":{},"body":{"injectables/EmailService.html":{}}}],["13",{"_index":324,"title":{},"body":{"injectables/EmailService.html":{}}}],["15",{"_index":326,"title":{},"body":{"injectables/EmailService.html":{}}}],["16",{"_index":339,"title":{},"body":{"injectables/EmailService.html":{}}}],["16.3.1",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":336,"title":{},"body":{"injectables/EmailService.html":{}}}],["2",{"_index":532,"title":{},"body":{"overview.html":{}}}],["2.14.0",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":531,"title":{},"body":{"overview.html":{}}}],["3.3.1",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":530,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["8.5.0",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["9.4.2",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["_context",{"_index":414,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["account",{"_index":161,"title":{},"body":{"controllers/EmailController.html":{}}}],["added",{"_index":170,"title":{},"body":{"controllers/EmailController.html":{}}}],["additional",{"_index":432,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["adequat",{"_index":280,"title":{},"body":{"injectables/EmailService.html":{}}}],["ajoute",{"_index":331,"title":{},"body":{"injectables/EmailService.html":{}}}],["api",{"_index":243,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["app/nats",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{}}}],["applying",{"_index":136,"title":{},"body":{"controllers/EmailController.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array.isarray(values",{"_index":455,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["asso",{"_index":323,"title":{},"body":{"injectables/EmailService.html":{}}}],["association",{"_index":166,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["async",{"_index":78,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{}}}],["au",{"_index":298,"title":{},"body":{"injectables/EmailService.html":{}}}],["author",{"_index":537,"title":{},"body":{"properties.html":{}}}],["available",{"_index":528,"title":{},"body":{"modules.html":{}}}],["avec",{"_index":278,"title":{},"body":{"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{}}}],["avez",{"_index":344,"title":{},"body":{"injectables/EmailService.html":{}}}],["await",{"_index":148,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{}}}],["body",{"_index":97,"title":{},"body":{"controllers/EmailController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branche",{"_index":521,"title":{},"body":{"index.html":{}}}],["browse",{"_index":526,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":523,"title":{},"body":{"modules.html":{}}}],["builder",{"_index":184,"title":{},"body":{"controllers/EmailController.html":{}}}],["cache",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/NatsMessengerModule.html":{}}}],["callhandler",{"_index":410,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["catch",{"_index":150,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{}}}],["cemail",{"_index":178,"title":{},"body":{"controllers/EmailController.html":{}}}],["chain",{"_index":417,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["changements",{"_index":334,"title":{},"body":{"injectables/EmailService.html":{}}}],["class",{"_index":45,"title":{"classes/EmailDto.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["classes",{"_index":193,"title":{},"body":{"classes/EmailDto.html":{}}}],["clientproxy",{"_index":376,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["clientsmodule",{"_index":61,"title":{},"body":{"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{}}}],["clientsmodule.register",{"_index":67,"title":{},"body":{"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_emailbuildermodule",{"_index":55,"title":{},"body":{"modules/EmailBuilderModule.html":{},"overview.html":{}}}],["cluster_emailbuildermodule_exports",{"_index":57,"title":{},"body":{"modules/EmailBuilderModule.html":{},"overview.html":{}}}],["cluster_emailbuildermodule_providers",{"_index":56,"title":{},"body":{"modules/EmailBuilderModule.html":{},"overview.html":{}}}],["cluster_natsmessengermodule",{"_index":359,"title":{},"body":{"modules/NatsMessengerModule.html":{},"overview.html":{}}}],["cluster_natsmessengermodule_exports",{"_index":360,"title":{},"body":{"modules/NatsMessengerModule.html":{},"overview.html":{}}}],["cluster_natsmessengermodule_providers",{"_index":361,"title":{},"body":{"modules/NatsMessengerModule.html":{},"overview.html":{}}}],["cmd",{"_index":380,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["code",{"_index":448,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["communication",{"_index":402,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["compléter",{"_index":301,"title":{},"body":{"injectables/EmailService.html":{}}}],["compte",{"_index":313,"title":{},"body":{"injectables/EmailService.html":{}}}],["configmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/NatsMessengerModule.html":{}}}],["configmodule.forroot",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/NatsMessengerModule.html":{}}}],["configservice",{"_index":64,"title":{},"body":{"modules/EmailBuilderModule.html":{}}}],["configure",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmation",{"_index":325,"title":{},"body":{"injectables/EmailService.html":{}}}],["conforming",{"_index":435,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["console.error",{"_index":317,"title":{},"body":{"injectables/EmailService.html":{}}}],["console.error('error",{"_index":276,"title":{},"body":{"injectables/EmailService.html":{}}}],["console.log",{"_index":163,"title":{},"body":{"controllers/EmailController.html":{}}}],["console.log(\"data",{"_index":311,"title":{},"body":{"injectables/EmailService.html":{}}}],["console.log(\"error",{"_index":393,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["console.log('nats_dns",{"_index":368,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["console.log('nats_port",{"_index":371,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["console.log('send",{"_index":391,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["console.log(this.nats",{"_index":390,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["const",{"_index":263,"title":{},"body":{"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["constructor",{"_index":221,"title":{},"body":{"injectables/EmailService.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{}}}],["constructor(nats",{"_index":375,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["constructor(private",{"_index":138,"title":{},"body":{"controllers/EmailController.html":{}}}],["containing",{"_index":420,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["context",{"_index":416,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["controller",{"_index":74,"title":{"controllers/EmailController.html":{}},"body":{"controllers/EmailController.html":{},"coverage.html":{},"overview.html":{}}}],["controllers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{}}}],["coverage",{"_index":470,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covoit@dmj.com",{"_index":267,"title":{},"body":{"injectables/EmailService.html":{}}}],["covoiturage",{"_index":268,"title":{},"body":{"injectables/EmailService.html":{}}}],["created",{"_index":180,"title":{},"body":{"controllers/EmailController.html":{}}}],["creating",{"_index":255,"title":{},"body":{"injectables/EmailService.html":{}}}],["creation",{"_index":160,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["creationaccountemail",{"_index":214,"title":{},"body":{"injectables/EmailService.html":{}}}],["creationaccountemail(data",{"_index":223,"title":{},"body":{"injectables/EmailService.html":{}}}],["creationassoemail",{"_index":215,"title":{},"body":{"injectables/EmailService.html":{}}}],["creationassoemail(data",{"_index":225,"title":{},"body":{"injectables/EmailService.html":{}}}],["creer",{"_index":347,"title":{},"body":{"injectables/EmailService.html":{}}}],["créer",{"_index":320,"title":{},"body":{"injectables/EmailService.html":{}}}],["créez",{"_index":312,"title":{},"body":{"injectables/EmailService.html":{}}}],["d'email",{"_index":327,"title":{},"body":{"injectables/EmailService.html":{}}}],["d'evenement",{"_index":338,"title":{},"body":{"injectables/EmailService.html":{}}}],["data",{"_index":102,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["data.params",{"_index":272,"title":{},"body":{"injectables/EmailService.html":{}}}],["data.subject",{"_index":265,"title":{},"body":{"injectables/EmailService.html":{}}}],["data.templateid",{"_index":274,"title":{},"body":{"injectables/EmailService.html":{}}}],["data.to",{"_index":270,"title":{},"body":{"injectables/EmailService.html":{}}}],["data[email",{"_index":292,"title":{},"body":{"injectables/EmailService.html":{}}}],["databasenotificationmodule",{"_index":48,"title":{"modules/DatabaseNotificationModule.html":{}},"body":{"modules/DatabaseNotificationModule.html":{},"modules.html":{}}}],["datas",{"_index":429,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["de",{"_index":289,"title":{},"body":{"injectables/EmailService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{},"overview.html":{}}}],["decorator",{"_index":249,"title":{},"body":{"injectables/EmailService.html":{}}}],["decorators",{"_index":90,"title":{},"body":{"controllers/EmailController.html":{}}}],["defined",{"_index":92,"title":{},"body":{"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{}}}],["delete",{"_index":446,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["des",{"_index":333,"title":{},"body":{"injectables/EmailService.html":{}}}],["description",{"_index":397,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"properties.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["details",{"_index":441,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["determine",{"_index":452,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["dev",{"_index":522,"title":{},"body":{"index.html":{}}}],["disable",{"_index":305,"title":{},"body":{"injectables/EmailService.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["document",{"_index":355,"title":{},"body":{"interfaces/IUser.html":{}}}],["documentation",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":52,"title":{},"body":{"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"injectables/EmailService.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":53,"title":{},"body":{"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"injectables/EmailService.html":{}}}],["dto/email.dto",{"_index":128,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["edited",{"_index":175,"title":{},"body":{"controllers/EmailController.html":{}}}],["edition",{"_index":337,"title":{},"body":{"injectables/EmailService.html":{}}}],["email",{"_index":133,"title":{},"body":{"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"interfaces/IUser.html":{}}}],["email.params",{"_index":271,"title":{},"body":{"injectables/EmailService.html":{}}}],["email.sender",{"_index":266,"title":{},"body":{"injectables/EmailService.html":{}}}],["email.subject",{"_index":264,"title":{},"body":{"injectables/EmailService.html":{}}}],["email.templateid",{"_index":273,"title":{},"body":{"injectables/EmailService.html":{}}}],["email.to",{"_index":269,"title":{},"body":{"injectables/EmailService.html":{}}}],["emailbuilder.controller",{"_index":65,"title":{},"body":{"modules/EmailBuilderModule.html":{}}}],["emailbuilder.controller.ts:36",{"_index":164,"title":{},"body":{"controllers/EmailController.html":{}}}],["emailbuilder.service",{"_index":66,"title":{},"body":{"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{}}}],["emailbuilder/emailbuilder.module",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["emailbuildermodule",{"_index":11,"title":{"modules/EmailBuilderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmailBuilderModule.html":{},"modules.html":{},"overview.html":{}}}],["emailcontroller",{"_index":60,"title":{"controllers/EmailController.html":{}},"body":{"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{},"coverage.html":{}}}],["emaildto",{"_index":89,"title":{"classes/EmailDto.html":{}},"body":{"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"coverage.html":{}}}],["emailkey",{"_index":281,"title":{},"body":{"injectables/EmailService.html":{}}}],["emails",{"_index":144,"title":{},"body":{"controllers/EmailController.html":{}}}],["emailservice",{"_index":58,"title":{"injectables/EmailService.html":{}},"body":{"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"coverage.html":{},"overview.html":{}}}],["emit",{"_index":374,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emit(cmd",{"_index":378,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emitter",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["empty",{"_index":438,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["en",{"_index":388,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["env",{"_index":254,"title":{},"body":{"injectables/EmailService.html":{}}}],["environment",{"_index":251,"title":{},"body":{"injectables/EmailService.html":{}}}],["envoi",{"_index":277,"title":{},"body":{"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{}}}],["envoye",{"_index":297,"title":{},"body":{"injectables/EmailService.html":{}}}],["error",{"_index":151,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{}}}],["error('data",{"_index":183,"title":{},"body":{"controllers/EmailController.html":{}}}],["error('failed",{"_index":154,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["eslint",{"_index":304,"title":{},"body":{"injectables/EmailService.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["eslint/ban",{"_index":465,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["eslint/no",{"_index":308,"title":{},"body":{"injectables/EmailService.html":{}}}],["est",{"_index":330,"title":{},"body":{"injectables/EmailService.html":{}}}],["evenement",{"_index":332,"title":{},"body":{"injectables/EmailService.html":{}}}],["event",{"_index":174,"title":{},"body":{"controllers/EmailController.html":{}}}],["eventedited",{"_index":216,"title":{},"body":{"injectables/EmailService.html":{}}}],["eventedited(data",{"_index":227,"title":{},"body":{"injectables/EmailService.html":{}}}],["eventeditedgrouphasbeenadded",{"_index":217,"title":{},"body":{"injectables/EmailService.html":{}}}],["eventeditedgrouphasbeenadded(data",{"_index":230,"title":{},"body":{"injectables/EmailService.html":{}}}],["exchange",{"_index":190,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["execution",{"_index":415,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["executioncontext",{"_index":409,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["export",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"interfaces/IUser.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{},"overview.html":{}}}],["express",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":354,"title":{},"body":{"interfaces/IUser.html":{}}}],["extract",{"_index":439,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["extracts",{"_index":462,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"interfaces/IUser.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["first",{"_index":463,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["firstname",{"_index":356,"title":{},"body":{"interfaces/IUser.html":{}}}],["firstvaluefrom",{"_index":384,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["firstvaluefrom(this.nats.send(cmd",{"_index":392,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["forgot",{"_index":156,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["forgotpasswordemail",{"_index":218,"title":{},"body":{"injectables/EmailService.html":{}}}],["forgotpasswordemail(data",{"_index":232,"title":{},"body":{"injectables/EmailService.html":{}}}],["format",{"_index":453,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["function",{"_index":406,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["functions",{"_index":515,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general",{"_index":142,"title":{},"body":{"controllers/EmailController.html":{}}}],["generates",{"_index":403,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["getfirstvalue",{"_index":480,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getfirstvalue(values",{"_index":458,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["getting",{"_index":518,"title":{"index.html":{}},"body":{}}],["global",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["graph",{"_index":527,"title":{},"body":{"modules.html":{}}}],["group",{"_index":171,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["handle",{"_index":399,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["handler",{"_index":140,"title":{},"body":{"controllers/EmailController.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["handling",{"_index":132,"title":{},"body":{"controllers/EmailController.html":{}}}],["identifier",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"interfaces/IUser.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["importing",{"_index":246,"title":{},"body":{"injectables/EmailService.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{}}}],["include",{"_index":434,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["index",{"_index":76,"title":{"index.html":{}},"body":{"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"interfaces/IUser.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"interfaces/IUser.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["information",{"_index":433,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["initialize",{"_index":437,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["initializing",{"_index":257,"title":{},"body":{"injectables/EmailService.html":{}}}],["inject",{"_index":383,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["inject('nats_service",{"_index":386,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["injectable",{"_index":209,"title":{"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{}},"body":{"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["injectables",{"_index":210,"title":{},"body":{"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"overview.html":{}}}],["instance",{"_index":256,"title":{},"body":{"injectables/EmailService.html":{}}}],["intercept",{"_index":407,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{}}}],["intercept(_context",{"_index":408,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["interceptor",{"_index":398,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["intercepts",{"_index":412,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["interface",{"_index":350,"title":{"interfaces/IUser.html":{},"interfaces/responsePayloadNatsInterface.html":{}},"body":{"interfaces/IUser.html":{},"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["interfaces",{"_index":352,"title":{},"body":{"interfaces/IUser.html":{},"overview.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["isglobal",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["iuser",{"_index":351,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["json.parse(json.stringify(values",{"_index":459,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["key",{"_index":208,"title":{},"body":{"classes/EmailDto.html":{},"injectables/EmailService.html":{}}}],["keyof",{"_index":282,"title":{},"body":{"injectables/EmailService.html":{}}}],["l",{"_index":349,"title":{},"body":{"injectables/EmailService.html":{}}}],["l'appli",{"_index":315,"title":{},"body":{"injectables/EmailService.html":{}}}],["la",{"_index":348,"title":{},"body":{"injectables/EmailService.html":{}}}],["lastname",{"_index":357,"title":{},"body":{"interfaces/IUser.html":{}}}],["le",{"_index":302,"title":{},"body":{"injectables/EmailService.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{},"overview.html":{}}}],["libs/nats",{"_index":363,"title":{},"body":{"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"coverage.html":{}}}],["license",{"_index":535,"title":{},"body":{"properties.html":{}}}],["line",{"_index":307,"title":{},"body":{"injectables/EmailService.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["literal",{"_index":200,"title":{},"body":{"classes/EmailDto.html":{}}}],["load",{"_index":253,"title":{},"body":{"injectables/EmailService.html":{}}}],["made",{"_index":186,"title":{},"body":{"controllers/EmailController.html":{}}}],["main",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["map",{"_index":421,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["matching",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"interfaces/IUser.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["messagepattern",{"_index":126,"title":{},"body":{"controllers/EmailController.html":{}}}],["messagepattern('send_email",{"_index":104,"title":{},"body":{"controllers/EmailController.html":{}}}],["messagepattern('send_email_creation_account",{"_index":91,"title":{},"body":{"controllers/EmailController.html":{}}}],["messagepattern('send_email_creation_asso",{"_index":100,"title":{},"body":{"controllers/EmailController.html":{}}}],["messagepattern('send_email_event_edited",{"_index":120,"title":{},"body":{"controllers/EmailController.html":{}}}],["messagepattern('send_email_forgot_password",{"_index":108,"title":{},"body":{"controllers/EmailController.html":{}}}],["messagepattern('send_email_group_has_been_added",{"_index":111,"title":{},"body":{"controllers/EmailController.html":{}}}],["messagepattern('send_email_profile_created",{"_index":123,"title":{},"body":{"controllers/EmailController.html":{}}}],["messagepattern('send_email_response_exchange",{"_index":114,"title":{},"body":{"controllers/EmailController.html":{}}}],["messagepattern('send_email_response_request",{"_index":117,"title":{},"body":{"controllers/EmailController.html":{}}}],["messenger",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["messenger.module.ts",{"_index":365,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["messenger.service",{"_index":367,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["messenger.service.ts",{"_index":373,"title":{},"body":{"injectables/NatsMessengerService.html":{},"coverage.html":{}}}],["messenger.service.ts:15",{"_index":382,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["messenger.service.ts:28",{"_index":379,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["messenger.service.ts:6",{"_index":377,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["messenger/src/nats",{"_index":364,"title":{},"body":{"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"coverage.html":{}}}],["metadata",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":262,"title":{},"body":{"injectables/EmailService.html":{}}}],["methods",{"_index":77,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{}}}],["miscellaneous",{"_index":514,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mise",{"_index":342,"title":{},"body":{"injectables/EmailService.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":358,"title":{},"body":{"interfaces/IUser.html":{}}}],["mongoosemodule",{"_index":50,"title":{},"body":{"modules/DatabaseNotificationModule.html":{}}}],["mongoosemodule.forroot(`${process.env.uri_bdd",{"_index":54,"title":{},"body":{"modules/DatabaseNotificationModule.html":{}}}],["mot",{"_index":288,"title":{},"body":{"injectables/EmailService.html":{}}}],["ms",{"_index":520,"title":{},"body":{"index.html":{}}}],["name",{"_index":68,"title":{},"body":{"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{}}}],["nats",{"_index":366,"title":{},"body":{"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["nats://${process.env.nats_dns}:${process.env.nats_port",{"_index":73,"title":{},"body":{"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{}}}],["nats_service",{"_index":69,"title":{},"body":{"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{}}}],["natsmessengermodule",{"_index":13,"title":{"modules/NatsMessengerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NatsMessengerModule.html":{},"modules.html":{},"overview.html":{}}}],["natsmessengerservice",{"_index":362,"title":{"injectables/NatsMessengerService.html":{}},"body":{"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"coverage.html":{},"overview.html":{}}}],["nestjs",{"_index":250,"title":{},"body":{"injectables/EmailService.html":{}}}],["nestjs/common",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"dependencies.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["nestjs/config",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":63,"title":{},"body":{"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":51,"title":{},"body":{"modules/DatabaseNotificationModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":153,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"coverage.html":{}}}],["newemail",{"_index":284,"title":{},"body":{"injectables/EmailService.html":{}}}],["newemail.params",{"_index":293,"title":{},"body":{"injectables/EmailService.html":{}}}],["newemail.subject",{"_index":285,"title":{},"body":{"injectables/EmailService.html":{}}}],["newemail.templateid",{"_index":294,"title":{},"body":{"injectables/EmailService.html":{}}}],["newemail.to",{"_index":291,"title":{},"body":{"injectables/EmailService.html":{}}}],["next",{"_index":306,"title":{},"body":{"injectables/EmailService.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["notif",{"_index":369,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["notification",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["nouvelle",{"_index":322,"title":{},"body":{"injectables/EmailService.html":{}}}],["null",{"_index":461,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["number",{"_index":205,"title":{},"body":{"classes/EmailDto.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["object",{"_index":427,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["object.keys(values).length",{"_index":456,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["observable",{"_index":419,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["once",{"_index":169,"title":{},"body":{"controllers/EmailController.html":{}}}],["operations",{"_index":135,"title":{},"body":{"controllers/EmailController.html":{}}}],["optional",{"_index":96,"title":{},"body":{"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["options",{"_index":71,"title":{},"body":{"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{},"overview.html":{}}}],["overview",{"_index":529,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":489,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paginate",{"_index":426,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["pagination",{"_index":440,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["param",{"_index":430,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["parameters",{"_index":94,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":196,"title":{},"body":{"classes/EmailDto.html":{}}}],["passe",{"_index":290,"title":{},"body":{"injectables/EmailService.html":{}}}],["password",{"_index":157,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["payload",{"_index":127,"title":{},"body":{"controllers/EmailController.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["payload.datas",{"_index":454,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["payload.paginate",{"_index":444,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["payload.statuscode",{"_index":450,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["pipe(map(value",{"_index":468,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["pour",{"_index":300,"title":{},"body":{"injectables/EmailService.html":{}}}],["pouvez",{"_index":319,"title":{},"body":{"injectables/EmailService.html":{}}}],["private",{"_index":212,"title":{},"body":{"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{}}}],["process.env.api_key",{"_index":261,"title":{},"body":{"injectables/EmailService.html":{}}}],["process.env.nats_dns",{"_index":370,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["process.env.nats_port",{"_index":372,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["production",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["profil",{"_index":303,"title":{},"body":{"injectables/EmailService.html":{}}}],["profile",{"_index":179,"title":{},"body":{"controllers/EmailController.html":{}}}],["profilecreated",{"_index":219,"title":{},"body":{"injectables/EmailService.html":{}}}],["profilecreated(data",{"_index":234,"title":{},"body":{"injectables/EmailService.html":{}}}],["promise",{"_index":229,"title":{},"body":{"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{}}}],["properties",{"_index":195,"title":{"properties.html":{}},"body":{"classes/EmailDto.html":{},"injectables/EmailService.html":{},"interfaces/IUser.html":{},"properties.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["property",{"_index":464,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["provided",{"_index":442,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{},"overview.html":{}}}],["quand",{"_index":328,"title":{},"body":{"injectables/EmailService.html":{}}}],["readonly",{"_index":139,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"interfaces/IUser.html":{},"injectables/NatsMessengerService.html":{}}}],["reflect",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":134,"title":{},"body":{"controllers/EmailController.html":{}}}],["reponse",{"_index":340,"title":{},"body":{"injectables/EmailService.html":{}}}],["request",{"_index":187,"title":{},"body":{"controllers/EmailController.html":{}}}],["requête",{"_index":343,"title":{},"body":{"injectables/EmailService.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{},"overview.html":{}}}],["response",{"_index":185,"title":{},"body":{"controllers/EmailController.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["responsepayloadnat",{"_index":405,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["responsepayloadnat(value",{"_index":469,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["responsepayloadnat(values",{"_index":436,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["responsepayloadnatsinterface",{"_index":425,"title":{"interfaces/responsePayloadNatsInterface.html":{}},"body":{"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["responses",{"_index":401,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["responsible",{"_index":131,"title":{},"body":{"controllers/EmailController.html":{}}}],["results",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"interfaces/IUser.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["retour",{"_index":389,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["return",{"_index":147,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["returns",{"_index":98,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["reçu",{"_index":345,"title":{},"body":{"injectables/EmailService.html":{}}}],["rpcsuccessinterceptor",{"_index":129,"title":{"injectables/RpcSuccessInterceptor.html":{}},"body":{"controllers/EmailController.html":{},"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["rxjs",{"_index":385,"title":{},"body":{"injectables/NatsMessengerService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":422,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["réinitialisez",{"_index":286,"title":{},"body":{"injectables/EmailService.html":{}}}],["réponse",{"_index":346,"title":{},"body":{"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{}}}],["sans",{"_index":394,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["sdk",{"_index":247,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["send",{"_index":155,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{}}}],["send(cmd",{"_index":381,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["sendcreationaccountuser",{"_index":79,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendcreationaccountuser(@payload",{"_index":162,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendcreationaccountuser(body",{"_index":88,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendcreationassoadmin",{"_index":80,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendcreationassoadmin(@payload",{"_index":167,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendcreationassoadmin(data",{"_index":99,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemail",{"_index":81,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemail(@payload('body",{"_index":145,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemail(data",{"_index":103,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailforgotpassword",{"_index":82,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailforgotpassword(@payload",{"_index":158,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailforgotpassword(data",{"_index":107,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailgrouphasbeenaddedevent",{"_index":83,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailgrouphasbeenaddedevent(@payload",{"_index":172,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailgrouphasbeenaddedevent(data",{"_index":110,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailresponseexchange",{"_index":84,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["sendemailresponseexchange(@payload",{"_index":191,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailresponseexchange(data",{"_index":113,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["sendemailresponserequest",{"_index":85,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["sendemailresponserequest(@payload",{"_index":188,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailresponserequest(data",{"_index":116,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["sendemailupdateevent",{"_index":86,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailupdateevent(@payload",{"_index":176,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailupdateevent(data",{"_index":119,"title":{},"body":{"controllers/EmailController.html":{}}}],["sender",{"_index":197,"title":{},"body":{"classes/EmailDto.html":{}}}],["sendinblue",{"_index":213,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendinblue/client",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["sending",{"_index":141,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["sendprofilecreated",{"_index":87,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendprofilecreated(@payload",{"_index":181,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendprofilecreated(data",{"_index":122,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendsmtpemail",{"_index":248,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendtransacemail",{"_index":220,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendtransacemail(data",{"_index":238,"title":{},"body":{"injectables/EmailService.html":{}}}],["servers",{"_index":72,"title":{},"body":{"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{}}}],["service",{"_index":387,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["set",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["setting",{"_index":259,"title":{},"body":{"injectables/EmailService.html":{}}}],["settings",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["sib",{"_index":242,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["sibapiv3sdk",{"_index":241,"title":{},"body":{"injectables/EmailService.html":{}}}],["sibapiv3sdk.transactionalemailsapi",{"_index":240,"title":{},"body":{"injectables/EmailService.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseNotificationModule.html":{},"modules/EmailBuilderModule.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"interfaces/IUser.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["src/.../main.ts",{"_index":516,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../rpcsuccessinterceptor.ts",{"_index":517,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/config.module.ts",{"_index":49,"title":{},"body":{"modules/DatabaseNotificationModule.html":{}}}],["src/emailbuilder/dto/email.dto.ts",{"_index":194,"title":{},"body":{"classes/EmailDto.html":{},"coverage.html":{}}}],["src/emailbuilder/dto/email.dto.ts:12",{"_index":201,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/emailbuilder/dto/email.dto.ts:15",{"_index":206,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/emailbuilder/dto/email.dto.ts:2",{"_index":204,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/emailbuilder/dto/email.dto.ts:4",{"_index":202,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/emailbuilder/dto/email.dto.ts:8",{"_index":207,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/emailbuilder/emailbuilder.controller.ts",{"_index":75,"title":{},"body":{"controllers/EmailController.html":{},"coverage.html":{}}}],["src/emailbuilder/emailbuilder.controller.ts:15",{"_index":105,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/emailbuilder/emailbuilder.controller.ts:25",{"_index":109,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/emailbuilder/emailbuilder.controller.ts:35",{"_index":93,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/emailbuilder/emailbuilder.controller.ts:46",{"_index":101,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/emailbuilder/emailbuilder.controller.ts:56",{"_index":112,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/emailbuilder/emailbuilder.controller.ts:66",{"_index":121,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/emailbuilder/emailbuilder.controller.ts:76",{"_index":124,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/emailbuilder/emailbuilder.controller.ts:86",{"_index":118,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/emailbuilder/emailbuilder.controller.ts:96",{"_index":115,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/emailbuilder/emailbuilder.module.ts",{"_index":59,"title":{},"body":{"modules/EmailBuilderModule.html":{}}}],["src/emailbuilder/emailbuilder.service.ts",{"_index":211,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/emailbuilder/emailbuilder.service.ts:106",{"_index":235,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/emailbuilder/emailbuilder.service.ts:125",{"_index":231,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/emailbuilder/emailbuilder.service.ts:13",{"_index":222,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/emailbuilder/emailbuilder.service.ts:147",{"_index":228,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/emailbuilder/emailbuilder.service.ts:170",{"_index":237,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/emailbuilder/emailbuilder.service.ts:188",{"_index":236,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/emailbuilder/emailbuilder.service.ts:23",{"_index":239,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/emailbuilder/emailbuilder.service.ts:45",{"_index":233,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/emailbuilder/emailbuilder.service.ts:67",{"_index":224,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/emailbuilder/emailbuilder.service.ts:88",{"_index":226,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/emailbuilder/interface/email.interface.ts",{"_index":353,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/interceptor/rpcsuccessinterceptor",{"_index":130,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/interceptor/rpcsuccessinterceptor.ts",{"_index":396,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["src/interceptor/rpcsuccessinterceptor.ts:64",{"_index":411,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{}}}],["src/main.ts",{"_index":485,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["standardized",{"_index":404,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["started",{"_index":519,"title":{"index.html":{}},"body":{}}],["statements",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":447,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["statuscode",{"_index":428,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["string",{"_index":203,"title":{},"body":{"classes/EmailDto.html":{},"interfaces/IUser.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["structure",{"_index":423,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["subject",{"_index":198,"title":{},"body":{"classes/EmailDto.html":{}}}],["successful",{"_index":400,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["support",{"_index":524,"title":{},"body":{"modules.html":{}}}],["sur",{"_index":314,"title":{},"body":{"injectables/EmailService.html":{}}}],["svg",{"_index":525,"title":{},"body":{"modules.html":{}}}],["t",{"_index":341,"title":{},"body":{"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{}}}],["table",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":279,"title":{},"body":{"injectables/EmailService.html":{}}}],["templateid",{"_index":199,"title":{},"body":{"classes/EmailDto.html":{}}}],["this.emailservice.creationaccountemail(body",{"_index":165,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.emailservice.creationassoemail(data",{"_index":168,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.emailservice.eventedited(data",{"_index":177,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.emailservice.eventeditedgrouphasbeenadded(data",{"_index":173,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.emailservice.forgotpasswordemail(data",{"_index":159,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.emailservice.profilecreated(data",{"_index":182,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.emailservice.sendemailresponseexchange(data",{"_index":192,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.emailservice.sendemailresponserequest(data",{"_index":189,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.emailservice.sendtransacemail(data",{"_index":149,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.nats.emit(cmd",{"_index":395,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["this.sendinblue",{"_index":258,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.sendinblue.sendtransacemail(data",{"_index":275,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.sendinblue.sendtransacemail(newemail",{"_index":296,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.sendinblue.setapikey(sibapiv3sdk.transactionalemailsapiapikeys.apikey",{"_index":260,"title":{},"body":{"injectables/EmailService.html":{}}}],["throw",{"_index":152,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["todo",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{}}}],["transactional",{"_index":143,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["transformed",{"_index":418,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["transformer",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["transforms",{"_index":413,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["transport",{"_index":62,"title":{},"body":{"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{}}}],["transport.nats",{"_index":70,"title":{},"body":{"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{}}}],["true",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/NatsMessengerModule.html":{}}}],["try",{"_index":146,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{}}}],["type",{"_index":95,"title":{},"body":{"controllers/EmailController.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"interfaces/IUser.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["typeof",{"_index":283,"title":{},"body":{"injectables/EmailService.html":{}}}],["types",{"_index":466,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["typescript",{"_index":245,"title":{},"body":{"injectables/EmailService.html":{},"injectables/RpcSuccessInterceptor.html":{},"dependencies.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["un",{"_index":329,"title":{},"body":{"injectables/EmailService.html":{}}}],["une",{"_index":321,"title":{},"body":{"injectables/EmailService.html":{},"injectables/NatsMessengerService.html":{}}}],["unknown",{"_index":106,"title":{},"body":{"controllers/EmailController.html":{},"injectables/EmailService.html":{}}}],["unlicensed",{"_index":536,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":309,"title":{},"body":{"injectables/EmailService.html":{}}}],["used",{"_index":424,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["useinterceptors",{"_index":125,"title":{},"body":{"controllers/EmailController.html":{}}}],["useinterceptors(rpcsuccessinterceptor",{"_index":137,"title":{},"body":{"controllers/EmailController.html":{}}}],["user(parent",{"_index":299,"title":{},"body":{"injectables/EmailService.html":{}}}],["using",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["v3",{"_index":244,"title":{},"body":{"injectables/EmailService.html":{},"dependencies.html":{}}}],["validator",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":460,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["values",{"_index":431,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["values.code",{"_index":451,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["values.paginate",{"_index":445,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["values?.code",{"_index":449,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["values?.paginate",{"_index":443,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["values[object.keys(values)[0",{"_index":467,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["variables",{"_index":252,"title":{},"body":{"injectables/EmailService.html":{}}}],["vars",{"_index":310,"title":{},"body":{"injectables/EmailService.html":{}}}],["version",{"_index":533,"title":{},"body":{"properties.html":{}}}],["votre",{"_index":287,"title":{},"body":{"injectables/EmailService.html":{}}}],["vous",{"_index":318,"title":{},"body":{"injectables/EmailService.html":{}}}],["vènement",{"_index":335,"title":{},"body":{"injectables/EmailService.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/EmailBuilderModule.html":{},"modules/NatsMessengerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nEmailBuilderModule\n\nEmailBuilderModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nEmailBuilderModule->AppModule\n\n\n\n\n\nNatsMessengerModule\n\nNatsMessengerModule\n\nAppModule -->\n\nNatsMessengerModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            EmailBuilderModule\n                        \n                        \n                            NatsMessengerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EmailBuilderModule } from './emailBuilder/emailBuilder.module';\nimport { NatsMessengerModule } from '@app/nats-messenger'\nimport { ConfigModule } from '@nestjs/config';\n\n//Main module from the application notification\n@Module({\n  imports: [\n    // Configure global application settings using ConfigModule\n    ConfigModule.forRoot({\n      isGlobal: true,\n      //TODO set to true for PRODUCTION\n      //cache: true,\n    }),\n    EmailBuilderModule,\n    NatsMessengerModule\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseNotificationModule.html":{"url":"modules/DatabaseNotificationModule.html","title":"module - DatabaseNotificationModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseNotificationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport * as dotenv from 'dotenv';\n\ndotenv.config();\n\n@Module({\n  imports: [MongooseModule.forRoot(`${process.env.URI_BDD}`)],\n})\nexport class DatabaseNotificationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailBuilderModule.html":{"url":"modules/EmailBuilderModule.html","title":"module - EmailBuilderModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailBuilderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmailBuilderModule\n\n\n\ncluster_EmailBuilderModule_providers\n\n\n\ncluster_EmailBuilderModule_exports\n\n\n\n\nEmailService \n\nEmailService \n\n\n\nEmailBuilderModule\n\nEmailBuilderModule\n\nEmailService  -->\n\nEmailBuilderModule->EmailService \n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailBuilderModule -->\n\nEmailService->EmailBuilderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/emailBuilder/emailBuilder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmailController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ConfigService } from '@nestjs/config';\nimport { EmailController } from \"./emailBuilder.controller\";\nimport { EmailService } from \"./emailBuilder.service\"\nimport * as dotenv from 'dotenv';\n\ndotenv.config();\n\n@Module({\n    imports: [\n        ClientsModule.register([\n            {\n                name: 'NATS_SERVICE', \n                transport: Transport.NATS,\n                options: {\n                    servers: [`nats://${process.env.NATS_DNS}:${process.env.NATS_PORT}`],\n                }\n            },\n        ]),\n    ],\n    controllers: [EmailController],\n    providers: [\n        ConfigService,\n        EmailService\n    ],\n    exports: [EmailService]\n\n})\nexport class EmailBuilderModule{}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmailController.html":{"url":"controllers/EmailController.html","title":"controller - EmailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emailBuilder/emailBuilder.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                sendCreationAccountUser\n                            \n                            \n                                    \n                                    Async\n                                sendCreationAssoAdmin\n                            \n                            \n                                    \n                                    Async\n                                sendEmail\n                            \n                            \n                                    \n                                    Async\n                                sendEmailForgotPassword\n                            \n                            \n                                    \n                                    Async\n                                sendEmailGroupHasBeenAddedEvent\n                            \n                            \n                                    \n                                    Async\n                                sendEmailResponseExchange\n                            \n                            \n                                    \n                                    Async\n                                sendEmailResponseRequest\n                            \n                            \n                                    \n                                    Async\n                                sendEmailUpdateEvent\n                            \n                            \n                                    \n                                    Async\n                                sendProfileCreated\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendCreationAccountUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendCreationAccountUser(body: EmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('SEND_EMAIL_CREATION_ACCOUNT')\n                \n            \n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendCreationAssoAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendCreationAssoAdmin(data: EmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('SEND_EMAIL_CREATION_ASSO')\n                \n            \n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmail(data: EmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('SEND_EMAIL')\n                \n            \n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendEmailForgotPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmailForgotPassword(data: EmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('SEND_EMAIL_FORGOT_PASSWORD')\n                \n            \n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendEmailGroupHasBeenAddedEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmailGroupHasBeenAddedEvent(data: EmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('SEND_EMAIL_GROUP_HAS_BEEN_ADDED')\n                \n            \n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendEmailResponseExchange\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmailResponseExchange(data: EmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('SEND_EMAIL_RESPONSE_EXCHANGE')\n                \n            \n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.controller.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendEmailResponseRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmailResponseRequest(data: EmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('SEND_EMAIL_RESPONSE_REQUEST')\n                \n            \n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendEmailUpdateEvent\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmailUpdateEvent(data: EmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('SEND_EMAIL_EVENT_EDITED')\n                \n            \n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        sendProfileCreated\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendProfileCreated(data: EmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('SEND_EMAIL_PROFILE_CREATED')\n                \n            \n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseInterceptors } from '@nestjs/common'\nimport { EmailService } from './emailBuilder.service'\nimport { MessagePattern, Payload } from '@nestjs/microservices'\nimport { EmailDto } from './Dto/email.dto'\nimport { RpcSuccessInterceptor } from 'src/Interceptor/RpcSuccessInterceptor'\n\n// Controller responsible for handling email-related operations\n@Controller()\n// Applying RpcSuccessInterceptor to the controller\n@UseInterceptors(RpcSuccessInterceptor)\nexport class EmailController {\n    constructor(private readonly emailService: EmailService) { }\n    // Handler for sending general transactional emails\n    @MessagePattern('SEND_EMAIL')\n    async sendEmail(@Payload('body') data: EmailDto) {\n        try {\n            return await this.emailService.sendTransacEmail(data)\n        } catch (error) {\n            throw new Error('Failed to send email')\n        }\n    }\n\n    // Handler for sending forgot password emails\n    @MessagePattern('SEND_EMAIL_FORGOT_PASSWORD')\n    async sendEmailForgotPassword(@Payload() data: EmailDto) {\n        try {\n            return await this.emailService.forgotPasswordEmail(data)\n        } catch (error) {\n            throw new Error('Failed to send email')\n        }\n    }\n\n    // Handler for sending creation account emails\n    @MessagePattern('SEND_EMAIL_CREATION_ACCOUNT')\n    async sendCreationAccountUser(@Payload() body: EmailDto) {\n        console.log(\"🚀 ~ file: emailBuilder.controller.ts:36 ~ EmailController ~ sendCreationAccountUser ~ body:\", body)\n        try {\n            await this.emailService.creationAccountEmail(body)\n        } catch (error) {\n            throw new Error('Failed to send email')\n        }\n    }\n\n    // Handler for sending creation association emails\n    @MessagePattern('SEND_EMAIL_CREATION_ASSO')\n    async sendCreationAssoAdmin(@Payload() data: EmailDto) {\n        try {\n            await this.emailService.creationAssoEmail(data)\n        } catch (error) {\n            throw new Error('Failed to send email')\n        }\n    }\n\n    // Handler for sending email once added to a new group   \n    @MessagePattern('SEND_EMAIL_GROUP_HAS_BEEN_ADDED')\n    async sendEmailGroupHasBeenAddedEvent(@Payload() data: EmailDto) {\n        try {\n            return await this.emailService.eventEditedGroupHasBeenAdded(data)\n        } catch (error) {\n            throw new Error('Failed to send email')\n        }\n    }\n\n    // Handler for sending email once event is edited \n    @MessagePattern('SEND_EMAIL_EVENT_EDITED')\n    async sendEmailUpdateEvent(@Payload() data: EmailDto){\n        try {\n            return await this.emailService.eventEdited(data)\n        } catch (error) {\n            throw new Error('Failed to send email')\n        }\n    }\n\n    // Handler for sending cemail once the profile is created \n    @MessagePattern('SEND_EMAIL_PROFILE_CREATED')\n    async sendProfileCreated(@Payload() data: EmailDto) {\n        try {\n            return await this.emailService.profileCreated(data)\n        } catch (error) {\n            throw new Error('data email builder')\n        }\n    }\n\n    // Handler for sending an email once a response was made to a request \n    @MessagePattern('SEND_EMAIL_RESPONSE_REQUEST')\n    async sendEmailResponseRequest(@Payload() data: EmailDto) {\n        try {\n            return await this.emailService.sendEmailResponseRequest(data)\n        } catch (error) {\n            throw new Error('data email builder')\n        }\n    }\n\n    // Handler for sending an email once a response is made to the exchange \n    @MessagePattern('SEND_EMAIL_RESPONSE_EXCHANGE')\n    async sendEmailResponseExchange(@Payload() data: EmailDto) {\n        try {\n            return await this.emailService.sendEmailResponseExchange(data)\n        } catch (error) {\n            throw new Error('data email builder')\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailDto.html":{"url":"classes/EmailDto.html","title":"class - EmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emailBuilder/Dto/email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                params\n                            \n                            \n                                sender\n                            \n                            \n                                    Optional\n                                subject\n                            \n                            \n                                templateId\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/emailBuilder/Dto/email.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/emailBuilder/Dto/email.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/emailBuilder/Dto/email.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        templateId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/emailBuilder/Dto/email.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [literal type]\n\n                    \n                \n                    \n                        \n                                Defined in src/emailBuilder/Dto/email.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EmailDto {\n    subject?: string;\n\n    sender: {\n        email: string,\n        name: string\n    };\n    to: [{\n        email: string,\n        name: string\n    }]\n    params: {\n      key: string\n    }\n    templateId : number\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emailBuilder/emailBuilder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                sendinblue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                creationAccountEmail\n                            \n                            \n                                    Async\n                                creationAssoEmail\n                            \n                            \n                                    Async\n                                eventEdited\n                            \n                            \n                                    Async\n                                eventEditedGroupHasBeenAdded\n                            \n                            \n                                    Async\n                                forgotPasswordEmail\n                            \n                            \n                                    Async\n                                profileCreated\n                            \n                            \n                                    Async\n                                sendEmailResponseExchange\n                            \n                            \n                                    Async\n                                sendEmailResponseRequest\n                            \n                            \n                                    Async\n                                sendTransacEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/emailBuilder/emailBuilder.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        creationAccountEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    creationAccountEmail(data: EmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        creationAssoEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    creationAssoEmail(data: EmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        eventEdited\n                        \n                    \n                \n            \n            \n                \n                        \n                    eventEdited(data: EmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        eventEditedGroupHasBeenAdded\n                        \n                    \n                \n            \n            \n                \n                        \n                    eventEditedGroupHasBeenAdded(data: EmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        forgotPasswordEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    forgotPasswordEmail(data: EmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        profileCreated\n                        \n                    \n                \n            \n            \n                \n                        \n                    profileCreated(data: EmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.service.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendEmailResponseExchange\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmailResponseExchange(data: EmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendEmailResponseRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmailResponseRequest(data: EmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.service.ts:170\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendTransacEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendTransacEmail(data: EmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/emailBuilder/emailBuilder.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sendinblue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SibApiV3Sdk.TransactionalEmailsApi\n\n                    \n                \n                    \n                        \n                                Defined in src/emailBuilder/emailBuilder.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import * as SibApiV3Sdk from 'sib-api-v3-typescript'; // Importing SendinBlue API SDK\nimport { SendSmtpEmail } from 'sib-api-v3-typescript'; // Importing SendSmtpEmail type\nimport { Injectable } from '@nestjs/common'; // Importing Injectable decorator from NestJS\nimport { EmailDto } from './Dto/email.dto'; // Importing the EmailDto class\nimport * as dotenv from 'dotenv'; // Importing dotenv for environment variables\n\n// Load environment variables from .env file\ndotenv.config();\n\n@Injectable()\nexport class EmailService{\n  // Creating an instance of SendinBlue API\n  private readonly sendinblue: SibApiV3Sdk.TransactionalEmailsApi;\n  \n  constructor() {\n    // Initializing the SendinBlue API instance\n    this.sendinblue = new SibApiV3Sdk.TransactionalEmailsApi();\n    // Setting the API key\n    this.sendinblue.setApiKey(SibApiV3Sdk.TransactionalEmailsApiApiKeys.apiKey, process.env.API_KEY);\n  }\n\n    // Method to send transactional email\n    async sendTransacEmail(data: EmailDto): Promise {\n      try {\n        // Creating an instance of SendSmtpEmail\n        const email = new SendSmtpEmail();\n        email.subject = data.subject;\n        email.sender = {\n          email: \"covoit@DMJ.com\",\n          name: \"Application Covoiturage Association\"\n        };\n        email.to = data.to\n        email.params = data.params\n        email.templateId = data.templateId; \n        // Sending the transactional email\n        return await this.sendinblue.sendTransacEmail(data);\n      \n      } catch (error) {\n        console.error('Error sending email:', error);\n        throw new Error('Failed to send email');\n      }\n  }\n\n    //ENVOI EMAIL FORGOT PASSWORD AVEC TEMPLATE ADEQUAT \n    async forgotPasswordEmail(data: EmailDto): Promise {\n   \n      type EmailKey = keyof typeof EmailDto;\n      const email = 'email' as EmailKey;\n\n      try {\n        const newEmail = new SendSmtpEmail()\n        newEmail.subject = \"Réinitialisez votre mot de passe\"\n        newEmail.to = [{\n          email:  data[email]\n        }]\n        newEmail.params = data.params\n        newEmail.templateId = 11 \n        return await this.sendinblue.sendTransacEmail(newEmail)\n      } catch (error) {\n        console.error('Error sending email:', error)\n        throw new Error('Failed to send email')\n      }\n    }\n\n    //EMAIL ENVOYE AU USER(parent) pour compléter le profil \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async creationAccountEmail(data: EmailDto) {\n      type EmailKey = keyof typeof EmailDto;\n      console.log(\"data has\", data)\n      const email = 'email' as EmailKey;\n      try {\n        const newEmail = new SendSmtpEmail()\n        newEmail.subject = \"Créez votre compte sur l'appli de Covoiturage\"\n        newEmail.to = [{\n          email:  data[email]\n        }]\n        newEmail.params = data.params\n        newEmail.templateId = 12 \n        return await this.sendinblue.sendTransacEmail(newEmail)\n  \n      } catch (error) {\n        console.error\n        throw new Error('Failed to send email')\n      }\n  }\n\n    //EMAIL ENVOYE AU USER(parent) pour compléter le profil \n    async creationAssoEmail(data: EmailDto) {\n      type EmailKey = keyof typeof EmailDto;\n      const email = 'email' as EmailKey;\n      try {\n        const newEmail = new SendSmtpEmail()\n        newEmail.subject = \"Vous pouvez créer une nouvelle asso\"\n        newEmail.to = [{\n          email:  data[email]\n        }]\n        newEmail.params = data.params\n        newEmail.templateId = 13 \n        await this.sendinblue.sendTransacEmail(newEmail)\n  \n      } catch (error) {\n        throw new Error('Failed to send email')\n      }\n    }\n\n    async profileCreated(data: EmailDto) {\n      type EmailKey = keyof typeof EmailDto;\n      const email = 'email' as EmailKey;\n      try {\n        const newEmail = new SendSmtpEmail()\n        newEmail.subject = \"Confirmation de creation de compte\"\n        newEmail.to = [{\n          email:  data[email]\n        }]\n        newEmail.templateId = 15 \n\n        return await this.sendinblue.sendTransacEmail(newEmail)\n  \n      } catch (error) {\n        throw new Error('Failed to send email')\n      }\n    }\n  \n  //ENVOI D'EMAIL QUAND UN GROUP EST AJOUTE A UN EVENEMENT\n    async eventEditedGroupHasBeenAdded(data: EmailDto): Promise {\n\n      type EmailKey = keyof typeof EmailDto;\n      const email = 'email' as EmailKey;\n\n      try {\n        const newEmail = new SendSmtpEmail()\n        newEmail.subject = \"Des changements pour votre évènement\"\n        newEmail.to =[{\n          email: data[email]\n        }]\n        newEmail.params = data.params\n        newEmail.templateId = 18\n        return await this.sendinblue.sendTransacEmail(newEmail)\n\n      } catch (error) {\n        console.error('Error sending email:', error)\n        throw new Error('Failed to send email')\n      }\n    }\n\n  //ENVOI D'EMAIL QUAND EDITION D'EVENEMENT\n    async eventEdited(data: EmailDto): Promise {\n\n      type EmailKey = keyof typeof EmailDto;\n      const email = 'email' as EmailKey;\n\n      try {\n        const newEmail = new SendSmtpEmail()\n        newEmail.subject = \"Des changements pour votre évènement\"\n        newEmail.to =[{\n          email:  data[email]\n        }]\n        newEmail.params = data.params\n        newEmail.templateId = 16\n        return await this.sendinblue.sendTransacEmail(newEmail)\n\n      } catch (error) {\n        console.error('Error sending email:', error)\n        throw new Error('Failed to send email')\n      }\n    }\n\n\n\n  async sendEmailResponseRequest(data: EmailDto) {\n      type EmailKey = keyof typeof EmailDto;\n      const email = 'email' as EmailKey;\n      try {\n        const newEmail = new SendSmtpEmail()\n        newEmail.subject = \"Une reponse à été émise à votre requête\"\n        newEmail.to = [{\n          email: data[email]\n        }]\n        newEmail.params = data.params\n        newEmail.templateId = 15\n        return await this.sendinblue.sendTransacEmail(newEmail)\n  \n      } catch (error) {\n        throw new Error('Failed to send email')\n      }\n    }\n\n  async sendEmailResponseExchange(data: EmailDto) {\n      type EmailKey = keyof typeof EmailDto;\n      const email = 'email' as EmailKey;\n      try {\n        const newEmail = new SendSmtpEmail()\n        newEmail.subject = \"Vous avez reçu une réponse\"\n        newEmail.to = [{\n          email: data[email]\n        }]\n        newEmail.params = data.params\n        //TODO : CREER UN TEMPLATE POUR LA REPONSE A L EXCHANGE\n        newEmail.templateId = 15\n        return await this.sendinblue.sendTransacEmail(newEmail)\n  \n      } catch (error) {\n        throw new Error('Failed to send email')\n      }\n  }\n\n  }\n\n\n\n\n   \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/emailBuilder/interface/email.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface IUser extends Document {\n    readonly firstname: string;\n    readonly lastname: string;\n    readonly email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NatsMessengerModule.html":{"url":"modules/NatsMessengerModule.html","title":"module - NatsMessengerModule","body":"\n                   \n\n\n\n\n    Modules\n    NatsMessengerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NatsMessengerModule\n\n\n\ncluster_NatsMessengerModule_exports\n\n\n\ncluster_NatsMessengerModule_providers\n\n\n\n\nNatsMessengerService \n\nNatsMessengerService \n\n\n\nNatsMessengerModule\n\nNatsMessengerModule\n\nNatsMessengerService  -->\n\nNatsMessengerModule->NatsMessengerService \n\n\n\n\n\nNatsMessengerService\n\nNatsMessengerService\n\nNatsMessengerModule -->\n\nNatsMessengerService->NatsMessengerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/nats-messenger/src/nats-messenger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NatsMessengerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NatsMessengerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NatsMessengerService } from './nats-messenger.service';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      //cache: true,\n    }),\n    ClientsModule.register([\n      {\n        name: 'NATS_SERVICE', transport: Transport.NATS,\n        options: {\n          servers: [`nats://${process.env.NATS_DNS}:${process.env.NATS_PORT}`]\n        }\n      }\n    ])\n  ],\n  providers: [NatsMessengerService],\n  exports: [NatsMessengerService],\n})\nexport class NatsMessengerModule {\n  constructor() {\n    console.log('NATS_DNS notif module:', process.env.NATS_DNS);\n    console.log('NATS_PORT notif module:', process.env.NATS_PORT);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NatsMessengerService.html":{"url":"injectables/NatsMessengerService.html","title":"injectable - NatsMessengerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NatsMessengerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nats-messenger/src/nats-messenger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                emit\n                            \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nats: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in libs/nats-messenger/src/nats-messenger.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nats\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emit\n                        \n                    \n                \n            \n            \n                \n                        \n                    emit(cmd: string, payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/nats-messenger/src/nats-messenger.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cmd\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send(cmd: string, payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/nats-messenger/src/nats-messenger.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cmd\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\nimport { firstValueFrom } from 'rxjs';\n\n@Injectable()\nexport class NatsMessengerService {\n    constructor(\n        @Inject('NATS_SERVICE')\n        private readonly nats: ClientProxy\n        \n    ) { }\n    // import nats service\n\n    // send : envoi avec une réponse en retour\n    async send(cmd: string, payload: any): Promise {\n        console.log(this.nats)\n        try {\n            console.log('send', cmd, payload)\n            const t = await firstValueFrom(this.nats.send(cmd, payload))\n            return t\n\n        } catch (error) {\n            console.log(\"error from send\", error)\n        }\n    }\n\n    // emit : envoi sans réponse en retour \n    async emit(cmd: string, payload: any) {\n        try {\n            this.nats.emit(cmd, payload)\n\n        } catch (error) {\n            console.log(\"error\", error)\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RpcSuccessInterceptor.html":{"url":"injectables/RpcSuccessInterceptor.html","title":"injectable - RpcSuccessInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RpcSuccessInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Interceptor/RpcSuccessInterceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor to handle successful responses for NATS communication.\nThis interceptor generates a standardized response payload using the responsePayloadNat function.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(_context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Interceptor/RpcSuccessInterceptor.ts:64\n                        \n                    \n\n\n            \n                \n                        Intercepts the response and transforms it using the responsePayloadNat function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nExecution context.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNext handler in the chain.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Transformed Observable containing the standardized response payload.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { map } from 'rxjs/operators';\n\n/**\n * Interface for the response payload structure used for NATS communication.\n */\ninterface responsePayloadNatsInterface {\n    paginate?: object;\n    statusCode?: number;\n    datas: any;\n}\n\n/**\n * Generates a response payload for NATS communication.\n * @param values - Data and additional information to include in the payload.\n * @returns A response payload conforming to responsePayloadNatsInterface.\n */\nfunction responsePayloadNat(values: any): responsePayloadNatsInterface {\n    // Initialize an empty payload object\n    const payload = {} as responsePayloadNatsInterface;\n    // Extract and set pagination details if provided\n    if (values?.paginate) {\n        payload.paginate = values.paginate;\n        delete values.paginate;\n    }\n    // Extract and set status code if provided\n    if (values?.code) {\n        payload.statusCode = values.code;\n        delete values.code;\n    }\n    // Determine the format of the data and set it in the payload\n    if (values) {\n        payload.datas = Array.isArray(values) ? values : (Object.keys(values).length === 1 ? getFirstValue(values) : { ...JSON.parse(JSON.stringify(values)) });\n    } else {\n        // If no value is provided, set datas to null\n        payload.datas = null;\n    }\n    return payload;\n}\n\n/**\n * Extracts the value of the first property from an object.\n * @param values - Object from which to extract the value.\n * @returns The value of the first property in the object.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction getFirstValue(values: Object): string {\n    return values[Object.keys(values)[0]];\n}\n\n/**\n * Interceptor to handle successful responses for NATS communication.\n * This interceptor generates a standardized response payload using the responsePayloadNat function.\n */\n@Injectable()\nexport class RpcSuccessInterceptor {\n    /**\n     * Intercepts the response and transforms it using the responsePayloadNat function.\n     * @param _context - Execution context.\n     * @param next - Next handler in the chain.\n     * @returns Transformed Observable containing the standardized response payload.\n     */\n    intercept(_context: ExecutionContext, next: CallHandler) {\n        return next\n            .handle()\n            .pipe(map(value => responsePayloadNat(value)));\n\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/nats-messenger/src/nats-messenger.service.ts\n            \n            injectable\n            NatsMessengerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/Interceptor/RpcSuccessInterceptor.ts\n            \n            injectable\n            RpcSuccessInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/Interceptor/RpcSuccessInterceptor.ts\n            \n            interface\n            responsePayloadNatsInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/Interceptor/RpcSuccessInterceptor.ts\n            \n            function\n            getFirstValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Interceptor/RpcSuccessInterceptor.ts\n            \n            function\n            responsePayloadNat\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/emailBuilder/Dto/email.dto.ts\n            \n            class\n            EmailDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/emailBuilder/emailBuilder.controller.ts\n            \n            controller\n            EmailController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/emailBuilder/emailBuilder.service.ts\n            \n            injectable\n            EmailService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/emailBuilder/interface/email.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.2\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/event-emitter : ^1.4.1\n        \n            @nestjs/microservices : ^9.4.2\n        \n            @nestjs/mongoose : ^9.2.2\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @sendinblue/client : ^3.3.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            dotenv : ^16.3.1\n        \n            nats : ^2.14.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            sib-api-v3-sdk : ^8.5.0\n        \n            sib-api-v3-typescript : ^2.2.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getFirstValue   (src/.../RpcSuccessInterceptor.ts)\n                        \n                        \n                            responsePayloadNat   (src/.../RpcSuccessInterceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/Interceptor/RpcSuccessInterceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getFirstValue\n                        \n                    \n                \n            \n            \n                \ngetFirstValue(values: Object)\n                \n            \n\n\n\n\n            \n                \n                        Extracts the value of the first property from an object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                values\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nObject from which to extract the value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The value of the first property in the object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responsePayloadNat\n                        \n                    \n                \n            \n            \n                \nresponsePayloadNat(values: any)\n                \n            \n\n\n\n\n            \n                \n                        Generates a response payload for NATS communication.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                values\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData and additional information to include in the payload.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         responsePayloadNatsInterface\n\n                        \n                            \n                                A response payload conforming to responsePayloadNatsInterface.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMS Notification\nBRANCHE DEV\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseNotificationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailBuilderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NatsMessengerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_EmailBuilderModule\n\n\n\ncluster_EmailBuilderModule_exports\n\n\n\ncluster_EmailBuilderModule_providers\n\n\n\ncluster_NatsMessengerModule\n\n\n\ncluster_NatsMessengerModule_exports\n\n\n\ncluster_NatsMessengerModule_providers\n\n\n\n\nEmailBuilderModule\n\nEmailBuilderModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nEmailBuilderModule->AppModule\n\n\n\n\n\nEmailService \n\nEmailService \n\nEmailService  -->\n\nEmailBuilderModule->EmailService \n\n\n\n\n\nNatsMessengerModule\n\nNatsMessengerModule\n\nAppModule -->\n\nNatsMessengerModule->AppModule\n\n\n\n\n\nNatsMessengerService \n\nNatsMessengerService \n\nNatsMessengerService  -->\n\nNatsMessengerModule->NatsMessengerService \n\n\n\n\n\nEmailService\n\nEmailService\n\nEmailBuilderModule -->\n\nEmailService->EmailBuilderModule\n\n\n\n\n\nNatsMessengerService\n\nNatsMessengerService\n\nNatsMessengerModule -->\n\nNatsMessengerService->NatsMessengerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/responsePayloadNatsInterface.html":{"url":"interfaces/responsePayloadNatsInterface.html","title":"interface - responsePayloadNatsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  responsePayloadNatsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Interceptor/RpcSuccessInterceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the response payload structure used for NATS communication.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            datas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            paginate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datas:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paginate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paginate:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { map } from 'rxjs/operators';\n\n/**\n * Interface for the response payload structure used for NATS communication.\n */\ninterface responsePayloadNatsInterface {\n    paginate?: object;\n    statusCode?: number;\n    datas: any;\n}\n\n/**\n * Generates a response payload for NATS communication.\n * @param values - Data and additional information to include in the payload.\n * @returns A response payload conforming to responsePayloadNatsInterface.\n */\nfunction responsePayloadNat(values: any): responsePayloadNatsInterface {\n    // Initialize an empty payload object\n    const payload = {} as responsePayloadNatsInterface;\n    // Extract and set pagination details if provided\n    if (values?.paginate) {\n        payload.paginate = values.paginate;\n        delete values.paginate;\n    }\n    // Extract and set status code if provided\n    if (values?.code) {\n        payload.statusCode = values.code;\n        delete values.code;\n    }\n    // Determine the format of the data and set it in the payload\n    if (values) {\n        payload.datas = Array.isArray(values) ? values : (Object.keys(values).length === 1 ? getFirstValue(values) : { ...JSON.parse(JSON.stringify(values)) });\n    } else {\n        // If no value is provided, set datas to null\n        payload.datas = null;\n    }\n    return payload;\n}\n\n/**\n * Extracts the value of the first property from an object.\n * @param values - Object from which to extract the value.\n * @returns The value of the first property in the object.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction getFirstValue(values: Object): string {\n    return values[Object.keys(values)[0]];\n}\n\n/**\n * Interceptor to handle successful responses for NATS communication.\n * This interceptor generates a standardized response payload using the responsePayloadNat function.\n */\n@Injectable()\nexport class RpcSuccessInterceptor {\n    /**\n     * Intercepts the response and transforms it using the responsePayloadNat function.\n     * @param _context - Execution context.\n     * @param next - Next handler in the chain.\n     * @returns Transformed Observable containing the standardized response payload.\n     */\n    intercept(_context: ExecutionContext, next: CallHandler) {\n        return next\n            .handle()\n            .pipe(map(value => responsePayloadNat(value)));\n\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
