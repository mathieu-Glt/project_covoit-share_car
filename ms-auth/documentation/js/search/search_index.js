var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AccessTokenGuard.html",[0,1.335,1,2.799]],["body/injectables/AccessTokenGuard.html",[0,2.286,1,4.792,2,2.877,3,0.325,4,0.325,5,0.291,6,4.494,7,2.168,8,5.386,9,0.431,10,0.019,11,1.907,12,4.494,13,3.334,14,0.325,15,0.132,16,0.017,17,0.017]],["title/injectables/AccessTokenStrategy.html",[0,1.335,18,2.334]],["body/injectables/AccessTokenStrategy.html",[0,1.822,2,2.019,3,0.228,4,0.228,5,0.204,7,1.728,9,0.391,10,0.02,11,1.338,13,2.339,14,0.228,15,0.126,16,0.013,17,0.013,18,3.184,19,3.153,20,5.01,21,4.425,22,0.278,23,3.184,24,4.292,25,4.23,26,1.143,27,3.681,28,5.01,29,3.681,30,2.167,31,1.672,32,0.413,33,1.269,34,2.748,35,2.019,36,3.819,37,1.369,38,3.153,39,2.806,40,2.806,41,4.292,42,3.681,43,1.775,44,0.563,45,3.153,46,1.89,47,3.153,48,2.806,49,2.094,50,3.153,51,3.153,52,3.153,53,3.153,54,3.153,55,3.153,56,3.681,57,2.546,58,2.806,59,2.546,60,2.546,61,3.153,62,3.153,63,3.153,64,3.153,65,3.153,66,2.806,67,2.949,68,2.339,69,3.153,70,3.681,71,3.681]],["title/modules/AppModule.html",[72,1.488,73,2.54]],["body/modules/AppModule.html",[3,0.227,4,0.227,5,0.203,9,0.452,10,0.02,11,1.334,14,0.227,15,0.093,16,0.013,17,0.013,72,2.475,73,4.872,74,1.884,75,2.013,76,2.332,77,2.332,78,2.013,79,3.178,80,2.332,81,3.144,82,3.144,83,3.972,84,3.701,85,3.972,86,3.178,87,2.332,88,2.332,89,3.67,90,3.881,91,2.798,92,2.798,93,3.459,94,1.884,95,3.144,96,3.67,97,4.284,98,2.798,99,3.67,100,3.144,101,3.144,102,3.67,103,5,104,3.144,105,3.144,106,2.539,107,3.144,108,3.67,109,2.742,110,3.144,111,2.332,112,3.144,113,3.144,114,3.67,115,2.798,116,3.144,117,1.77,118,3.67,119,2.332]],["title/controllers/AuthController.html",[120,2.799,121,2.54]],["body/controllers/AuthController.html",[3,0.055,4,0.055,5,0.232,9,0.345,10,0.02,11,0.322,14,0.055,15,0.022,16,0.004,17,0.004,22,0.067,23,1.012,25,0.613,26,1.082,30,2.791,31,2.153,32,0.391,33,1.635,34,1.189,35,2.6,36,1.214,37,0.521,46,0.817,48,1.214,49,1.371,67,2.791,109,0.427,111,0.563,119,0.563,120,1.653,121,3.039,122,0.759,123,5.516,124,1.592,125,1.592,126,2.168,127,1.592,128,2.647,129,2.168,130,1.831,131,4.189,132,2.168,133,2.168,134,1.592,135,2.168,136,0.886,137,3.949,138,1.724,139,1.592,140,0.886,141,3.391,142,1.592,143,2.91,144,2.33,145,3.391,146,3.397,147,2.168,148,3.013,149,4.505,150,4.825,151,0.886,152,1.592,153,0.886,154,2.647,155,1.592,156,1.592,157,2.168,158,0.886,159,1.592,160,0.886,161,2.168,162,1.592,163,2.038,164,2.032,165,1.592,166,2.168,167,0.886,168,2.35,169,1.592,170,0.886,171,3.588,172,1.364,173,1.232,174,5.909,175,2.168,176,6.297,177,0.873,178,0.886,179,1.961,180,1.592,181,0.886,182,2.168,183,0.886,184,3.166,185,1.592,186,0.886,187,2.647,188,2.168,189,2.168,190,0.886,191,1.592,192,0.886,193,2.168,194,0.886,195,2.35,196,1.592,197,0.886,198,2.647,199,2.168,200,1.101,201,1.592,202,0.886,203,3.64,204,1.592,205,0.886,206,1.592,207,4.596,208,1.592,209,1.364,210,2.168,211,0.886,212,2.958,213,1.592,214,0.886,215,3.397,216,3.397,217,0.886,218,1.592,219,0.886,220,0.886,221,1.592,222,0.886,223,2.168,224,2.168,225,0.613,226,0.613,227,0.613,228,0.759,229,0.759,230,0.759,231,0.38,232,0.38,233,0.886,234,0.886,235,0.886,236,0.886,237,0.563,238,0.886,239,0.675,240,0.759,241,0.886,242,0.613,243,0.886,244,0.262,245,0.402,246,0.886,247,0.886,248,1.5,249,0.886,250,0.886,251,1.5,252,0.759,253,0.886,254,0.886,255,0.886,256,0.759,257,0.759,258,0.886,259,0.886,260,0.886,261,1.364,262,4.011,263,4.061,264,4.061,265,0.886,266,3.391,267,0.886,268,4.061,269,1.674,270,4.305,271,0.886,272,0.886,273,4.061,274,3.193,275,0.886,276,5.025,277,4.576,278,0.886,279,0.768,280,0.886,281,0.886,282,0.886,283,0.886,284,0.886,285,2.647,286,2.168,287,2.168,288,0.886,289,1.592,290,0.886,291,0.886,292,0.886,293,1.592,294,1.592,295,1.592,296,0.886,297,0.886,298,1.592,299,0.886,300,2.168,301,0.886,302,0.886,303,0.886,304,0.886,305,0.886,306,1.592,307,0.886,308,0.886,309,0.886,310,0.886,311,0.886,312,1.592,313,0.886,314,0.886,315,0.886,316,0.886,317,0.886,318,0.886,319,0.886]],["title/modules/AuthModule.html",[72,1.488,83,2.162]],["body/modules/AuthModule.html",[3,0.167,4,0.167,5,0.222,9,0.481,10,0.02,11,0.977,14,0.248,15,0.068,16,0.011,17,0.011,18,3.777,21,1.86,31,2.173,39,3.052,58,3.052,59,1.86,63,2.303,66,3.052,72,2.408,74,1.38,75,1.475,76,1.709,77,1.709,78,1.475,79,3.041,80,3.041,83,4.023,84,3.377,85,2.817,86,2.545,87,1.709,88,1.709,90,2.545,91,2.049,92,2.049,93,1.86,94,1.38,95,2.303,104,2.303,105,2.303,106,1.86,109,1.296,115,2.049,117,1.296,119,2.545,121,3.31,130,1.86,163,0.927,240,2.303,245,1.221,251,4.728,252,2.303,256,3.43,320,2.303,321,2.688,322,2.303,323,2.303,324,3.777,325,2.688,326,2.688,327,2.688,328,2.77,329,2.77,330,2.688,331,4.857,332,4.099,333,2.545,334,2.688,335,4.004,336,2.303,337,3.43,338,2.688,339,2.688,340,4.785,341,2.303,342,2.688,343,2.303,344,0.977,345,3.041,346,1.86,347,2.303,348,2.303,349,2.688,350,2.688,351,2.303,352,2.688,353,2.688,354,2.688,355,2.307,356,2.688,357,2.688,358,2.688,359,1.583,360,2.303,361,3.052,362,2.688,363,2.688]],["title/classes/AuthTokenDto.html",[15,0.093,364,2.799]],["body/classes/AuthTokenDto.html",[3,0.277,4,0.277,5,0.248,9,0.307,10,0.02,14,0.277,15,0.144,16,0.015,17,0.015,22,0.338,26,1.43,32,0.517,33,2.403,37,1.507,44,0.783,49,2.052,138,2.279,364,4.343,365,1.255,366,3.833,367,0.782,368,5.371,369,2.921,370,4.474,371,4.474,372,4.779,373,4.474,374,1.716]],["title/classes/AuthUserToken.html",[15,0.093,346,2.54]],["body/classes/AuthUserToken.html",[3,0.239,4,0.239,5,0.214,9,0.428,10,0.02,14,0.362,15,0.13,16,0.014,17,0.014,22,0.292,26,1.332,32,0.514,33,2.309,37,1.403,44,0.752,49,1.911,57,2.673,94,1.984,109,1.863,138,2.123,239,2.945,269,2.119,328,2.673,345,3.29,346,4.315,365,1.084,367,0.71,368,5.002,369,2.673,372,3.946,374,1.482,375,2.673,376,5.177,377,3.863,378,3.863,379,3.863,380,3.863,381,4.754,382,2.945,383,3.31,384,2.945,385,2.219,386,1.656,387,2.945,388,2.945,389,2.945,390,3.31,391,3.31,392,3.31]],["title/classes/CreateUserDto.html",[15,0.093,203,2.54]],["body/classes/CreateUserDto.html",[3,0.154,4,0.154,5,0.138,9,0.259,10,0.02,14,0.154,15,0.095,16,0.01,17,0.01,22,0.187,26,1.535,32,0.57,33,2.498,37,1.097,44,0.796,138,2.446,173,1.537,177,2.503,203,2.611,365,0.697,367,0.518,369,2.712,372,3.884,374,0.953,393,2.129,394,5.093,395,2.9,396,2.686,397,2.686,398,2.686,399,1.659,400,2.686,401,2.686,402,1.659,403,2.686,404,2.485,405,2.485,406,2.485,407,2.485,408,2.398,409,3.909,410,2.485,411,3.774,412,2.485,413,2.485,414,2.485,415,2.485,416,2.485,417,3.774,418,2.485,419,2.485,420,1.173,421,4.563,422,2.485,423,2.485,424,1.894,425,1.302,426,2.611,427,2.485,428,2.485,429,2.503,430,2.485,431,2.485,432,2.611,433,2.485,434,4.563,435,2.611,436,1.719,437,2.129,438,2.129,439,1.463,440,3.233,441,3.233,442,2.129,443,1.719,444,1.719,445,1.719,446,3.233,447,3.233,448,2.485,449,2.485,450,2.129]],["title/modules/DatabaseModule.html",[72,1.488,451,2.799]],["body/modules/DatabaseModule.html",[3,0.325,4,0.325,5,0.291,9,0.431,10,0.02,11,1.907,14,0.325,15,0.132,16,0.017,17,0.017,72,2.547,74,2.693,90,3.334,93,3.629,94,2.693,116,4.494,451,4.792,452,5.246]],["title/classes/EmailDto.html",[15,0.093,453,2.799]],["body/classes/EmailDto.html",[3,0.263,4,0.263,5,0.235,10,0.02,14,0.263,15,0.107,16,0.015,17,0.015,22,0.32,26,1.53,31,2.502,32,0.585,33,2.446,37,1.324,44,0.797,59,2.937,149,4.662,365,1.191,367,0.756,453,4.199,454,3.637,455,6.115,456,6.115,457,6.115,458,4.662,459,4.245,460,4.245,461,4.245,462,3.243,463,4.245,464,4.245]],["title/interfaces/GlobalEditInterface.html",[465,0.676,466,2.162]],["body/interfaces/GlobalEditInterface.html",[3,0.179,4,0.179,5,0.16,9,0.29,10,0.02,14,0.4,16,0.011,17,0.011,22,0.218,32,0.59,37,1.403,44,0.848,46,2.167,144,1.7,164,2.167,173,1.638,177,3.203,244,1.473,367,0.579,395,3.488,396,3.437,397,3.437,398,3.437,399,2.123,400,3.437,401,3.437,402,2.123,403,3.437,408,3.171,420,1.706,429,2.315,439,1.7,465,1.122,466,2.485,467,1.108,468,1.7,469,1.835,470,1.483,471,1.7,472,1.998,473,1.998,474,1.7,475,2.683,476,1.998,477,1.7,478,1.835,479,1.835,480,2.683,481,1.835,482,3.171,483,1.835,484,2.683,485,1.835,486,1.998,487,1.835]],["title/interfaces/IAuthUp.html",[465,0.676,488,1.668]],["body/interfaces/IAuthUp.html",[3,0.231,4,0.231,5,0.206,7,1.742,9,0.347,10,0.02,14,0.427,15,0.094,16,0.013,17,0.013,22,0.281,32,0.507,37,1.592,43,1.796,44,0.835,49,1.219,163,1.285,173,1.801,179,1.597,231,1.597,232,2.165,244,1.491,245,1.692,279,1.796,344,1.354,355,1.796,367,0.693,385,2.456,386,1.597,399,2.234,402,2.234,420,1.158,425,1.285,465,1.247,467,1.429,488,2.294,489,1.796,490,1.692,491,1.912,492,1.692,493,1.692,494,1.692]],["title/classes/IdDto.html",[15,0.093,212,2.162]],["body/classes/IdDto.html",[3,0.312,4,0.312,5,0.279,9,0.345,10,0.019,14,0.312,15,0.155,16,0.016,17,0.016,22,0.38,26,1.148,32,0.415,44,0.689,138,1.83,164,3.395,212,3.61,365,1.412,367,0.841,369,2.834,374,1.931,394,4.575,495,4.312,496,5.034]],["title/classes/IdDto-1.html",[15,0.077,212,1.808,497,2.341]],["body/classes/IdDto-1.html",[3,0.301,4,0.301,5,0.269,9,0.333,10,0.019,14,0.301,15,0.151,16,0.016,17,0.016,22,0.367,26,1.369,32,0.495,36,4.962,44,0.764,138,1.766,164,3.342,212,3.531,365,1.362,367,0.823,369,2.79,374,1.863,394,4.503,498,4.161,499,4.857,500,4.857]],["title/modules/NatsMessengerModule.html",[72,1.488,84,2.014]],["body/modules/NatsMessengerModule.html",[3,0.226,4,0.226,5,0.202,9,0.418,10,0.02,11,1.327,14,0.226,15,0.092,16,0.013,17,0.013,31,2.262,72,2.667,74,2.557,75,2.001,76,2.319,77,2.319,78,2.001,79,3.603,80,3.603,84,3.695,86,3.165,87,2.319,88,2.319,90,2.319,97,3.126,98,2.781,107,3.126,109,2.401,110,3.126,111,2.319,112,3.126,113,3.126,117,2.938,242,2.524,351,3.126,359,2.148,360,3.126,361,3.796,501,3.126,502,3.126,503,3.126,504,4.606,505,2.781,506,2.781,507,3.649,508,3.649,509,5.67,510,3.649,511,3.649,512,3.649,513,4.98,514,3.649,515,3.649,516,3.649,517,3.126,518,3.649,519,3.649,520,3.649,521,3.649,522,4.98,523,3.649,524,3.649,525,3.649]],["title/injectables/NatsMessengerService.html",[0,1.335,504,2.334]],["body/injectables/NatsMessengerService.html",[0,1.073,2,0.997,3,0.113,4,0.113,5,0.206,9,0.256,10,0.02,11,0.661,14,0.113,15,0.046,16,0.008,17,0.008,22,0.137,23,1.876,25,2.042,26,1.308,30,3.374,31,2.603,32,0.473,33,1.977,34,3.231,35,3.042,37,1.672,44,0.801,49,0.966,67,2.193,72,0.737,117,2.274,123,5.904,141,1.557,143,3.674,144,2.193,145,2.529,149,3.27,150,3.674,171,1.557,172,1.557,173,0.51,209,1.557,242,1.258,257,1.557,261,1.557,263,1.557,264,1.557,266,2.529,268,2.529,270,3.192,273,2.529,274,2.726,361,1.386,394,1.258,504,2.726,505,4.49,506,4.49,517,1.557,526,1.557,527,3.726,528,2.952,529,4.289,530,2.952,531,2.952,532,2.952,533,2.952,534,3.726,535,1.818,536,4.716,537,1.818,538,2.952,539,1.818,540,4.289,541,2.952,542,1.818,543,2.952,544,6.341,545,1.818,546,2.952,547,1.818,548,2.952,549,1.818,550,2.952,551,1.818,552,2.952,553,1.818,554,2.952,555,1.818,556,1.818,557,1.818,558,1.818,559,1.818,560,1.818,561,1.818,562,1.818,563,1.386,564,1.818,565,2.952,566,2.042,567,2.952,568,1.818,569,1.818,570,2.952,571,1.818,572,1.818,573,1.818,574,5.052,575,5.323,576,5.052,577,2.952,578,5.052,579,1.818,580,1.818,581,1.818,582,2.952,583,2.952,584,1.818,585,1.818,586,1.818,587,1.818,588,1.557,589,1.818,590,1.818,591,1.818,592,1.818,593,2.952,594,1.818,595,1.818]],["title/classes/NewPasswordDto.html",[15,0.093,184,2.54]],["body/classes/NewPasswordDto.html",[3,0.271,4,0.271,5,0.243,9,0.3,10,0.02,14,0.271,15,0.142,16,0.015,17,0.015,22,0.33,26,1.282,32,0.464,44,0.736,138,2.043,173,1.976,184,3.888,365,1.228,367,0.771,369,2.66,374,1.68,424,4.284,425,2.258,426,4.53,435,4.294,436,3.03,443,3.888,444,3.888,445,3.888,596,3.752,597,5.317,598,4.379,599,4.379]],["title/interfaces/ParentInterface.html",[465,0.676,477,2.162]],["body/interfaces/ParentInterface.html",[3,0.165,4,0.165,5,0.148,9,0.273,10,0.02,14,0.391,16,0.011,17,0.011,22,0.202,32,0.598,33,2.517,37,1.359,44,0.844,46,2.046,144,1.572,164,2.046,173,1.586,177,3.101,244,1.407,367,0.547,395,1.698,396,3.328,397,3.328,398,3.328,399,2.056,400,3.328,401,3.328,402,2.056,403,3.328,408,1.698,420,1.643,429,2.899,439,1.572,458,3.038,465,1.091,466,1.572,467,1.025,468,1.572,469,1.698,470,1.371,471,1.572,472,1.848,473,1.848,474,1.572,475,2.533,476,1.848,477,2.346,478,3.359,479,1.698,480,2.533,481,1.698,482,3.029,483,1.698,484,2.533,485,1.698,486,1.848,487,1.698]],["title/classes/RefreshToken.html",[15,0.093,344,1.335]],["body/classes/RefreshToken.html",[3,0.282,4,0.282,5,0.252,9,0.395,10,0.02,14,0.392,15,0.115,16,0.015,17,0.015,22,0.344,26,1.039,32,0.475,44,0.648,57,3.151,94,2.339,109,2.197,138,1.656,269,2.499,329,3.151,344,2.545,345,3.663,365,1.278,367,0.791,381,4.819,382,3.473,385,2.47,386,1.953,387,3.473,388,3.473,389,3.473,390,3.903,391,3.903,600,3.151,601,4.555,602,3.903,603,4.555,604,3.903]],["title/classes/RefreshTokenDto.html",[15,0.093,605,2.799]],["body/classes/RefreshTokenDto.html",[3,0.314,4,0.314,5,0.281,9,0.348,10,0.02,14,0.314,15,0.155,16,0.016,17,0.016,22,0.383,26,1.158,32,0.419,44,0.693,138,1.845,344,2.413,365,1.423,367,0.845,369,2.844,374,1.947,605,4.698,606,4.348,607,5.075]],["title/injectables/RefreshTokenGuard.html",[0,1.335,608,2.799]],["body/injectables/RefreshTokenGuard.html",[0,2.274,2,2.853,3,0.322,4,0.322,5,0.288,7,2.157,8,5.359,9,0.429,10,0.019,11,1.891,12,4.456,13,3.306,14,0.322,15,0.131,16,0.017,17,0.017,130,4.327,608,4.768,609,4.456]],["title/injectables/RefreshTokenStrategy.html",[0,1.335,324,2.334]],["body/injectables/RefreshTokenStrategy.html",[0,1.779,2,1.95,3,0.22,4,0.22,5,0.197,7,1.687,9,0.413,10,0.02,11,1.293,13,2.259,14,0.22,15,0.123,16,0.013,17,0.013,21,3.87,22,0.268,23,3.109,24,4.191,25,4.169,26,1.116,30,2.093,31,1.614,32,0.293,33,1.226,34,3.466,35,1.95,38,3.045,39,2.71,40,2.71,41,4.191,45,3.045,46,1.825,47,3.045,48,3.729,49,2.138,50,3.045,51,4.191,52,5.413,53,4.191,54,3.045,55,3.045,58,2.71,59,2.459,60,2.459,61,3.045,62,3.045,64,3.045,65,3.045,66,2.71,67,2.88,68,2.259,69,3.045,109,1.714,130,3.87,269,1.95,324,3.109,344,2.034,610,3.045,611,4.892,612,3.555,613,4.892,614,3.555,615,3.555,616,3.045,617,3.555,618,3.555,619,3.555,620,3.555,621,2.459,622,3.555,623,3.555,624,3.555,625,3.555,626,3.555,627,3.555]],["title/classes/ResponseErrorInterface.html",[15,0.093,628,2.334]],["body/classes/ResponseErrorInterface.html",[3,0.259,4,0.259,5,0.231,7,2.092,9,0.286,10,0.02,14,0.337,15,0.153,16,0.018,17,0.014,22,0.315,26,1.467,32,0.53,33,2.218,44,0.612,244,1.898,274,4.086,365,1.171,367,0.747,420,1.885,425,2.092,462,3.207,470,2.143,628,3.463,629,2.888,630,4.491,631,3.855,632,5.508,633,4.174,634,3.576,635,4.174,636,3.576,637,2.653]],["title/classes/ResponseInterface.html",[15,0.093,630,2.334]],["body/classes/ResponseInterface.html",[3,0.267,4,0.267,5,0.239,7,1.921,9,0.296,10,0.02,14,0.345,15,0.155,16,0.018,17,0.015,22,0.326,26,1.486,32,0.537,33,2.247,44,0.626,244,1.923,274,4.14,365,1.211,367,0.764,420,1.917,425,2.126,462,3.279,470,2.217,628,2.745,629,2.988,630,4.14,631,3.918,637,2.745,638,4.319,639,4.319,640,4.319,641,4.319]],["title/classes/ResponseSuccessInterface.html",[15,0.093,637,2.334]],["body/classes/ResponseSuccessInterface.html",[3,0.259,4,0.259,5,0.231,7,2.092,9,0.286,10,0.02,14,0.337,15,0.153,16,0.018,17,0.014,22,0.315,26,1.467,32,0.53,33,2.218,44,0.612,244,1.898,274,4.086,365,1.171,367,0.747,420,1.885,425,2.092,462,3.207,470,2.143,628,2.653,629,2.888,630,4.491,631,3.855,632,5.508,634,3.576,636,3.576,637,3.463,642,4.174,643,4.174]],["title/injectables/RpcSuccessInterceptor.html",[0,1.335,237,2.334]],["body/injectables/RpcSuccessInterceptor.html",[0,1.374,2,1.366,3,0.154,4,0.154,5,0.138,9,0.259,10,0.02,11,0.905,14,0.154,15,0.063,16,0.01,17,0.01,22,0.188,23,2.402,26,0.568,30,1.466,31,1.131,32,0.205,33,0.859,34,3.648,35,2.798,44,0.28,60,1.722,67,2.689,68,1.582,111,2.903,117,2.46,148,2.402,200,2.615,225,1.722,226,1.722,227,1.722,237,2.402,262,3.888,269,1.366,359,3.003,462,1.466,465,0.696,497,1.898,563,3.888,566,4.379,621,3.994,631,1.582,644,1.722,645,4.37,646,3.914,647,3.238,648,3.238,649,3.483,650,4.37,651,3.529,652,3.779,653,3.238,654,4.37,655,5.296,656,4.37,657,2.49,658,3.238,659,3.238,660,3.238,661,3.238,662,3.238,663,3.238,664,3.238,665,3.238,666,3.238,667,3.238,668,2.133,669,2.133,670,2.133,671,3.242,672,2.133,673,4.401,674,2.133,675,2.133,676,3.888,677,1.898,678,1.898,679,1.898,680,1.898,681,2.133,682,2.133,683,3.483,684,2.133,685,2.133,686,3.238,687,2.133,688,2.133,689,3.238,690,3.238,691,2.133,692,2.133,693,2.133,694,3.238,695,2.133,696,2.133,697,3.238,698,2.133,699,2.133,700,2.881,701,2.133,702,2.133,703,1.898,704,2.903,705,2.881,706,2.881,707,2.133,708,2.133,709,1.898,710,2.133,711,2.133,712,2.133]],["title/classes/TokenDto.html",[15,0.093,137,2.54]],["body/classes/TokenDto.html",[3,0.314,4,0.314,5,0.281,9,0.348,10,0.02,14,0.314,15,0.155,16,0.016,17,0.016,22,0.383,26,1.158,32,0.419,44,0.693,49,2.172,137,4.263,138,1.845,365,1.423,367,0.845,369,2.844,374,1.947,713,4.348,714,5.075]],["title/interfaces/TokenInterface.html",[465,0.676,490,1.668]],["body/interfaces/TokenInterface.html",[3,0.248,4,0.248,5,0.222,7,1.379,9,0.364,10,0.02,14,0.434,15,0.101,16,0.014,17,0.014,22,0.302,32,0.33,37,1.428,43,1.929,44,0.825,49,2.07,163,1.379,173,1.486,179,1.714,231,1.714,232,2.271,244,1.564,245,1.816,279,1.929,344,1.454,355,1.929,367,0.727,385,2.271,386,1.714,399,1.454,402,1.454,420,1.243,425,1.379,465,1.269,467,1.534,488,1.816,489,1.929,490,2.406,491,2.054,492,1.816,493,1.816,494,1.816]],["title/classes/User.html",[15,0.093,163,1.266]],["body/classes/User.html",[3,0.143,4,0.143,5,0.128,9,0.385,10,0.02,14,0.27,15,0.09,16,0.009,17,0.009,22,0.174,26,1.511,32,0.574,37,1.048,44,0.802,57,4.175,94,1.186,109,1.114,138,2.408,163,1.504,164,1.186,173,1.487,177,2.392,244,0.682,269,1.267,333,1.468,345,2.268,365,0.648,367,0.49,369,2.273,374,0.886,381,5.048,382,1.761,383,5.737,384,1.761,385,1.53,386,0.99,387,1.761,388,1.761,389,1.761,396,2.567,397,2.567,398,2.567,399,1.585,400,2.567,401,2.567,402,1.585,403,2.567,409,3.057,420,1.109,425,1.231,426,1.598,429,2.691,432,2.469,435,2.469,436,1.598,437,1.979,438,1.979,439,1.36,440,3.057,441,3.057,442,3.057,443,1.598,444,1.598,445,1.598,446,1.979,447,3.057,450,3.057,458,1.761,475,1.468,478,2.771,715,1.598,716,5.605,717,2.31,718,2.31,719,2.31,720,2.31,721,2.31,722,2.31,723,2.31,724,2.31,725,2.31,726,2.31,727,2.31,728,2.31,729,3.568,730,2.31,731,2.31,732,2.31,733,3.568,734,2.31,735,2.31,736,2.31,737,2.31,738,2.31,739,2.31,740,2.31,741,2.31,742,2.31,743,3.568,744,2.31,745,2.31,746,3.568,747,3.568,748,1.979,749,2.31,750,5.605,751,1.979]],["title/modules/UserModule.html",[72,1.488,85,2.162]],["body/modules/UserModule.html",[3,0.215,4,0.215,5,0.192,9,0.478,10,0.02,11,1.26,14,0.215,15,0.087,16,0.013,17,0.013,31,1.574,72,2.537,74,1.779,75,1.901,76,2.203,77,2.203,78,1.901,79,3.508,80,3.508,83,3.249,84,3.644,85,4.049,86,3.055,87,2.203,88,2.203,90,3.055,91,2.642,92,2.642,93,2.398,94,1.779,115,2.642,117,1.671,119,3.055,163,1.195,225,2.398,226,2.398,227,2.398,228,2.969,229,2.969,230,2.969,248,4.909,331,2.969,332,4.728,333,3.055,341,2.969,343,2.969,345,3.055,347,2.969,348,2.969,359,2.04,470,1.779,752,2.969,753,3.466,754,2.969,755,2.969,756,3.466,757,4.728,758,3.466,759,3.466,760,3.466,761,3.466,762,3.466,763,3.466,764,3.466,765,3.466]],["title/interfaces/acknowledgeResponseinterface.html",[231,1.574,465,0.676]],["body/interfaces/acknowledgeResponseinterface.html",[3,0.248,4,0.248,5,0.222,7,1.379,9,0.364,10,0.02,14,0.434,15,0.101,16,0.014,17,0.014,22,0.302,32,0.33,37,1.428,43,1.929,44,0.816,49,1.309,163,1.379,173,1.486,179,1.714,231,2.271,232,2.271,244,1.564,245,1.816,279,3.049,344,1.454,355,1.929,367,0.727,385,2.271,386,1.714,399,1.454,402,1.454,420,1.846,425,1.379,465,1.269,467,1.534,488,1.816,489,1.929,490,1.816,491,2.054,492,1.816,493,1.816,494,1.816]],["title/interfaces/assoUserEditInterface.html",[465,0.676,474,2.162]],["body/interfaces/assoUserEditInterface.html",[3,0.213,4,0.213,5,0.191,9,0.329,10,0.02,14,0.419,16,0.013,17,0.013,22,0.26,32,0.558,37,1.151,44,0.839,46,2.459,144,2.029,164,3.208,173,1.343,177,2.627,244,1.625,367,0.657,395,2.19,396,2.819,397,2.819,398,2.819,399,1.741,400,2.819,401,2.819,402,1.741,403,2.819,408,2.19,420,1.489,429,2.627,439,2.029,465,1.19,466,2.029,467,1.322,468,2.029,469,2.19,470,1.77,471,2.029,472,2.384,473,2.384,474,2.819,475,3.971,476,3.807,477,2.029,478,2.19,479,2.19,480,3.043,481,2.19,482,3.497,483,2.19,484,3.043,485,2.19,486,2.384,487,2.19]],["title/coverage.html",[766,4.285]],["body/coverage.html",[0,2.232,1,1.857,5,0.135,6,2.087,10,0.02,15,0.176,16,0.01,17,0.01,18,1.548,19,2.087,32,0.201,78,1.336,120,2.834,121,1.685,122,2.087,137,1.685,163,0.84,168,1.685,179,1.044,184,1.685,195,1.685,203,1.685,207,2.087,212,2.188,231,1.044,232,1.044,237,1.548,248,1.685,251,1.685,324,1.548,328,1.685,329,1.685,333,1.548,344,0.886,346,1.685,364,1.857,366,2.087,375,2.572,393,2.087,453,1.857,454,2.087,465,1.218,466,1.434,468,2.969,471,1.434,474,1.434,477,1.434,488,1.106,489,2.961,490,1.106,492,1.106,493,1.106,494,1.106,495,2.087,498,2.087,504,1.548,505,1.857,506,1.857,526,2.087,596,2.087,600,2.572,605,1.857,606,2.087,608,1.857,609,2.087,610,2.087,621,3.119,628,1.548,629,3.119,630,1.548,637,1.548,644,3.49,651,1.685,671,1.548,713,2.087,715,2.572,757,2.087,766,2.087,767,2.436,768,2.436,769,2.436,770,7.43,771,2.436,772,4.508,773,2.436,774,2.436,775,2.436,776,2.087,777,3.717,778,3.717,779,5.432,780,6.139,781,6.139,782,2.436,783,2.436,784,2.436,785,2.436,786,2.436,787,3.185,788,2.087,789,2.087,790,2.436,791,6.619,792,2.087,793,5.044,794,2.087,795,4.508,796,2.087,797,1.857,798,2.087,799,2.436,800,2.436,801,3.717,802,2.436,803,2.436,804,2.436,805,2.436,806,2.436]],["title/dependencies.html",[75,2.421,807,2.631]],["body/dependencies.html",[10,0.02,11,1.498,13,2.618,15,0.136,16,0.014,17,0.014,21,2.849,40,4.594,75,2.259,94,2.115,98,3.14,117,1.986,242,2.849,336,3.529,337,3.529,374,1.58,384,3.14,616,3.529,709,3.14,748,3.529,808,6.397,809,4.119,810,4.119,811,4.119,812,4.119,813,4.119,814,4.119,815,4.119,816,4.119,817,4.119,818,4.119,819,4.119,820,4.119,821,4.119,822,4.119,823,4.119,824,4.119,825,4.119,826,4.119,827,4.119,828,4.119,829,4.119,830,4.119,831,4.119,832,4.119,833,4.119,834,4.119,835,4.119,836,4.119,837,4.119,838,4.119,839,4.119,840,4.119,841,4.119,842,4.119,843,4.119,844,4.119,845,4.119,846,4.119]],["title/miscellaneous/enumerations.html",[847,1.577,848,3.781]],["body/miscellaneous/enumerations.html",[10,0.019,16,0.016,17,0.016,22,0.377,46,3.133,163,2.104,429,3.347,469,3.878,484,3.878,588,4.278,704,4.551,847,2.564,848,4.278,849,6.102,850,6.589,851,4.993,852,4.993,853,4.993,854,4.993,855,4.993,856,4.993]],["title/miscellaneous/functions.html",[847,1.577,857,3.781]],["body/miscellaneous/functions.html",[10,0.019,16,0.015,17,0.015,22,0.339,30,3.362,31,2.593,32,0.471,33,1.969,34,3.444,35,3.132,44,0.505,68,2.853,78,3.444,117,2.165,148,3.629,200,3.106,359,2.643,566,3.951,644,3.106,649,3.423,651,3.951,671,3.629,673,5.202,676,4.353,677,3.423,678,3.423,679,3.423,680,3.423,683,3.423,700,3.423,703,3.423,704,3.991,705,4.353,706,4.353,776,4.892,794,3.846,847,2.305,857,3.846,858,4.49,859,5.71]],["title/interfaces/getTokenInterface.html",[232,1.574,465,0.676]],["body/interfaces/getTokenInterface.html",[3,0.242,4,0.242,5,0.217,7,1.349,9,0.358,10,0.02,14,0.432,15,0.099,16,0.014,17,0.014,22,0.295,32,0.43,37,1.412,43,1.886,44,0.83,49,1.281,163,1.349,173,1.464,179,1.677,231,1.677,232,2.518,244,1.541,245,1.777,279,1.886,344,2.279,355,1.886,367,0.716,385,2.237,386,1.677,399,1.422,402,1.422,420,1.216,425,1.349,465,1.262,467,1.501,488,1.777,489,1.886,490,1.777,491,3.218,492,1.777,493,1.777,494,1.777]],["title/interfaces/getUsersCreatedInterface.html",[465,0.676,471,2.162]],["body/interfaces/getUsersCreatedInterface.html",[3,0.213,4,0.213,5,0.191,9,0.329,10,0.02,14,0.419,16,0.013,17,0.013,22,0.26,32,0.558,37,1.151,44,0.835,46,2.459,144,2.029,164,2.459,173,1.343,177,2.627,244,1.959,367,0.657,395,2.19,396,2.819,397,2.819,398,2.819,399,1.741,400,2.819,401,2.819,402,1.741,403,2.819,408,2.19,420,1.489,429,2.627,439,2.029,465,1.19,466,2.029,467,1.322,468,2.029,469,2.19,470,1.77,471,2.819,472,4.114,473,4.114,474,2.029,475,3.043,476,2.384,477,2.029,478,2.19,479,2.19,480,3.043,481,2.19,482,3.497,483,2.19,484,3.043,485,2.19,486,2.384,487,2.19]],["title/index.html",[22,0.232,860,3.071,861,3.071]],["body/index.html",[10,0.019,16,0.017,17,0.017,49,1.739,100,4.551,101,4.551,862,5.313,863,5.313,864,5.313,865,5.313,866,5.313,867,5.313,868,5.313,869,5.313,870,5.313,871,5.313,872,5.313,873,5.313,874,5.313,875,6.334]],["title/modules.html",[74,2.568]],["body/modules.html",[10,0.017,16,0.017,17,0.017,73,3.629,74,2.693,83,3.088,84,2.877,85,3.088,451,3.999,876,6.979,877,6.979,878,6.979,879,7.136,880,5.246,881,5.246]],["title/overview.html",[882,4.285]],["body/overview.html",[2,2.126,10,0.02,16,0.014,17,0.014,18,3.716,72,1.57,73,4.81,74,1.99,75,2.126,76,2.463,77,2.463,78,2.126,79,2.463,80,2.463,81,3.32,82,3.32,83,4.254,84,3.814,85,4.093,86,3.297,87,2.463,88,2.463,119,2.463,248,4.733,251,4.733,320,3.32,322,3.32,323,3.32,324,3.716,365,1.087,467,1.487,501,3.32,502,3.32,503,3.32,504,4.348,752,3.32,754,3.32,755,3.32,882,3.32,883,3.875,884,3.875,885,3.875,886,3.875,887,3.875]],["title/classes/passwordDto.html",[15,0.093,797,2.799]],["body/classes/passwordDto.html",[3,0.271,4,0.271,5,0.243,9,0.3,10,0.02,14,0.271,15,0.142,16,0.015,17,0.015,22,0.33,26,1.282,32,0.464,44,0.736,138,2.043,173,1.976,365,1.228,367,0.771,369,2.66,374,1.68,424,4.284,425,2.258,426,4.53,435,4.294,436,3.03,443,3.888,444,3.888,445,3.888,597,5.317,796,3.752,797,4.284,888,4.379,889,4.379]],["title/properties.html",[367,0.606,807,2.631]],["body/properties.html",[10,0.02,16,0.017,17,0.017,148,3.542,367,0.765,890,5.574,891,5.574,892,5.574,893,5.574,894,5.574]],["title/interfaces/responsePayloadNatsInterface.html",[465,0.676,671,2.334]],["body/interfaces/responsePayloadNatsInterface.html",[0,1.419,3,0.161,4,0.161,5,0.144,9,0.268,10,0.02,11,0.945,14,0.161,15,0.066,16,0.01,17,0.01,22,0.196,32,0.387,33,1.798,34,3.635,35,2.572,44,0.292,60,2.701,67,2.76,68,1.652,111,2.98,117,2.514,148,1.652,200,2.701,225,1.798,226,1.798,227,1.798,237,1.652,262,3.974,269,1.425,359,3.069,367,0.536,462,2.76,465,0.863,467,0.997,497,1.981,563,2.976,566,4.212,621,3.606,631,1.652,644,1.798,645,3.344,646,3.344,647,2.226,648,2.226,649,2.976,650,3.344,651,2.701,653,2.226,654,3.344,655,4.787,656,3.344,658,2.226,659,2.226,660,2.226,661,2.226,662,2.226,663,2.226,664,2.226,665,2.226,666,2.226,667,2.226,668,2.226,669,2.226,670,3.344,671,3.551,672,4.466,673,4.774,674,4.466,675,4.466,676,3.974,677,1.981,678,1.981,679,1.981,680,1.981,681,2.226,682,2.226,683,3.574,684,2.226,685,2.226,686,3.344,687,2.226,688,2.226,689,3.344,690,3.344,691,2.226,692,2.226,693,2.226,694,3.344,695,2.226,696,2.226,697,3.344,698,2.226,699,2.226,700,2.976,701,2.226,702,2.226,703,1.981,704,2.98,705,2.976,706,2.976,707,2.226,708,2.226,709,1.981,710,2.226,711,2.226,712,2.226]],["title/interfaces/sendEmailForgotPasswordResponseInterface.html",[465,0.676,493,1.668]],["body/interfaces/sendEmailForgotPasswordResponseInterface.html",[3,0.248,4,0.248,5,0.222,7,1.379,9,0.364,10,0.02,14,0.434,15,0.101,16,0.014,17,0.014,22,0.302,32,0.33,37,1.428,43,1.929,44,0.825,49,1.309,163,1.379,173,1.486,179,1.714,231,1.714,232,2.271,244,1.564,245,1.816,279,1.929,344,1.454,355,1.929,367,0.727,385,2.271,386,1.714,399,1.454,402,1.454,420,1.243,425,2.181,465,1.269,467,1.534,488,1.816,489,1.929,490,1.816,491,2.054,492,1.816,493,2.406,494,1.816]],["title/classes/signInDto.html",[15,0.093,195,2.54]],["body/classes/signInDto.html",[3,0.297,4,0.297,5,0.266,9,0.329,10,0.02,14,0.297,15,0.15,16,0.016,17,0.016,22,0.362,26,1.359,32,0.491,37,1.556,44,0.761,138,2.166,173,1.816,195,4.12,365,1.347,367,0.817,369,2.775,374,1.842,432,4.48,792,4.113,895,4.801,896,4.801]],["title/classes/signInInterface.html",[15,0.093,494,1.668]],["body/classes/signInInterface.html",[3,0.242,4,0.242,5,0.217,7,1.349,9,0.358,10,0.02,14,0.432,15,0.099,16,0.014,17,0.014,22,0.295,26,1.191,32,0.43,37,1.57,43,1.886,44,0.823,49,1.281,163,1.349,173,1.758,179,1.677,231,1.677,232,2.237,244,1.541,245,1.777,279,1.886,344,1.422,355,1.886,365,1.097,367,0.716,385,2.237,386,1.677,399,1.422,402,1.422,420,1.216,425,1.349,465,1.262,488,1.777,489,1.886,490,1.777,491,2.008,492,1.777,493,1.777,494,2.371,897,3.912,898,3.912]],["title/interfaces/signInResponseInterface.html",[465,0.676,492,1.668]],["body/interfaces/signInResponseInterface.html",[3,0.242,4,0.242,5,0.217,7,1.349,9,0.358,10,0.02,14,0.432,15,0.099,16,0.014,17,0.014,22,0.295,32,0.43,37,1.412,43,1.886,44,0.814,49,1.281,163,2.162,173,1.464,179,1.677,231,1.677,232,2.687,244,1.851,245,1.777,279,1.886,344,1.422,355,3.023,367,0.716,385,2.237,386,1.677,399,1.422,402,1.422,420,1.216,425,1.349,465,1.262,467,1.501,488,1.777,489,1.886,490,1.777,491,2.008,492,2.371,493,1.777,494,1.777]],["title/miscellaneous/typealiases.html",[847,1.577,899,4.414]],["body/miscellaneous/typealiases.html",[10,0.016,16,0.016,17,0.016,22,0.377,32,0.412,239,4.652,244,1.802,375,3.455,468,2.939,479,3.878,480,3.878,481,3.878,482,4.188,483,3.878,485,3.878,487,3.878,600,3.455,602,5.227,715,3.455,847,2.564,900,4.993,901,7.039,902,4.278,903,4.278,904,4.278]],["title/classes/userEmailDto.html",[15,0.093,168,2.54]],["body/classes/userEmailDto.html",[3,0.314,4,0.314,5,0.281,9,0.348,10,0.02,14,0.314,15,0.155,16,0.016,17,0.016,22,0.383,26,1.158,32,0.419,37,1.595,44,0.693,138,1.845,168,4.263,365,1.423,367,0.845,374,1.947,432,4.591,798,4.348,905,5.075]],["title/interfaces/userPayload.html",[179,1.574,465,0.676]],["body/interfaces/userPayload.html",[3,0.242,4,0.242,5,0.217,7,1.349,9,0.358,10,0.02,14,0.432,15,0.099,16,0.014,17,0.014,22,0.295,32,0.43,37,1.615,43,3.023,44,0.83,49,1.281,163,1.349,173,1.464,179,2.237,231,1.677,232,2.237,244,1.541,245,1.777,279,1.886,344,1.422,355,1.886,367,0.716,385,2.237,386,1.677,399,1.422,402,1.422,420,1.216,425,1.349,465,1.262,467,1.501,488,1.777,489,1.886,490,1.777,491,2.008,492,1.777,493,1.777,494,1.777]],["title/miscellaneous/variables.html",[106,3.054,847,1.577]],["body/miscellaneous/variables.html",[10,0.02,16,0.016,17,0.016,22,0.361,32,0.394,44,0.538,106,3.309,109,2.306,328,4.111,329,4.111,333,3.776,375,3.309,392,4.097,600,3.309,604,4.097,704,4.419,715,3.309,751,4.097,787,4.097,788,5.09,789,5.09,847,2.455,902,4.097,903,4.097,904,4.097,906,5.942,907,6.953,908,4.783,909,4.783]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EmailDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"classes/NewPasswordDto.html":{},"interfaces/ParentInterface.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"classes/TokenDto.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"modules/UserModule.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/passwordDto.html":{},"properties.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"miscellaneous/typealiases.html":{},"classes/userEmailDto.html":{},"interfaces/userPayload.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":770,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":891,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["0.3.16",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["0.30.3",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":780,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":771,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":497,"title":{"classes/IdDto-1.html":{}},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["1.0.0",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["10.0.3",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":887,"title":{},"body":{"overview.html":{}}}],["12/13",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["15/17",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["15m",{"_index":358,"title":{},"body":{"modules/AuthModule.html":{}}}],["16.1.4",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["17/18",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":886,"title":{},"body":{"overview.html":{}}}],["2",{"_index":884,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["2.14.0",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["33/35",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["4.0.1",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":883,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["6.2.13",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":391,"title":{},"body":{"classes/AuthUserToken.html":{},"classes/RefreshToken.html":{}}}],["8",{"_index":885,"title":{},"body":{"overview.html":{}}}],["8.11.0",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["88",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["9.0.1",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["9.1.6",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["9.2.0",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["92",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["_context",{"_index":660,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["access",{"_index":362,"title":{},"body":{"modules/AuthModule.html":{}}}],["accessible",{"_index":525,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["accesstoken",{"_index":491,"title":{},"body":{"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["accesstokenguard",{"_index":1,"title":{"injectables/AccessTokenGuard.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"coverage.html":{}}}],["accesstokenstrategy",{"_index":18,"title":{"injectables/AccessTokenStrategy.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["acknowledge",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["acknowledgeresponseinterface",{"_index":231,"title":{"interfaces/acknowledgeResponseinterface.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"coverage.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["add_user_to_event_link",{"_index":592,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["added",{"_index":589,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["additional",{"_index":677,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["address",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"classes/User.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["addresses",{"_index":523,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["admin",{"_index":484,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"miscellaneous/enumerations.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["admin(parent",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["admineditinterface",{"_index":483,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":900,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":618,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["along",{"_index":627,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["api",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":383,"title":{},"body":{"classes/AuthUserToken.html":{},"classes/User.html":{}}}],["app/nats",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["application",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":73,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argon2",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["array.isarray(values",{"_index":698,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["asso_id",{"_index":395,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["association",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["associations",{"_index":478,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"classes/User.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["assousereditinterface",{"_index":474,"title":{"interfaces/assoUserEditInterface.html":{}},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"coverage.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["async",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["auth",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["auth.controller",{"_index":334,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.controller.ts:129",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller.ts:131",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller.ts:136",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller.ts:211",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller.ts:34",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller.ts:36",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller.ts:38",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/confirm",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/forgot",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/login",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/logout",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/new",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/newpassword/:userid",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/refresh",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/register",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/token/:token",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":121,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authguard",{"_index":12,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["authguard('jwt",{"_index":8,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/RefreshTokenGuard.html":{}}}],["authmodule",{"_index":83,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":894,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":50,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["authservice",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["authtokendto",{"_index":364,"title":{"classes/AuthTokenDto.html":{}},"body":{"classes/AuthTokenDto.html":{},"coverage.html":{}}}],["authusertoken",{"_index":346,"title":{"classes/AuthUserToken.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthUserToken.html":{},"coverage.html":{}}}],["authusertokendocument",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthUserToken.html":{},"miscellaneous/typealiases.html":{}}}],["authusertokenschema",{"_index":328,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthUserToken.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":881,"title":{},"body":{"modules.html":{}}}],["await",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["badrequestexception",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception('passwords",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception('user",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["bcrypt",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":53,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["birthday",{"_index":396,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"classes/User.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["body",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.confirmpassword",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.password",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":420,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"interfaces/ParentInterface.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["bootstrap",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":879,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":876,"title":{},"body":{"modules.html":{}}}],["cache",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/NatsMessengerModule.html":{}}}],["call",{"_index":45,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["called",{"_index":65,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["callhandler",{"_index":656,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["case",{"_index":577,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["catch",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["chain",{"_index":664,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["change",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["charge",{"_index":559,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["check",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["circular",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["city",{"_index":397,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"classes/User.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["civilityuserenum",{"_index":849,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["class",{"_index":15,"title":{"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"classes/NewPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"classes/TokenDto.html":{},"classes/User.html":{},"classes/passwordDto.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"classes/userEmailDto.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EmailDto.html":{},"interfaces/IAuthUp.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"classes/NewPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"classes/TokenDto.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"modules/UserModule.html":{},"interfaces/acknowledgeResponseinterface.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/getTokenInterface.html":{},"classes/passwordDto.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"classes/userEmailDto.html":{},"interfaces/userPayload.html":{}}}],["classes",{"_index":365,"title":{},"body":{"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"classes/NewPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"classes/TokenDto.html":{},"classes/User.html":{},"overview.html":{},"classes/passwordDto.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"classes/userEmailDto.html":{}}}],["client",{"_index":513,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["clientproxy",{"_index":536,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["clientsmodule",{"_index":508,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["clientsmodule.register",{"_index":514,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["cluster_appmodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":320,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":322,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":321,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":323,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_natsmessengermodule",{"_index":501,"title":{},"body":{"modules/NatsMessengerModule.html":{},"overview.html":{}}}],["cluster_natsmessengermodule_exports",{"_index":502,"title":{},"body":{"modules/NatsMessengerModule.html":{},"overview.html":{}}}],["cluster_natsmessengermodule_providers",{"_index":503,"title":{},"body":{"modules/NatsMessengerModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":752,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":754,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":753,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":755,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cmd",{"_index":540,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["code",{"_index":691,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["collection",{"_index":387,"title":{},"body":{"classes/AuthUserToken.html":{},"classes/RefreshToken.html":{},"classes/User.html":{}}}],["column",{"_index":747,"title":{},"body":{"classes/User.html":{}}}],["comment",{"_index":398,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"classes/User.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["communication",{"_index":359,"title":{},"body":{"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{},"injectables/RpcSuccessInterceptor.html":{},"modules/UserModule.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["configmodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/NatsMessengerModule.html":{}}}],["configmodule.forroot",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/NatsMessengerModule.html":{}}}],["configure",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{}}}],["configures",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmparentprofile",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmparentprofile(@payload('params",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmparentprofile(params",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmparentprofileadmin",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmparentprofileadmin(@payload('params",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmparentprofileadmin(params",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmpassword",{"_index":597,"title":{},"body":{"classes/NewPasswordDto.html":{},"classes/passwordDto.html":{}}}],["conforming",{"_index":679,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["connect",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["console.log(\"error",{"_index":570,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["console.log('emit",{"_index":572,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["console.log('send",{"_index":568,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["console.log(require('crypto').randombytes(256).tostring('base64",{"_index":869,"title":{},"body":{"index.html":{}}}],["console.log(this.nats",{"_index":567,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["const",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthUserToken.html":{},"classes/RefreshToken.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/RpcSuccessInterceptor.html":{},"classes/User.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["constructor(nats",{"_index":535,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["containing",{"_index":667,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["context",{"_index":662,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["controller",{"_index":120,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["controllers",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":766,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["createuserdto",{"_index":203,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["creation",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/GlobalEditInterface.html":{},"injectables/NatsMessengerService.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["data",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["database",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["databasemodule",{"_index":451,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules.html":{}}}],["datas",{"_index":675,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["date",{"_index":408,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["declarations",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decode",{"_index":61,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["decorators",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"classes/NewPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/TokenDto.html":{},"classes/User.html":{},"classes/passwordDto.html":{},"classes/signInDto.html":{},"classes/userEmailDto.html":{}}}],["default",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":26,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"injectables/NatsMessengerService.html":{},"classes/NewPasswordDto.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"classes/TokenDto.html":{},"classes/User.html":{},"classes/passwordDto.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"classes/userEmailDto.html":{}}}],["defines",{"_index":515,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["delete",{"_index":690,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["dependencies",{"_index":75,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":562,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["des",{"_index":764,"title":{},"body":{"modules/UserModule.html":{}}}],["description",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"properties.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["details",{"_index":685,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["determine",{"_index":695,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["dev",{"_index":862,"title":{},"body":{"index.html":{}}}],["disable",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RpcSuccessInterceptor.html":{},"modules/UserModule.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["document",{"_index":385,"title":{},"body":{"classes/AuthUserToken.html":{},"interfaces/IAuthUp.html":{},"classes/RefreshToken.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["documentation",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{}}}],["dto/newpassword.dto",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/signin.dto",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/token.dto",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["e",{"_index":868,"title":{},"body":{"index.html":{}}}],["edition",{"_index":486,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["email",{"_index":37,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"injectables/NatsMessengerService.html":{},"interfaces/ParentInterface.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"classes/userEmailDto.html":{},"interfaces/userPayload.html":{}}}],["email+token",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["emaildto",{"_index":453,"title":{"classes/EmailDto.html":{}},"body":{"classes/EmailDto.html":{},"coverage.html":{}}}],["emit",{"_index":527,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emit(cmd",{"_index":538,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emitemailaddedtogroup",{"_index":528,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emitemailaddedtogroup(email",{"_index":541,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emitemailcreationaccount",{"_index":529,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emitemailcreationaccount(email",{"_index":543,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emitemailcreationasso",{"_index":530,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emitemailcreationasso(email",{"_index":546,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emitemaileventedited",{"_index":531,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emitemaileventedited(email",{"_index":548,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emitemailforgotpassword",{"_index":532,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emitemailforgotpassword(email",{"_index":550,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emitemailprofilecreated",{"_index":533,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emitemailprofilecreated(email",{"_index":552,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["emits",{"_index":574,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["empty",{"_index":682,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["endpoints",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["enfant",{"_index":856,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum",{"_index":743,"title":{},"body":{"classes/User.html":{}}}],["enum/user.enum",{"_index":439,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"classes/User.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["enumerations",{"_index":848,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{}}}],["environment",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["error",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{}}}],["eslint",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RpcSuccessInterceptor.html":{},"modules/UserModule.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["eslint/ban",{"_index":708,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["eslint/no",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"modules/UserModule.html":{}}}],["event",{"_index":575,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["event_has_edited",{"_index":595,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["everywhere",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{}}}],["execution",{"_index":661,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["executioncontext",{"_index":654,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["existence",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["exists",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["expires",{"_index":390,"title":{},"body":{"classes/AuthUserToken.html":{},"classes/RefreshToken.html":{}}}],["expiresin",{"_index":357,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":14,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EmailDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"classes/NewPasswordDto.html":{},"interfaces/ParentInterface.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"classes/TokenDto.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"modules/UserModule.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"classes/passwordDto.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"classes/userEmailDto.html":{},"interfaces/userPayload.html":{}}}],["exports",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":616,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["extends",{"_index":7,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"interfaces/IAuthUp.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["external",{"_index":363,"title":{},"body":{"modules/AuthModule.html":{}}}],["extract",{"_index":683,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["extracted",{"_index":69,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt",{"_index":38,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":55,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["extracts",{"_index":703,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["false",{"_index":57,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AuthUserToken.html":{},"classes/RefreshToken.html":{},"classes/User.html":{}}}],["false})@apiproperty",{"_index":734,"title":{},"body":{"classes/User.html":{}}}],["false})@isdate()@apiproperty",{"_index":721,"title":{},"body":{"classes/User.html":{}}}],["false})@isstring()@maxlength(200)@apiproperty",{"_index":725,"title":{},"body":{"classes/User.html":{}}}],["false})@isstrongpassword()@matches(undefined",{"_index":737,"title":{},"body":{"classes/User.html":{}}}],["false})@maxlength(14)@apiproperty",{"_index":723,"title":{},"body":{"classes/User.html":{}}}],["false})@maxlength(70)@apiproperty",{"_index":717,"title":{},"body":{"classes/User.html":{}}}],["false})@minlength(10)@maxlength(14)@apiproperty",{"_index":740,"title":{},"body":{"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EmailDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"classes/NewPasswordDto.html":{},"interfaces/ParentInterface.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"classes/TokenDto.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"modules/UserModule.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"coverage.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"classes/passwordDto.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"classes/userEmailDto.html":{},"interfaces/userPayload.html":{}}}],["findauthtokenbytoken",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["findauthtokenbytoken(@payload('params",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["findauthtokenbytoken(params",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["first",{"_index":705,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["firstname",{"_index":399,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"interfaces/ParentInterface.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["firstvaluefrom",{"_index":556,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["firstvaluefrom(this.nats.send(cmd",{"_index":569,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["forgot_password_link",{"_index":580,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["forgotpassword",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(@payload('body",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(body",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotten",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["format",{"_index":696,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["forwardref",{"_index":332,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["function",{"_index":621,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{},"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["functions",{"_index":857,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":874,"title":{},"body":{"index.html":{}}}],["generates",{"_index":649,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["gestion",{"_index":763,"title":{},"body":{"modules/UserModule.html":{}}}],["getfirstvalue",{"_index":776,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getfirstvalue(values",{"_index":700,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["getting",{"_index":860,"title":{"index.html":{}},"body":{}}],["gettokeninterface",{"_index":232,"title":{"interfaces/getTokenInterface.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"coverage.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["getuserscreatedinterface",{"_index":471,"title":{"interfaces/getUsersCreatedInterface.html":{}},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"coverage.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["global",{"_index":331,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["globaleditinterface",{"_index":466,"title":{"interfaces/GlobalEditInterface.html":{}},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"coverage.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["graph",{"_index":880,"title":{},"body":{"modules.html":{}}}],["group",{"_index":590,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["group_id",{"_index":400,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"classes/User.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["génér",{"_index":870,"title":{},"body":{"index.html":{}}}],["générer",{"_index":865,"title":{},"body":{"index.html":{}}}],["handle",{"_index":646,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["handler",{"_index":663,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["handling",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["header",{"_index":51,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["https://docs.nestjs.com/recipes/passport",{"_index":864,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com/security/authentication",{"_index":863,"title":{},"body":{"index.html":{}}}],["iauthup",{"_index":488,"title":{"interfaces/IAuthUp.html":{}},"body":{"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"coverage.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["id",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/GlobalEditInterface.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"interfaces/ParentInterface.html":{},"classes/User.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["iddto",{"_index":212,"title":{"classes/IdDto.html":{},"classes/IdDto-1.html":{}},"body":{"controllers/AuthController.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"coverage.html":{}}}],["identifier",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["if(!userexists",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["ignoreexpiration",{"_index":56,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["import",{"_index":9,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"classes/NewPasswordDto.html":{},"interfaces/ParentInterface.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"classes/TokenDto.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"modules/UserModule.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"classes/passwordDto.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"classes/userEmailDto.html":{},"interfaces/userPayload.html":{}}}],["imports",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/NatsMessengerModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":678,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["including",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"injectables/NatsMessengerService.html":{},"classes/NewPasswordDto.html":{},"interfaces/ParentInterface.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"classes/TokenDto.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"classes/passwordDto.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"miscellaneous/typealiases.html":{},"classes/userEmailDto.html":{},"interfaces/userPayload.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EmailDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"classes/NewPasswordDto.html":{},"interfaces/ParentInterface.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"classes/TokenDto.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"modules/UserModule.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"classes/passwordDto.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"classes/userEmailDto.html":{},"interfaces/userPayload.html":{}}}],["information",{"_index":68,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["inherited",{"_index":632,"title":{},"body":{"classes/ResponseErrorInterface.html":{},"classes/ResponseSuccessInterface.html":{}}}],["initialize",{"_index":681,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["inject",{"_index":558,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["inject('nats_service",{"_index":564,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/NatsMessengerService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/RpcSuccessInterceptor.html":{}},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/NatsMessengerService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/NatsMessengerService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/RpcSuccessInterceptor.html":{},"overview.html":{}}}],["injects",{"_index":561,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["intercept",{"_index":652,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{}}}],["intercept(_context",{"_index":653,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["interceptor",{"_index":645,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["intercepts",{"_index":658,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["interface",{"_index":465,"title":{"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"interfaces/ParentInterface.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"interfaces/ParentInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"coverage.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["interface/authup.interface",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["interfaces",{"_index":467,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"interfaces/ParentInterface.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"overview.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["is_public_key",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":401,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"classes/User.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["isarray",{"_index":746,"title":{},"body":{"classes/User.html":{}}}],["isboolean",{"_index":421,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isdate",{"_index":409,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["isemail",{"_index":432,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"classes/signInDto.html":{},"classes/userEmailDto.html":{}}}],["isenum",{"_index":433,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum(typeuserenum",{"_index":449,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isglobal",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["ismongoid",{"_index":372,"title":{},"body":{"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":434,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty()@isenum(typeuserenum",{"_index":430,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty()@ismongoid",{"_index":406,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ispublic",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isstring",{"_index":369,"title":{},"body":{"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"classes/NewPasswordDto.html":{},"classes/RefreshTokenDto.html":{},"classes/TokenDto.html":{},"classes/User.html":{},"classes/passwordDto.html":{},"classes/signInDto.html":{}}}],["isstring()@isstrongpassword()@matches(undefined",{"_index":424,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/NewPasswordDto.html":{},"classes/passwordDto.html":{}}}],["isstring()@maxlength(100",{"_index":404,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@maxlength(200",{"_index":413,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@maxlength(50)@minlength(3",{"_index":417,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@maxlength(70)@isemail",{"_index":415,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@minlength(10)@maxlength(14",{"_index":411,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstrongpassword",{"_index":435,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/NewPasswordDto.html":{},"classes/User.html":{},"classes/passwordDto.html":{}}}],["json.parse(json.stringify(values",{"_index":701,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["jwt",{"_index":21,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":54,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["jwtmodule",{"_index":335,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":42,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["key",{"_index":59,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"classes/EmailDto.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["kid",{"_index":588,"title":{},"body":{"injectables/NatsMessengerService.html":{},"miscellaneous/enumerations.html":{}}}],["kideditinterface",{"_index":481,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"miscellaneous/typealiases.html":{}}}],["la",{"_index":762,"title":{},"body":{"modules/UserModule.html":{}}}],["lastname",{"_index":402,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"interfaces/ParentInterface.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["legend",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["librairie",{"_index":872,"title":{},"body":{"index.html":{}}}],["library",{"_index":875,"title":{},"body":{"index.html":{}}}],["libs/nats",{"_index":505,"title":{},"body":{"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"coverage.html":{}}}],["license",{"_index":892,"title":{},"body":{"properties.html":{}}}],["line",{"_index":707,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["link",{"_index":582,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["link_token_creation_account",{"_index":585,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["link_token_creation_asso",{"_index":587,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["literal",{"_index":458,"title":{},"body":{"classes/EmailDto.html":{},"interfaces/ParentInterface.html":{},"classes/User.html":{}}}],["load",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["local",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@payload('user",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(user",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["madame",{"_index":855,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["main",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["makes",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{}}}],["manage",{"_index":511,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["management",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{}}}],["map",{"_index":668,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["match",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{}}}],["matches",{"_index":436,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/NewPasswordDto.html":{},"classes/User.html":{},"classes/passwordDto.html":{}}}],["matches(regexp(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":443,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/NewPasswordDto.html":{},"classes/User.html":{},"classes/passwordDto.html":{}}}],["matching",{"_index":17,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EmailDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"classes/NewPasswordDto.html":{},"interfaces/ParentInterface.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"classes/TokenDto.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"modules/UserModule.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/passwordDto.html":{},"properties.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"miscellaneous/typealiases.html":{},"classes/userEmailDto.html":{},"interfaces/userPayload.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":437,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["maxlength(100",{"_index":448,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(14",{"_index":447,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["maxlength(200",{"_index":450,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["maxlength(50",{"_index":440,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["maxlength(70",{"_index":442,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["message",{"_index":425,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/IAuthUp.html":{},"classes/NewPasswordDto.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/getTokenInterface.html":{},"classes/passwordDto.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["messagepattern",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern('authtoken_by_token",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern('confirm_profile_parent_admin",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern('confirm_profile_parent_user",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern('forgot_password",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern('login",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern('logout",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern('new_password",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern('new_password_user",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern('refreshtoken",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern('register_parent_admin",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern('update_parent_admin_profile",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["messagepattern('update_parent_profile",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["messaging",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["messenger",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["messenger.module.ts",{"_index":507,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["messenger.service",{"_index":510,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["messenger.service.ts",{"_index":526,"title":{},"body":{"injectables/NatsMessengerService.html":{},"coverage.html":{}}}],["messenger.service.ts:17",{"_index":555,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["messenger.service.ts:28",{"_index":539,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["messenger.service.ts:40",{"_index":551,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["messenger.service.ts:51",{"_index":553,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["messenger.service.ts:61",{"_index":545,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["messenger.service.ts:62",{"_index":583,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["messenger.service.ts:74",{"_index":547,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["messenger.service.ts:8",{"_index":537,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["messenger.service.ts:85",{"_index":542,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["messenger.service.ts:96",{"_index":549,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["messenger/src/nats",{"_index":506,"title":{},"body":{"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"coverage.html":{}}}],["metadata",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":64,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["methods",{"_index":23,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/RpcSuccessInterceptor.html":{}}}],["minlength",{"_index":438,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["minlength(10",{"_index":446,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["minlength(3",{"_index":441,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["miscellaneous",{"_index":847,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modification",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["module",{"_index":72,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/NatsMessengerModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":74,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/NatsMessengerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":386,"title":{},"body":{"classes/AuthUserToken.html":{},"interfaces/IAuthUp.html":{},"classes/RefreshToken.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["mongoosemodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":343,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forroot(`${process.env.uri_bdd}?retrywrites=true&w=majority",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["monsieur",{"_index":853,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mr",{"_index":852,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mrs",{"_index":854,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ms",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["name",{"_index":31,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/EmailDto.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/RpcSuccessInterceptor.html":{},"modules/UserModule.html":{},"miscellaneous/functions.html":{}}}],["nats",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"modules/UserModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["nats://${process.env.nats_dns}:${process.env.nats_port",{"_index":524,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["nats_service",{"_index":517,"title":{},"body":{"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{}}}],["natsmessengermodule",{"_index":84,"title":{"modules/NatsMessengerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["natsmessengerservice",{"_index":504,"title":{"injectables/NatsMessengerService.html":{}},"body":{"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"coverage.html":{},"overview.html":{}}}],["necessary",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["nest",{"_index":873,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":11,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/RpcSuccessInterceptor.html":{},"modules/UserModule.html":{},"dependencies.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["nestjs/config",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/NatsMessengerModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["nestjs/microservices",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthUserToken.html":{},"modules/DatabaseModule.html":{},"classes/RefreshToken.html":{},"classes/User.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":13,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":384,"title":{},"body":{"classes/AuthUserToken.html":{},"classes/User.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["newkid",{"_index":472,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["newlinktoken",{"_index":544,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["newparent",{"_index":473,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["newpassworddto",{"_index":184,"title":{"classes/NewPasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/NewPasswordDto.html":{},"coverage.html":{}}}],["newuserpassword",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["newuserpassword(body",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["next",{"_index":655,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["node",{"_index":867,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception('oups",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception(error",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["null",{"_index":702,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["number",{"_index":462,"title":{},"body":{"classes/EmailDto.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["object",{"_index":673,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["object.keys(values).length",{"_index":699,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["observable",{"_index":666,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["ok",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["omit",{"_index":480,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"miscellaneous/typealiases.html":{}}}],["operations",{"_index":560,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["optional",{"_index":33,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"injectables/NatsMessengerService.html":{},"interfaces/ParentInterface.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["options",{"_index":520,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["out",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":882,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":807,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paginate",{"_index":672,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["pagination",{"_index":684,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["param",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["parameters",{"_index":30,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"classes/EmailDto.html":{},"injectables/NatsMessengerService.html":{}}}],["params.userid",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["parent",{"_index":46,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"injectables/RefreshTokenStrategy.html":{},"interfaces/assoUserEditInterface.html":{},"miscellaneous/enumerations.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["parent(admin",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["parent(user",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["parentadmincreateinterface",{"_index":485,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"miscellaneous/typealiases.html":{}}}],["parentadmineditinterface",{"_index":487,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"miscellaneous/typealiases.html":{}}}],["parenteditinterface",{"_index":479,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"miscellaneous/typealiases.html":{}}}],["parentinterface",{"_index":477,"title":{"interfaces/ParentInterface.html":{}},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"coverage.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["passing",{"_index":619,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["passport",{"_index":40,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":41,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["passportstrategy(strategy",{"_index":20,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["passportstrategy(strategy,'jwt",{"_index":611,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["passreqtocallback",{"_index":622,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["password",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"injectables/NatsMessengerService.html":{},"classes/NewPasswordDto.html":{},"interfaces/ParentInterface.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"classes/passwordDto.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["password/:token",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["passworddto",{"_index":797,"title":{"classes/passwordDto.html":{}},"body":{"coverage.html":{},"classes/passwordDto.html":{}}}],["passwords",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["payload",{"_index":34,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["payload('body",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["payload('params",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["payload.datas",{"_index":697,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["payload.email",{"_index":71,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["payload.paginate",{"_index":688,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["payload.statuscode",{"_index":693,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["payload.sub",{"_index":70,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["pg",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":403,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"classes/User.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["pick",{"_index":482,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"miscellaneous/typealiases.html":{}}}],["pipe(map(value",{"_index":711,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["post",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["pour",{"_index":761,"title":{},"body":{"modules/UserModule.html":{}}}],["prefix",{"_index":624,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["private",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["process.env.jwt_access_secret",{"_index":63,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{}}}],["process.env.jwt_refresh_secret",{"_index":617,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["process.env.prefix_uri}/events",{"_index":593,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["production",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/NatsMessengerModule.html":{}}}],["profile",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["profile/:id",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile/:token",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile/admin/:token",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["promise",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["prop",{"_index":381,"title":{},"body":{"classes/AuthUserToken.html":{},"classes/RefreshToken.html":{},"classes/User.html":{}}}],["prop()@apiproperty()@isarray",{"_index":719,"title":{},"body":{"classes/User.html":{}}}],["prop()@isstring",{"_index":376,"title":{},"body":{"classes/AuthUserToken.html":{}}}],["prop()@isstring()@ismongoid",{"_index":379,"title":{},"body":{"classes/AuthUserToken.html":{}}}],["prop()@isstring()@maxlength(200)@apiproperty",{"_index":731,"title":{},"body":{"classes/User.html":{}}}],["prop()@isstring()@maxlength(50)@minlength(3)@apiproperty",{"_index":729,"title":{},"body":{"classes/User.html":{}}}],["prop()@maxlength(70)@column()@isemail()@apiproperty",{"_index":727,"title":{},"body":{"classes/User.html":{}}}],["prop({default",{"_index":733,"title":{},"body":{"classes/User.html":{}}}],["prop({required",{"_index":716,"title":{},"body":{"classes/User.html":{}}}],["prop({type",{"_index":742,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":367,"title":{"properties.html":{}},"body":{"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"classes/NewPasswordDto.html":{},"interfaces/ParentInterface.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"classes/TokenDto.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"classes/passwordDto.html":{},"properties.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"classes/userEmailDto.html":{},"interfaces/userPayload.html":{}}}],["property",{"_index":706,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["provided",{"_index":686,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["providers",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["provides",{"_index":360,"title":{},"body":{"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{}}}],["public",{"_index":789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["put",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["react",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":394,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"injectables/NatsMessengerService.html":{}}}],["reference",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["reflect",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["refresh(@payload('user",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(user",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtoken",{"_index":344,"title":{"classes/RefreshToken.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/IAuthUp.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenStrategy.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"coverage.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["refreshtokendocument",{"_index":602,"title":{},"body":{"classes/RefreshToken.html":{},"miscellaneous/typealiases.html":{}}}],["refreshtokendto",{"_index":605,"title":{"classes/RefreshTokenDto.html":{}},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["refreshtokenguard",{"_index":608,"title":{"injectables/RefreshTokenGuard.html":{}},"body":{"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["refreshtokens",{"_index":603,"title":{},"body":{"classes/RefreshToken.html":{}}}],["refreshtokenschema",{"_index":329,"title":{},"body":{"modules/AuthModule.html":{},"classes/RefreshToken.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshtokenstrategy",{"_index":324,"title":{"injectables/RefreshTokenStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/RefreshTokenStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["register",{"_index":512,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["related",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["remove",{"_index":623,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["req",{"_index":615,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["req.get('authorization').replace('bearer",{"_index":625,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["request",{"_index":52,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["required",{"_index":750,"title":{},"body":{"classes/User.html":{}}}],["reset",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":566,"title":{},"body":{"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["responseerrorinterface",{"_index":628,"title":{"classes/ResponseErrorInterface.html":{}},"body":{"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"coverage.html":{}}}],["responseinterface",{"_index":630,"title":{"classes/ResponseInterface.html":{}},"body":{"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"coverage.html":{}}}],["responseinterface:12",{"_index":642,"title":{},"body":{"classes/ResponseSuccessInterface.html":{}}}],["responseinterface:16",{"_index":633,"title":{},"body":{"classes/ResponseErrorInterface.html":{}}}],["responseinterface:5",{"_index":635,"title":{},"body":{"classes/ResponseErrorInterface.html":{}}}],["responseinterface:6",{"_index":643,"title":{},"body":{"classes/ResponseSuccessInterface.html":{}}}],["responseinterface:7",{"_index":634,"title":{},"body":{"classes/ResponseErrorInterface.html":{},"classes/ResponseSuccessInterface.html":{}}}],["responseinterface:8",{"_index":636,"title":{},"body":{"classes/ResponseErrorInterface.html":{},"classes/ResponseSuccessInterface.html":{}}}],["responsepayloadnat",{"_index":651,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["responsepayloadnat(value",{"_index":712,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["responsepayloadnat(values",{"_index":680,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["responsepayloadnatsinterface",{"_index":671,"title":{"interfaces/responsePayloadNatsInterface.html":{}},"body":{"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["responses",{"_index":648,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["responsesuccessinterface",{"_index":637,"title":{"classes/ResponseSuccessInterface.html":{}},"body":{"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"coverage.html":{}}}],["responsible",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":16,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EmailDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"classes/NewPasswordDto.html":{},"interfaces/ParentInterface.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"classes/TokenDto.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"modules/UserModule.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"index.html":{},"modules.html":{},"overview.html":{},"classes/passwordDto.html":{},"properties.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"miscellaneous/typealiases.html":{},"classes/userEmailDto.html":{},"interfaces/userPayload.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":48,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["return",{"_index":67,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["returns",{"_index":35,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["review",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["role",{"_index":475,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"classes/User.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["roleuserenum",{"_index":469,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"miscellaneous/enumerations.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["roleuserenum.admin",{"_index":476,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["rpcsuccessinterceptor",{"_index":237,"title":{"injectables/RpcSuccessInterceptor.html":{}},"body":{"controllers/AuthController.html":{},"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["rxjs",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["rxjs/internal/firstvaluefrom",{"_index":557,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["rxjs/operators",{"_index":669,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["schema",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthUserToken.html":{},"classes/RefreshToken.html":{},"classes/User.html":{},"modules/UserModule.html":{}}}],["schema/authusertoken.schema",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["schema/refreshtoken.schema",{"_index":330,"title":{},"body":{"modules/AuthModule.html":{}}}],["schema/user.schema",{"_index":470,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"modules/UserModule.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["schemafactory",{"_index":382,"title":{},"body":{"classes/AuthUserToken.html":{},"classes/RefreshToken.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(authusertoken",{"_index":392,"title":{},"body":{"classes/AuthUserToken.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(refreshtoken",{"_index":604,"title":{},"body":{"classes/RefreshToken.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":751,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{}}}],["secret",{"_index":58,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["secretorkey",{"_index":62,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["send",{"_index":534,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["send(cmd",{"_index":554,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["send_email_creation_account",{"_index":584,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["send_email_creation_asso",{"_index":586,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["send_email_event_edited",{"_index":594,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["send_email_forgot_password",{"_index":579,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["send_email_group_has_been_added",{"_index":591,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["send_email_profile_created",{"_index":581,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["sendemailforgotpasswordresponseinterface",{"_index":493,"title":{"interfaces/sendEmailForgotPasswordResponseInterface.html":{}},"body":{"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"coverage.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["sender",{"_index":455,"title":{},"body":{"classes/EmailDto.html":{}}}],["sending",{"_index":576,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["sends",{"_index":565,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["servers",{"_index":522,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["service",{"_index":361,"title":{},"body":{"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{}}}],["set",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/NatsMessengerModule.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["setmetadata(is_public_key",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sign",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{}}}],["signin",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(@payload('body",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(body",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":195,"title":{"classes/signInDto.html":{}},"body":{"controllers/AuthController.html":{},"coverage.html":{},"classes/signInDto.html":{}}}],["signininterface",{"_index":494,"title":{"classes/signInInterface.html":{}},"body":{"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"coverage.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["signinresponseinterface",{"_index":492,"title":{"interfaces/signInResponseInterface.html":{}},"body":{"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"coverage.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["signoptions",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(@payload('body",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(body",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"injectables/AccessTokenStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/EmailDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"modules/NatsMessengerModule.html":{},"injectables/NatsMessengerService.html":{},"classes/NewPasswordDto.html":{},"interfaces/ParentInterface.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenGuard.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"classes/TokenDto.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"modules/UserModule.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"classes/passwordDto.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"classes/userEmailDto.html":{},"interfaces/userPayload.html":{}}}],["specifies",{"_index":521,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["src/.../authusertoken.schema.ts",{"_index":902,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":858,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../refreshtoken.schema.ts",{"_index":903,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../rpcsuccessinterceptor.ts",{"_index":859,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.enum.ts",{"_index":850,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.schema.ts",{"_index":904,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../userres.interface.ts",{"_index":901,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.module.ts",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:103",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:128",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:158",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:174",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:190",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:207",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:223",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:238",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:33",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:52",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:70",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:86",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":758,"title":{},"body":{"modules/UserModule.html":{}}}],["src/auth/auth.module.ts",{"_index":325,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["src/auth/common/guards/accesstoken.guard.ts",{"_index":6,"title":{},"body":{"injectables/AccessTokenGuard.html":{},"coverage.html":{}}}],["src/auth/common/guards/refreshtoken.guard.ts",{"_index":609,"title":{},"body":{"injectables/RefreshTokenGuard.html":{},"coverage.html":{}}}],["src/auth/decorators/public.decorator.ts",{"_index":787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/authtoken.dto.ts",{"_index":366,"title":{},"body":{"classes/AuthTokenDto.html":{},"coverage.html":{}}}],["src/auth/dto/authtoken.dto.ts:10",{"_index":371,"title":{},"body":{"classes/AuthTokenDto.html":{}}}],["src/auth/dto/authtoken.dto.ts:13",{"_index":373,"title":{},"body":{"classes/AuthTokenDto.html":{}}}],["src/auth/dto/authtoken.dto.ts:7",{"_index":370,"title":{},"body":{"classes/AuthTokenDto.html":{}}}],["src/auth/dto/email.dto.ts",{"_index":454,"title":{},"body":{"classes/EmailDto.html":{},"coverage.html":{}}}],["src/auth/dto/email.dto.ts:12",{"_index":463,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/auth/dto/email.dto.ts:13",{"_index":459,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/auth/dto/email.dto.ts:3",{"_index":461,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/auth/dto/email.dto.ts:4",{"_index":460,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/auth/dto/email.dto.ts:8",{"_index":464,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/auth/dto/id.dto.ts",{"_index":495,"title":{},"body":{"classes/IdDto.html":{},"coverage.html":{}}}],["src/auth/dto/id.dto.ts:7",{"_index":496,"title":{},"body":{"classes/IdDto.html":{}}}],["src/auth/dto/newpassword.dto.ts",{"_index":596,"title":{},"body":{"classes/NewPasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/newpassword.dto.ts:14",{"_index":598,"title":{},"body":{"classes/NewPasswordDto.html":{}}}],["src/auth/dto/newpassword.dto.ts:9",{"_index":599,"title":{},"body":{"classes/NewPasswordDto.html":{}}}],["src/auth/dto/refreshtoken.dto.ts",{"_index":606,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/auth/dto/refreshtoken.dto.ts:7",{"_index":607,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["src/auth/dto/signin.dto.ts",{"_index":792,"title":{},"body":{"coverage.html":{},"classes/signInDto.html":{}}}],["src/auth/dto/signin.dto.ts:6",{"_index":895,"title":{},"body":{"classes/signInDto.html":{}}}],["src/auth/dto/signin.dto.ts:9",{"_index":896,"title":{},"body":{"classes/signInDto.html":{}}}],["src/auth/dto/token.dto.ts",{"_index":713,"title":{},"body":{"classes/TokenDto.html":{},"coverage.html":{}}}],["src/auth/dto/token.dto.ts:7",{"_index":714,"title":{},"body":{"classes/TokenDto.html":{}}}],["src/auth/interface/authup.interface.ts",{"_index":489,"title":{},"body":{"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"coverage.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["src/auth/interface/authup.interface.ts:41",{"_index":897,"title":{},"body":{"classes/signInInterface.html":{}}}],["src/auth/interface/authup.interface.ts:42",{"_index":898,"title":{},"body":{"classes/signInInterface.html":{}}}],["src/auth/schema/authusertoken.schema.ts",{"_index":375,"title":{},"body":{"classes/AuthUserToken.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/auth/schema/authusertoken.schema.ts:14",{"_index":377,"title":{},"body":{"classes/AuthUserToken.html":{}}}],["src/auth/schema/authusertoken.schema.ts:18",{"_index":378,"title":{},"body":{"classes/AuthUserToken.html":{}}}],["src/auth/schema/authusertoken.schema.ts:23",{"_index":380,"title":{},"body":{"classes/AuthUserToken.html":{}}}],["src/auth/schema/refreshtoken.schema.ts",{"_index":600,"title":{},"body":{"classes/RefreshToken.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/auth/schema/refreshtoken.schema.ts:10",{"_index":601,"title":{},"body":{"classes/RefreshToken.html":{}}}],["src/auth/strategies/accesstoken.strategy.ts",{"_index":19,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/accesstoken.strategy.ts:11",{"_index":27,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["src/auth/strategies/accesstoken.strategy.ts:24",{"_index":29,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["src/auth/strategies/refreshtoken.strategy.ts",{"_index":610,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/refreshtoken.strategy.ts:21",{"_index":614,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["src/auth/strategies/refreshtoken.strategy.ts:7",{"_index":612,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["src/config/config.module.ts",{"_index":452,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/interceptor/rpcsuccessinterceptor",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/interceptor/rpcsuccessinterceptor.ts",{"_index":644,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["src/interceptor/rpcsuccessinterceptor.ts:67",{"_index":657,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{}}}],["src/main.ts",{"_index":794,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/dto/createuser.dto",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/user/dto/createuser.dto.ts",{"_index":393,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/createuser.dto.ts:14",{"_index":423,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/createuser.dto.ts:19",{"_index":416,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/createuser.dto.ts:24",{"_index":427,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/createuser.dto.ts:29",{"_index":428,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/createuser.dto.ts:34",{"_index":412,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/createuser.dto.ts:38",{"_index":405,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/createuser.dto.ts:42",{"_index":407,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/createuser.dto.ts:46",{"_index":431,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/createuser.dto.ts:49",{"_index":410,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/createuser.dto.ts:53",{"_index":414,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/createuser.dto.ts:56",{"_index":422,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/createuser.dto.ts:59",{"_index":419,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/createuser.dto.ts:9",{"_index":418,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/user/dto/id.dto",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/user/dto/id.dto.ts",{"_index":498,"title":{},"body":{"classes/IdDto-1.html":{},"coverage.html":{}}}],["src/user/dto/id.dto.ts:7",{"_index":499,"title":{},"body":{"classes/IdDto-1.html":{}}}],["src/user/dto/id.dto.ts:8",{"_index":500,"title":{},"body":{"classes/IdDto-1.html":{}}}],["src/user/dto/password.dto.ts",{"_index":796,"title":{},"body":{"coverage.html":{},"classes/passwordDto.html":{}}}],["src/user/dto/password.dto.ts:14",{"_index":888,"title":{},"body":{"classes/passwordDto.html":{}}}],["src/user/dto/password.dto.ts:9",{"_index":889,"title":{},"body":{"classes/passwordDto.html":{}}}],["src/user/dto/useremail.dto",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/user/dto/useremail.dto.ts",{"_index":798,"title":{},"body":{"coverage.html":{},"classes/userEmailDto.html":{}}}],["src/user/dto/useremail.dto.ts:7",{"_index":905,"title":{},"body":{"classes/userEmailDto.html":{}}}],["src/user/enum/user.enum.ts",{"_index":851,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/user/interface/response.interface.ts",{"_index":629,"title":{},"body":{"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"coverage.html":{}}}],["src/user/interface/response.interface.ts:5",{"_index":640,"title":{},"body":{"classes/ResponseInterface.html":{}}}],["src/user/interface/response.interface.ts:6",{"_index":638,"title":{},"body":{"classes/ResponseInterface.html":{}}}],["src/user/interface/response.interface.ts:7",{"_index":639,"title":{},"body":{"classes/ResponseInterface.html":{}}}],["src/user/interface/response.interface.ts:8",{"_index":641,"title":{},"body":{"classes/ResponseInterface.html":{}}}],["src/user/interface/userres.interface.ts",{"_index":468,"title":{},"body":{"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"interfaces/assoUserEditInterface.html":{},"coverage.html":{},"interfaces/getUsersCreatedInterface.html":{},"miscellaneous/typealiases.html":{}}}],["src/user/schema/user.schema",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["src/user/schema/user.schema.ts",{"_index":715,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schema/user.schema.ts:19",{"_index":730,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:26",{"_index":736,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:33",{"_index":728,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:39",{"_index":739,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:45",{"_index":741,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:50",{"_index":724,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:55",{"_index":718,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:59",{"_index":745,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:64",{"_index":722,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:70",{"_index":726,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:74",{"_index":735,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:80",{"_index":732,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:85",{"_index":720,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["src/user/user.module.ts",{"_index":756,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/user/user.service.ts",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["standardized",{"_index":650,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["started",{"_index":861,"title":{"index.html":{}},"body":{}}],["statements",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":631,"title":{},"body":{"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["statuscode",{"_index":674,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["strategies/accesstoken.strategy",{"_index":327,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/refreshtoken.strategy",{"_index":326,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":39,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["string",{"_index":44,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"injectables/NatsMessengerService.html":{},"classes/NewPasswordDto.html":{},"interfaces/ParentInterface.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"classes/TokenDto.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"miscellaneous/functions.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"classes/passwordDto.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"classes/userEmailDto.html":{},"interfaces/userPayload.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":670,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["sub",{"_index":43,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["subject",{"_index":456,"title":{},"body":{"classes/EmailDto.html":{}}}],["successful",{"_index":647,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["super",{"_index":47,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["support",{"_index":877,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":878,"title":{},"body":{"modules.html":{}}}],["table",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["templateid",{"_index":457,"title":{},"body":{"classes/EmailDto.html":{}}}],["this.authservice.confirmprofile(params.token",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.createnewpassword(authtoken.user_id",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.findauthtokenbytoken(params.token",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(user.sub",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtokens(user.sub",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(body",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.sendemailforgotpassword(body.email",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(body",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.emit",{"_index":578,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["this.nats.emit(cmd",{"_index":573,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["this.userservice.getuserbyid(params.userid",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.hasuserbyid(authtoken.user_id",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.setuser(params.id",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.updatepassworduser(params.userid",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.userparentadminedit(params.id",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["through",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["throw",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["timestamps",{"_index":388,"title":{},"body":{"classes/AuthUserToken.html":{},"classes/RefreshToken.html":{},"classes/User.html":{}}}],["todo",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/NatsMessengerModule.html":{}}}],["token",{"_index":49,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"interfaces/IAuthUp.html":{},"injectables/NatsMessengerService.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/TokenDto.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/getTokenInterface.html":{},"index.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["tokendto",{"_index":137,"title":{"classes/TokenDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/TokenDto.html":{},"coverage.html":{}}}],["tokeninterface",{"_index":490,"title":{"interfaces/TokenInterface.html":{}},"body":{"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"coverage.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["tokens",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["transformed",{"_index":665,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["transformer",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["transforms",{"_index":659,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["transport",{"_index":509,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["transport.nats",{"_index":519,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["trim",{"_index":626,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["true",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthUserToken.html":{},"modules/NatsMessengerModule.html":{},"classes/RefreshToken.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["type",{"_index":32,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"injectables/NatsMessengerService.html":{},"classes/NewPasswordDto.html":{},"interfaces/ParentInterface.html":{},"classes/RefreshToken.html":{},"classes/RefreshTokenDto.html":{},"injectables/RefreshTokenStrategy.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"injectables/RpcSuccessInterceptor.html":{},"classes/TokenDto.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"classes/passwordDto.html":{},"interfaces/responsePayloadNatsInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInDto.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"miscellaneous/typealiases.html":{},"classes/userEmailDto.html":{},"interfaces/userPayload.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":899,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":748,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["types",{"_index":709,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"dependencies.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["types/bcrypt",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/RpcSuccessInterceptor.html":{},"modules/UserModule.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["typeuserenum",{"_index":429,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/ParentInterface.html":{},"classes/User.html":{},"interfaces/assoUserEditInterface.html":{},"miscellaneous/enumerations.html":{},"interfaces/getUsersCreatedInterface.html":{}}}],["typeuserenum})@apiproperty",{"_index":744,"title":{},"body":{"classes/User.html":{}}}],["un",{"_index":866,"title":{},"body":{"index.html":{}}}],["une",{"_index":871,"title":{},"body":{"index.html":{}}}],["unique",{"_index":516,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["unknown",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["unlicensed",{"_index":893,"title":{},"body":{"properties.html":{}}}],["unused",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"modules/UserModule.html":{}}}],["updateparentadminprofile",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateparentadminprofile(params",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateparentprofile",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateparentprofile(@payload('params",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["updateparentprofile(params",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["upon",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"injectables/NatsMessengerService.html":{}}}],["use",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{}}}],["used",{"_index":60,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["useinterceptors",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors(rpcsuccessinterceptor",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":163,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"modules/UserModule.html":{},"interfaces/acknowledgeResponseinterface.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["user's",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.controller",{"_index":759,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":760,"title":{},"body":{"modules/UserModule.html":{}}}],["user/update",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["user/user.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user_id",{"_index":368,"title":{},"body":{"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{}}}],["usercontroller",{"_index":757,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{}}}],["userdocument",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/GlobalEditInterface.html":{},"interfaces/IAuthUp.html":{},"interfaces/ParentInterface.html":{},"classes/ResponseErrorInterface.html":{},"classes/ResponseInterface.html":{},"classes/ResponseSuccessInterface.html":{},"interfaces/TokenInterface.html":{},"classes/User.html":{},"interfaces/acknowledgeResponseinterface.html":{},"interfaces/assoUserEditInterface.html":{},"interfaces/getTokenInterface.html":{},"interfaces/getUsersCreatedInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"miscellaneous/typealiases.html":{},"interfaces/userPayload.html":{}}}],["useremaildto",{"_index":168,"title":{"classes/userEmailDto.html":{}},"body":{"controllers/AuthController.html":{},"coverage.html":{},"classes/userEmailDto.html":{}}}],["userexists",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{}}}],["userid",{"_index":36,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"controllers/AuthController.html":{},"classes/IdDto-1.html":{}}}],["usermodule",{"_index":85,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["usernewpassword",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["usernewpassword(body",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["userpasswordupdate",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["userpayload",{"_index":179,"title":{"interfaces/userPayload.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/IAuthUp.html":{},"interfaces/TokenInterface.html":{},"interfaces/acknowledgeResponseinterface.html":{},"coverage.html":{},"interfaces/getTokenInterface.html":{},"interfaces/sendEmailForgotPasswordResponseInterface.html":{},"classes/signInInterface.html":{},"interfaces/signInResponseInterface.html":{},"interfaces/userPayload.html":{}}}],["users",{"_index":749,"title":{},"body":{"classes/User.html":{}}}],["userschema",{"_index":333,"title":{},"body":{"modules/AuthModule.html":{},"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":518,"title":{},"body":{"modules/NatsMessengerModule.html":{}}}],["using",{"_index":563,"title":{},"body":{"injectables/NatsMessengerService.html":{},"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["utilisateurs",{"_index":765,"title":{},"body":{"modules/UserModule.html":{}}}],["uuid",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["uuidv4",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["validate",{"_index":24,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validate(payload",{"_index":28,"title":{},"body":{"injectables/AccessTokenStrategy.html":{}}}],["validate(req",{"_index":613,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["validating",{"_index":66,"title":{},"body":{"injectables/AccessTokenStrategy.html":{},"modules/AuthModule.html":{},"injectables/RefreshTokenStrategy.html":{}}}],["validation",{"_index":620,"title":{},"body":{"injectables/RefreshTokenStrategy.html":{}}}],["validator",{"_index":374,"title":{},"body":{"classes/AuthTokenDto.html":{},"classes/AuthUserToken.html":{},"classes/CreateUserDto.html":{},"classes/IdDto.html":{},"classes/IdDto-1.html":{},"classes/NewPasswordDto.html":{},"classes/RefreshTokenDto.html":{},"classes/TokenDto.html":{},"classes/User.html":{},"dependencies.html":{},"classes/passwordDto.html":{},"classes/signInDto.html":{},"classes/userEmailDto.html":{}}}],["value",{"_index":704,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":676,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"miscellaneous/functions.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["values.code",{"_index":694,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["values.paginate",{"_index":689,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["values?.code",{"_index":692,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["values?.paginate",{"_index":687,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["values[object.keys(values)[0",{"_index":710,"title":{},"body":{"injectables/RpcSuccessInterceptor.html":{},"interfaces/responsePayloadNatsInterface.html":{}}}],["variable",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":106,"title":{"miscellaneous/variables.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["vars",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"modules/UserModule.html":{}}}],["verification",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["version",{"_index":890,"title":{},"body":{"properties.html":{}}}],["versionkey",{"_index":389,"title":{},"body":{"classes/AuthUserToken.html":{},"classes/RefreshToken.html":{},"classes/User.html":{}}}],["weak",{"_index":426,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/NewPasswordDto.html":{},"classes/User.html":{},"classes/passwordDto.html":{}}}],["weak'})@apiproperty",{"_index":738,"title":{},"body":{"classes/User.html":{}}}],["without",{"_index":571,"title":{},"body":{"injectables/NatsMessengerService.html":{}}}],["z",{"_index":445,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/NewPasswordDto.html":{},"classes/User.html":{},"classes/passwordDto.html":{}}}],["z])(?=.*[a",{"_index":444,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/NewPasswordDto.html":{},"classes/User.html":{},"classes/passwordDto.html":{}}}],["zoom",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/NatsMessengerModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AccessTokenGuard.html":{"url":"injectables/AccessTokenGuard.html","title":"injectable - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/common/guards/accessToken.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AccessTokenGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccessTokenStrategy.html":{"url":"injectables/AccessTokenStrategy.html","title":"injectable - AccessTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AccessTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/accessToken.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/accessToken.strategy.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/accessToken.strategy.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { userId: any; email: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n// type JwtPayload = {\n//   sub: string;\n//   email: string;\n// };\n\n@Injectable()\nexport class AccessTokenStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    // Call the constructor of the parent class (PassportStrategy)\n    super({\n      // Retrieve the JWT token from the \"Authorization\" header of the request (Bearer token)\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      // ignoreExpiration: false,\n      // Secret key used to decode the token\n      secretOrKey: process.env.JWT_ACCESS_SECRET,\n    });\n  }\n\n  // Method called when validating the JWT token\n  validate(payload: any) {\n    // Return the information extracted from the token payload\n    return {userId: payload.sub , email: payload.email};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nNatsMessengerModule\n\nNatsMessengerModule\n\nAppModule -->\n\nNatsMessengerModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            NatsMessengerModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NatsMessengerModule } from '@app/nats-messenger';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserModule } from './user/user.module';\nimport { AuthModule } from './auth/auth.module';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\n\n// The main module of the ms-auth application\n@Module({\n  imports: [\n    // Configures the ConfigModule to load environment variables\n    ConfigModule.forRoot({\n      isGlobal: true,\n      //TODO set to true for PRODUCTION\n      //cache: true,\n    }),\n    // Configures the MongooseModule to connect to the database\n    MongooseModule.forRoot(`${process.env.URI_BDD}?retryWrites=true&w=majority`),\n    // Imports the AuthModule and UserModule \n    AuthModule, \n    UserModule,\n    // Imports the NatsMessengerModule for NATS messaging\n    NatsMessengerModule   \n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                confirmParentProfile\n                            \n                            \n                                    \n                                    Async\n                                confirmParentProfileAdmin\n                            \n                            \n                                    \n                                    Async\n                                findAuthTokenByToken\n                            \n                            \n                                    \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    Async\n                                newUserPassword\n                            \n                            \n                                    \n                                    Async\n                                Refresh\n                            \n                            \n                                    \n                                    Async\n                                signIn\n                            \n                            \n                                    \n                                    Async\n                                signUp\n                            \n                            \n                                    \n                                    Async\n                                updateParentAdminProfile\n                            \n                            \n                                    \n                                    Async\n                                updateParentProfile\n                            \n                            \n                                    \n                                    Async\n                                userNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        confirmParentProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmParentProfile(params: TokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('CONFIRM_PROFILE_PARENT_USER')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:207\n                        \n                    \n\n\n            \n                \n                        Modification of parent(user) upon creation profile\nGET - 'auth/confirm-profile/:token'\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            TokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nTokenDto\nGET - 'auth/confirm-profile/:token'\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        confirmParentProfileAdmin\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmParentProfileAdmin(params: TokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('CONFIRM_PROFILE_PARENT_ADMIN')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:174\n                        \n                    \n\n\n            \n                \n                        Modification of parent(admin) after verification email+token\nGET - 'auth/confirm-profile/admin/:token'\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            TokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nTokenDto\nGET - 'auth/confirm-profile/admin/:token'\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAuthTokenByToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAuthTokenByToken(params: TokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('AUTHTOKEN_BY_TOKEN')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:238\n                        \n                    \n\n\n            \n                \n                        Retrieve authToken (including user ID) through Token\nGET - 'auth/token/:token'\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            TokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nTokenDto - token \nGET - 'auth/token/:token'\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    forgotPassword(body: userEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('FORGOT_PASSWORD')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:70\n                        \n                    \n\n\n            \n                \n                        Handling forgotten password\nPOST - 'auth/forgot-password'\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            userEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nuserEmailDto - user email address \nPOST - 'auth/forgot-password'\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(user: userPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('LOGOUT')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:52\n                        \n                    \n\n\n            \n                \n                        User logout\nPOST - 'auth/logout'\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            userPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nuserPayload\nPOST - 'auth/logout'\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        newUserPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    newUserPassword(body: NewPasswordDto, params: TokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('NEW_PASSWORD')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:103\n                        \n                    \n\n\n            \n                \n                        Handling password change\nPOST - 'auth/new-password/:token'\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            NewPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNewPasswordDto\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            TokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nTokenDto\nPOST - 'auth/new-password/:token'\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        Refresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    Refresh(user: userPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('REFRESHTOKEN')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:86\n                        \n                    \n\n\n            \n                \n                        Handling token refresh\nPOST - 'auth/refresh-token'\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            userPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nuserPayload\nPOST - 'auth/refresh-token'\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(body: signInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('LOGIN')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:33\n                        \n                    \n\n\n            \n                \n                        User login\nPOST - 'auth/login'\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            signInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nsignInDto - login data\nPOST - 'auth/login'\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(body: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('REGISTER_PARENT_ADMIN')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:158\n                        \n                    \n\n\n            \n                \n                        Create a new profile admin(parent) for the creation of an association\nPOST - 'auth/register'\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCreateUserDto\nPOST - 'auth/register'\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateParentAdminProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParentAdminProfile(params: IdDto, body: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('UPDATE_PARENT_ADMIN_PROFILE')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:190\n                        \n                    \n\n\n            \n                \n                        Modification of parent(admin) upon creation profile\nPOST - 'user/update-profile/:id'\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nIdDto - user ID\n\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \ncreateUserDto \nPOST - 'user/update-profile/:id'\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateParentProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateParentProfile(params: IdDto, body: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('UPDATE_PARENT_PROFILE')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:223\n                        \n                    \n\n\n            \n                \n                        Modification of a parent upon creation profile\nPOST - 'user/update-profile/:id'\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nIdDto - user ID\n\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCreateUserDto\nPOST - 'user/update-profile/:id'\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        userNewPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    userNewPassword(body: NewPasswordDto, params: IdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern('NEW_PASSWORD_USER')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:128\n                        \n                    \n\n\n            \n                \n                        Handling password change\nPUT - 'auth/newpassword/:userId'\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            NewPasswordDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNewPasswordDto\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            IdDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUserId\nPUT - 'auth/newpassword/:userId'\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unused-vars */\nimport { acknowledgeResponseinterface, getTokenInterface, userPayload } from './interface/authUp.interface'\nimport { BadRequestException, Controller, NotFoundException, UseInterceptors } from '@nestjs/common'\nimport { RpcSuccessInterceptor } from 'src/Interceptor/RpcSuccessInterceptor'\nimport { AuthUserTokenDocument } from './Schema/authUserToken.schema'\nimport { MessagePattern, Payload } from '@nestjs/microservices'\nimport { CreateUserDto } from 'src/user/Dto/createUser.dto'\nimport { UserDocument } from 'src/user/Schema/user.schema'\nimport { userEmailDto } from 'src/user/Dto/userEmail.dto'\nimport { NewPasswordDto } from './dto/newPassword.dto'\nimport { UserService } from 'src/user/user.service'\nimport { signInDto } from './dto/signIn.dto'\nimport { AuthService } from './auth.service'\nimport { IdDto } from 'src/user/Dto/id.dto'\nimport { TokenDto } from './dto/token.dto'\n\n// Controller responsible for handling authentication-related API endpoints\n@Controller()\n@UseInterceptors(RpcSuccessInterceptor)\nexport class AuthController {\n    constructor(\n      private authService: AuthService,\n      private userService: UserService\n    ) { }\n\n    /**\n     * User login \n     * @param body - signInDto - login data\n     * POST - 'auth/login'\n     * @review => ok\n     */\n    @MessagePattern('LOGIN')\n    async signIn(@Payload('body') body: signInDto) {\n      console.log(\"🚀 ~ file: auth.controller.ts:34 ~ AuthController ~ signIn ~ body:\", body)\n      try {\n        const signIn = await this.authService.signIn(body);\n        console.log(\"🚀 ~ file: auth.controller.ts:36 ~ AuthController ~ signIn ~ signIn:\", signIn)\n        return signIn;\n      } catch (error) {\n        console.log(\"🚀 ~ file: auth.controller.ts:38 ~ AuthController ~ signIn ~ error:\", error)\n        throw new NotFoundException(error)\n      }\n    }\n\n    /**\n     * User logout \n     * @param user - userPayload\n     * POST - 'auth/logout'\n     * @review => ok\n     */\n    @MessagePattern('LOGOUT')\n    async logout(@Payload('user') user: userPayload): Promise {\n      try {\n        return {\n          acknowledge: await this.authService.logout(user.sub)\n        }\n      }\n      catch (error) {\n        throw new NotFoundException(error)\n      }\n    }\n\n    /**\n     * Handling forgotten password \n     * @param body - userEmailDto - user email address \n     * POST - 'auth/forgot-password'\n     * @review => ok\n     */\n    @MessagePattern('FORGOT_PASSWORD')\n    async forgotPassword(@Payload('body') body: userEmailDto): Promise {\n      try {\n        await this.authService.sendEmailForgotPassword(body.email)\n        return { acknowledge: true }\n      } catch (error) {\n        throw new NotFoundException(error)\n      }\n    }\n\n    /**\n     * Handling token refresh    \n     * @param user - userPayload\n     * POST - 'auth/refresh-token'\n     * @review => ok\n     */\n    @MessagePattern('REFRESHTOKEN')\n    async Refresh(@Payload('user') user: userPayload): Promise {\n      try {\n        return await this.authService.refreshTokens(user.sub);\n      }\n      catch (error) {\n        throw new NotFoundException(error)\n      }\n    }\n\n    /**\n     * Handling password change \n     * @param body - NewPasswordDto \n     * @param params - TokenDto\n     * POST - 'auth/new-password/:token'\n     * @review => ok\n     */\n    @MessagePattern('NEW_PASSWORD')\n    async newUserPassword(\n      @Payload('body') body: NewPasswordDto, \n      @Payload('params') params: TokenDto): Promise> {\n      try {\n        // Check passwords \n        if (body.password !== body.confirmPassword) throw new BadRequestException('Passwords do not match')\n        // Get email and ID of the user \n        const authToken = await this.authService.findAuthTokenByToken(params.token)\n        // Check user's existence   \n        await this.userService.hasUserById(authToken.user_id);\n        // Set new password\n        return await this.authService.createNewPassword(authToken.user_id, body.password) \n          } catch (error) {\n            throw new NotFoundException(error)\n        }\n    }\n\n    /**\n     * Handling password change \n     * @param body - NewPasswordDto \n     * @param params - UserId\n     * PUT - 'auth/newpassword/:userId'\n     * @review => ok\n     */\n      @MessagePattern('NEW_PASSWORD_USER')\n      async userNewPassword(\n        @Payload('body') body: NewPasswordDto, \n        @Payload('params') params: IdDto): Promise {\n          try {\n            console.log(\"🚀 ~ file: auth.controller.ts:131 ~ AuthController ~ @Payload ~ params:\", params.userId)\n            console.log(\"🚀 ~ file: auth.controller.ts:131 ~ AuthController ~ body:\", body)\n            // Check user's existence \n            const userExists =  await this.userService.getUserById(params.userId)\n            console.log(\"🚀 ~ file: auth.controller.ts:136 ~ AuthController ~ @Payload ~ userExists:\", userExists)\n            if(!userExists) throw new BadRequestException('User does not exists !')\n            const userPasswordUpdate = this.userService.updatePasswordUser(params.userId, body)\n            return userPasswordUpdate;\n          } catch (error) {\n            throw new NotFoundException(error)\n\n          }\n        }\n\n\n\n\n    \n\n    /**\n     * Create a new profile admin(parent) for the creation of an association    \n     * @param body - CreateUserDto\n     * POST - 'auth/register'\n     * @review => ok\n     */\n    @MessagePattern('REGISTER_PARENT_ADMIN')\n    async signUp(@Payload('body') body: CreateUserDto) {\n      // console.log(\"🚀 ~ file: auth.controller.ts:129 ~ AuthController ~ signUp ~ body:\", body)\n      try {\n        return await this.authService.register(body)  \n      } catch (error) {\n        throw new NotFoundException(error)\n      }\n    }\n\n    /**\n     * Modification of parent(admin) after verification email+token \n     * @param params - TokenDto\n     * GET - 'auth/confirm-profile/admin/:token'\n     * @review => ok\n     */\n    @MessagePattern('CONFIRM_PROFILE_PARENT_ADMIN')\n    async confirmParentProfileAdmin(@Payload('params') params: TokenDto): Promise  {\n      try {\n        return await this.authService.confirmProfile(params.token)\n      } catch (error) {\n        throw new NotFoundException(error)\n      }\n    }\n\n    /**\n     * Modification of parent(admin) upon creation profile  \n     * @param params - IdDto - user ID \n     * @param body - createUserDto \n     * POST - 'user/update-profile/:id'\n     * @review => ok\n     */ \n    @MessagePattern('UPDATE_PARENT_ADMIN_PROFILE')\n    async updateParentAdminProfile(\n      @Payload('params') params: IdDto, //user ID \n      @Payload('body') body: CreateUserDto): Promise {\n      try {\n        return await this.userService.userParentAdminEdit(params.id, body)\n      } catch (error) {\n        throw new NotFoundException(error)\n      }\n    }\n\n    /**\n     * Modification of parent(user) upon creation profile \n     * @param params - TokenDto\n     * GET - 'auth/confirm-profile/:token'\n     * @review => ok\n     */\n    @MessagePattern('CONFIRM_PROFILE_PARENT_USER')\n    async confirmParentProfile(@Payload('params') params: TokenDto): Promise {\n      try {\n        return await this.authService.confirmProfile(params.token)\n      } catch (error) {\n        throw new NotFoundException(error)\n      }\n    }\n\n    /**\n     * Modification of a parent upon creation profile \n     * @param params - IdDto - user ID \n     * @param body - CreateUserDto\n     * POST - 'user/update-profile/:id'\n     * @review => ok\n     */\n    @MessagePattern('UPDATE_PARENT_PROFILE')\n    async updateParentProfile(@Payload('params') params: IdDto, @Payload('body') body: CreateUserDto): Promise {\n      try {\n        return await this.userService.setUser(params.id, body)\n      } catch (error) {\n        throw new NotFoundException(error)\n      } \n    }\n\n    /**\n     * Retrieve authToken (including user ID) through Token\n     * @param params - TokenDto - token \n     * GET - 'auth/token/:token'\n     * @review => ok\n     */\n    @MessagePattern('AUTHTOKEN_BY_TOKEN')\n      async findAuthTokenByToken(@Payload('params') params: TokenDto): Promise {\n        try {\n        const user =  await this.authService.findAuthTokenByToken(params.token)\n        console.log(\"🚀 ~ file: auth.controller.ts:211 ~ AuthController ~ findAuthTokenByToken ~ user:\", user)\n        return user;\n      } catch (error) {\n        throw new NotFoundException('oups')\n      }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nNatsMessengerModule\n\nNatsMessengerModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nNatsMessengerModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\nAuthModule -->\n\nAccessTokenStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nAuthModule -->\n\nRefreshTokenStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccessTokenStrategy\n                        \n                        \n                            AuthService\n                        \n                        \n                            RefreshTokenStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NatsMessengerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { RefreshTokenStrategy } from './strategies/refreshToken.strategy';\nimport { AccessTokenStrategy } from './strategies/accessToken.strategy';\nimport { AuthUserTokenSchema } from './Schema/authUserToken.schema';\nimport { RefreshTokenSchema } from './Schema/refreshToken.schema';\nimport { Global, Module, forwardRef } from '@nestjs/common';\nimport { NatsMessengerModule } from '@app/nats-messenger';\nimport { UserSchema } from 'src/user/Schema/user.schema';\nimport { AuthController } from './auth.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UserModule } from '../user/user.module';\nimport { AuthService } from './auth.service';\nimport { JwtModule } from '@nestjs/jwt';\nimport * as dotenv from 'dotenv';\n\n// Load environment variables from the .env file\ndotenv.config();\n\n// Global module for authentication management\n@Global()\n@Module({\n  imports: [\n    // Import necessary database schemas for this module\n    MongooseModule.forFeature([\n    { name: 'RefreshToken', schema: RefreshTokenSchema },\n    { name: 'AuthUserToken', schema: AuthUserTokenSchema },\n    { name: 'User', schema: UserSchema },\n\n  ]),\n    // Import the UserModule with circular reference (forwardRef)\n    forwardRef(() => UserModule),\n    // Configure JwtModule for JWT management\n    JwtModule.register({\n      global: true, // Makes the module global for use everywhere\n      secret: process.env.JWT_ACCESS_SECRET, // Secret key to sign tokens\n      signOptions: { expiresIn: '15m' },\n    }),\n    // Import the NatsMessengerModule for communication with NATS\n    NatsMessengerModule\n  ],\n  controllers: [AuthController],\n  providers: [\n    AuthService, // Provides the authentication management service\n    AccessTokenStrategy, // Strategy for validating access tokens\n    RefreshTokenStrategy, // Strategy for validating refresh tokens\n\n  ],\n  exports: [AuthService], // Export the AuthService service for external us\n})\nexport class AuthModule { }\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthTokenDto.html":{"url":"classes/AuthTokenDto.html","title":"class - AuthTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/authToken.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    Optional\n                                token\n                            \n                            \n                                    \n                                    Optional\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/authToken.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/authToken.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/authToken.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsString } from \"class-validator\";\n\nexport class AuthTokenDto {\n\n    @IsString()\n    email?: string\n\n    @IsString()\n    token?: string\n\n    @IsMongoId()\n    user_id?: string\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthUserToken.html":{"url":"classes/AuthUserToken.html","title":"class - AuthUserToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthUserToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/Schema/authUserToken.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                token\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/Schema/authUserToken.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/Schema/authUserToken.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/Schema/authUserToken.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { IsMongoId, IsString } from 'class-validator'\n// import { ApiProperty } from '@nestjs/swagger';\nimport { Document } from 'mongoose'\n\n\nexport type AuthUserTokenDocument = AuthUserToken & Document\n@Schema({ collection: 'authUserToken', timestamps: true, versionKey: false, expires: '7d' })\nexport class AuthUserToken {\n\n    @Prop() \n    @IsString()\n    email?: string\n\n    @Prop()\n    @IsString()\n    token?: string\n\n    @Prop()\n    @IsString()\n    @IsMongoId()\n    user_id?: string\n\n}\n\nexport const AuthUserTokenSchema = SchemaFactory.createForClass(AuthUserToken)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/Dto/createUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                asso_id\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                birthday\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                comment\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                firstname\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                group_id\n                            \n                            \n                                    \n                                    Readonly\n                                    Optional\n                                IsActive\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                lastname\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MaxLength(100)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/createUser.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        asso_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/createUser.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/createUser.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(10)@MaxLength(14)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/createUser.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MaxLength(200)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/createUser.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MaxLength(70)@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/createUser.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MaxLength(50)@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/createUser.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        group_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/createUser.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                            Optional\n                        IsActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/createUser.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MaxLength(50)@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/createUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsStrongPassword()@Matches(undefined, {message: 'password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/createUser.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(10)@MaxLength(14)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/createUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeUserEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(TypeUserEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/createUser.dto.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsDate, IsEmail, IsEnum, IsMongoId, IsNotEmpty, IsString, IsStrongPassword, Matches, MaxLength, MinLength } from 'class-validator';\nimport {  TypeUserEnum } from '../Enum/user.enum';\n\nexport class CreateUserDto {\n    @IsString()\n    @MaxLength(50)\n    @MinLength(3)\n    readonly firstname?: string;\n\n    @IsString()\n    @MaxLength(50)\n    @MinLength(3)\n    readonly lastname?: string;\n\n    @IsString()\n    @MaxLength(70)\n    @IsEmail()\n    readonly email?: string\n\n    @IsString()\n    @IsStrongPassword()\n    @Matches(RegExp(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/), { message: 'password too weak' })\n    password?: string\n\n    @IsString()\n    @MinLength(10)\n    @MaxLength(14)\n    readonly phone?: string\n\n    @IsString()\n    @MinLength(10)\n    @MaxLength(14)\n    readonly city?: string\n\n    @IsString()\n    @MaxLength(100)\n    address?: string\n\n    @IsNotEmpty()\n    @IsMongoId()   \n    readonly asso_id?: string\n\n    @IsNotEmpty()\n    @IsEnum(TypeUserEnum)\n    readonly type?: TypeUserEnum;\n\n    @IsDate()\n    readonly birthday?: Date\n\n    @IsString()\n    @MaxLength(200)\n    readonly comment?: string\n\n    @IsBoolean()\n    readonly IsActive?: boolean\n\n    @IsMongoId()\n    readonly group_id?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n\n@Module({\n    imports: [MongooseModule.forRoot(`${process.env.URI_BDD}?retryWrites=true&w=majority`)],\n})\nexport class DatabaseModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailDto.html":{"url":"classes/EmailDto.html","title":"class - EmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                params\n                            \n                            \n                                    Optional\n                                sender\n                            \n                            \n                                    Optional\n                                subject\n                            \n                            \n                                    Optional\n                                templateId\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/email.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/email.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/email.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        templateId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/email.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/email.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class EmailDto {\n    subject?: string\n    sender?: {\n      email?: string\n      name?: string\n    }\n    to: {\n      email: string\n      name?: string\n    }[]\n    templateId?: number\n    params?: {\n      [key: string]: string\n    }\n  }\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalEditInterface.html":{"url":"interfaces/GlobalEditInterface.html","title":"interface - GlobalEditInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalEditInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/userRes.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            asso_id\n                                        \n                                \n                                \n                                        \n                                            birthday\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            group_id\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        asso_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asso_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthday:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RoleUserEnum, TypeUserEnum } from \"../Enum/user.enum\";\nimport { UserDocument } from \"../Schema/user.schema\";\n\nexport interface getUsersCreatedInterface {\n  newKid: UserDocument,\n  newParent: UserDocument\n}\n\nexport interface assoUserEditInterface{\n  \n  id: string ; \n  role: RoleUserEnum.Admin \n}\n\nexport interface ParentInterface {\n\n    firstname?: string,\n    lastname?: string,\n    email?: string,\n    password?: string,\n    city?: string\n    address?: string,\n    phone?: string,\n    type?: TypeUserEnum,\n    birthday?: string,\n    comment?: string,\n    isActive?: boolean,\n    group_id?: string,\n    associations?: [{\n      id: string,\n      role: string\n  }]\n}\n\ninterface GlobalEditInterface {\n  firstname: string,\n  lastname: string,\n  email: string,\n  city: string\n  address: string,\n  password: string,\n  phone: string,\n  group_id: string,\n  asso_id: string,\n  comment: string,\n  birthday: Date,\n  isActive: boolean\n}\n\nexport type parentEditInterface = Omit\n\nexport type kidEditInterface = Pick\n\nexport type adminEditInterface = Pick\n\n//CREATION PARENT ADMIN INTERFACE \nexport type parentAdminCreateInterface = Omit\n\n//EDITION PARENT ADMIN INTERFACE \nexport type parentAdminEditInterface = Pick  \n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthUp.html":{"url":"interfaces/IAuthUp.html","title":"interface - IAuthUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/authUp.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { UserDocument } from 'src/user/Schema/user.schema';\n\n\nexport interface userPayload {\n    sub: string;\n    email: string;\n}\n\nexport interface IAuthUp extends Document\n{\n    firstname: string;\n    lastname: string;\n    email: string;\n    password: string;\n}\n\nexport interface TokenInterface {\n    token: string\n}\n\nexport interface getTokenInterface {\n    accessToken: string,\n    refreshToken: string \n}\n\nexport interface signInResponseInterface {\n    user: UserDocument,\n    tokens: getTokenInterface\n}\n\nexport interface sendEmailForgotPasswordResponseInterface {\n    message: string\n}\n\nexport interface acknowledgeResponseinterface {\n    acknowledge : boolean\n}\n\nexport class signInInterface {\n    email: string;\n    password: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdDto.html":{"url":"classes/IdDto.html","title":"class - IdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/id.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/id.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsString } from \"class-validator\";\n\nexport class IdDto {\n\n    @IsString()\n    readonly id: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdDto-1.html":{"url":"classes/IdDto-1.html","title":"class - IdDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/Dto/id.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Readonly\n                                id\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/id.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/id.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {IsString } from \"class-validator\";\n\nexport class IdDto {\n\n    @IsString()\n    readonly id: string;\n  userId: string;\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NatsMessengerModule.html":{"url":"modules/NatsMessengerModule.html","title":"module - NatsMessengerModule","body":"\n                   \n\n\n\n\n    Modules\n    NatsMessengerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NatsMessengerModule\n\n\n\ncluster_NatsMessengerModule_exports\n\n\n\ncluster_NatsMessengerModule_providers\n\n\n\n\nNatsMessengerService \n\nNatsMessengerService \n\n\n\nNatsMessengerModule\n\nNatsMessengerModule\n\nNatsMessengerService  -->\n\nNatsMessengerModule->NatsMessengerService \n\n\n\n\n\nNatsMessengerService\n\nNatsMessengerService\n\nNatsMessengerModule -->\n\nNatsMessengerService->NatsMessengerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/nats-messenger/src/nats-messenger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NatsMessengerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NatsMessengerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ClientsModule, Transport } from '@nestjs/microservices'\nimport { NatsMessengerService } from './nats-messenger.service'\nimport { Module } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\n\n//Module to manage NATS\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      //TODO: set to true for PRODUCTION\n      //cache: true,\n    }),\n    //register the client module \n    ClientsModule.register([\n      {\n        // defines an unique name for the client \n        name: 'NATS_SERVICE', \n        // uses NATS transport for the communication\n        transport: Transport.NATS,\n        options: {\n          // specifies the NATS servers addresses\n          servers: [`nats://${process.env.NATS_DNS}:${process.env.NATS_PORT}`]\n        }\n      }\n    ])\n  ],\n  // provides the NatsMessengerService service in the module \n  providers: [NatsMessengerService],\n  // makes the NatsMessengerService service accessible to other modules\n  exports: [NatsMessengerService],\n})\nexport class NatsMessengerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NatsMessengerService.html":{"url":"injectables/NatsMessengerService.html","title":"injectable - NatsMessengerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NatsMessengerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/nats-messenger/src/nats-messenger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                emit\n                            \n                            \n                                    Async\n                                emitEmailAddedToGroup\n                            \n                            \n                                    Async\n                                emitEmailCreationAccount\n                            \n                            \n                                    Async\n                                emitEmailCreationAsso\n                            \n                            \n                                    Async\n                                emitEmailEventEdited\n                            \n                            \n                                    Async\n                                emitEmailForgotPassword\n                            \n                            \n                                    Async\n                                emitEmailProfileCreated\n                            \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nats: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in libs/nats-messenger/src/nats-messenger.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nats\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emit\n                        \n                    \n                \n            \n            \n                \n                        \n                    emit(cmd: string, payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/nats-messenger/src/nats-messenger.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cmd\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emitEmailAddedToGroup\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitEmailAddedToGroup(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/nats-messenger/src/nats-messenger.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emitEmailCreationAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitEmailCreationAccount(email: string, newLinkToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/nats-messenger/src/nats-messenger.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newLinkToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emitEmailCreationAsso\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitEmailCreationAsso(email: string, newLinkToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/nats-messenger/src/nats-messenger.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newLinkToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emitEmailEventEdited\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitEmailEventEdited(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/nats-messenger/src/nats-messenger.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emitEmailForgotPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitEmailForgotPassword(email: string, newLinkToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/nats-messenger/src/nats-messenger.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newLinkToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        emitEmailProfileCreated\n                        \n                    \n                \n            \n            \n                \n                        \n                    emitEmailProfileCreated(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/nats-messenger/src/nats-messenger.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send(cmd: string, payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in libs/nats-messenger/src/nats-messenger.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                cmd\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { firstValueFrom } from 'rxjs/internal/firstValueFrom'\nimport { Inject, Injectable } from '@nestjs/common'\nimport { ClientProxy } from '@nestjs/microservices'\n\n//Service in charge of handling NATS related operations \n@Injectable()\nexport class NatsMessengerService {\n\n    constructor(\n        //injects the NATS_SERVICE dependency using ClientProxy from the module\n        @Inject('NATS_SERVICE')\n        private readonly nats: ClientProxy\n    ) { }\n\n    //sends with a response in return \n    async send(cmd: string, payload: any): Promise {\n        console.log(this.nats)\n        try {\n            console.log('send', cmd, payload)\n            return await firstValueFrom(this.nats.send(cmd, payload))\n        } catch (error) {\n            console.log(\"error from send\", error)\n        }\n    }\n\n    //sends without any response in return\n    async emit(cmd: string, payload: any): Promise {\n        console.log(this.nats)\n        try {\n            console.log('emit', cmd, payload)\n            this.nats.emit(cmd, payload)\n        } catch (error) {\n            console.log(\"error from emit\", error)\n        }\n    }\n\n    // @review => ok\n    //Emits an event for sending an email in case of a forgotten password\n    async emitEmailForgotPassword(email: string, newLinkToken: string) {\n        await this.emit(\n            'SEND_EMAIL_FORGOT_PASSWORD',\n            {\n                email: email,\n                params: { \"FORGOT_PASSWORD_LINK\": newLinkToken }\n            },\n        )\n    }\n\n    //Emits an event for sending an email in case of a profile creation \n    async emitEmailProfileCreated(email: string) {\n        await this.emit(\n            'SEND_EMAIL_PROFILE_CREATED',\n            {\n                email : email\n            }\n        )\n    }\n\n    // Emits an event for sending an email with a link with token upon creation profile\n    async emitEmailCreationAccount(email: string, newLinkToken: string){\n        console.log(\"🚀 ~ file: nats-messenger.service.ts:62 ~ NatsMessengerService ~ emitEmailCreationAccount ~ newLinkToken:\", newLinkToken)\n        console.log(\"🚀 ~ file: nats-messenger.service.ts:62 ~ NatsMessengerService ~ emitEmailCreationAccount ~ email:\", email)\n        this.emit(\n            'SEND_EMAIL_CREATION_ACCOUNT',\n            {\n                email: email,\n                params: { \"LINK_TOKEN_CREATION_ACCOUNT\": newLinkToken }\n            },\n        )\n    }\n\n    // Emits an event for sending an email with a link with token upon association creation \n    async emitEmailCreationAsso(email: string, newLinkToken: string) {\n        this.emit(\n            'SEND_EMAIL_CREATION_ASSO',\n            {\n                email: email,\n                params: { \"LINK_TOKEN_CREATION_ASSO\": newLinkToken }\n            },\n        )\n    }\n\n    // Emits an event for sending an email upon kid added to group\n    async emitEmailAddedToGroup(email: string) {\n        this.emit(\n            'SEND_EMAIL_GROUP_HAS_BEEN_ADDED',\n            {\n                email: email,\n                params: { \"ADD_USER_TO_EVENT_LINK\": `${process.env.PREFIX_URI}/events` }\n            },\n        )\n    }\n\n    // Emits an event for sending an email upon event modification \n    async emitEmailEventEdited(email: string){\n        this.emit(\n            'SEND_EMAIL_EVENT_EDITED',\n            {\n                email: email,\n                \"EVENT_HAS_EDITED\": `${process.env.PREFIX_URI}/events`            \n            },\n        )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewPasswordDto.html":{"url":"classes/NewPasswordDto.html","title":"class - NewPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/newPassword.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                confirmPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsStrongPassword()@Matches(undefined, {message: 'password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/newPassword.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsStrongPassword()@Matches(undefined, {message: 'password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/newPassword.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsStrongPassword, Matches } from \"class-validator\"\n\nexport class NewPasswordDto {\n\n    @IsString()\n    @IsStrongPassword()\n    @Matches(RegExp(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/), { message: 'password too weak' })\n    password: string\n\n    @IsString()\n    @IsStrongPassword()\n    @Matches(RegExp(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/), { message: 'password too weak' })\n    confirmPassword: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParentInterface.html":{"url":"interfaces/ParentInterface.html","title":"interface - ParentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ParentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/userRes.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            associations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            birthday\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            city\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            group_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isActive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        associations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        associations:     [literal type]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [literal type]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthday:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         TypeUserEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TypeUserEnum\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RoleUserEnum, TypeUserEnum } from \"../Enum/user.enum\";\nimport { UserDocument } from \"../Schema/user.schema\";\n\nexport interface getUsersCreatedInterface {\n  newKid: UserDocument,\n  newParent: UserDocument\n}\n\nexport interface assoUserEditInterface{\n  \n  id: string ; \n  role: RoleUserEnum.Admin \n}\n\nexport interface ParentInterface {\n\n    firstname?: string,\n    lastname?: string,\n    email?: string,\n    password?: string,\n    city?: string\n    address?: string,\n    phone?: string,\n    type?: TypeUserEnum,\n    birthday?: string,\n    comment?: string,\n    isActive?: boolean,\n    group_id?: string,\n    associations?: [{\n      id: string,\n      role: string\n  }]\n}\n\ninterface GlobalEditInterface {\n  firstname: string,\n  lastname: string,\n  email: string,\n  city: string\n  address: string,\n  password: string,\n  phone: string,\n  group_id: string,\n  asso_id: string,\n  comment: string,\n  birthday: Date,\n  isActive: boolean\n}\n\nexport type parentEditInterface = Omit\n\nexport type kidEditInterface = Pick\n\nexport type adminEditInterface = Pick\n\n//CREATION PARENT ADMIN INTERFACE \nexport type parentAdminCreateInterface = Omit\n\n//EDITION PARENT ADMIN INTERFACE \nexport type parentAdminEditInterface = Pick  \n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshToken.html":{"url":"classes/RefreshToken.html","title":"class - RefreshToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/Schema/refreshToken.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/Schema/refreshToken.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Document } from 'mongoose'\n\n\nexport type RefreshTokenDocument = RefreshToken & Document\n@Schema({ collection: 'refreshTokens', timestamps: true, versionKey: false, expires: '7d' })\n\nexport class RefreshToken {\n    @Prop()\n    refreshToken: string\n}\n\nexport const RefreshTokenSchema = SchemaFactory.createForClass(RefreshToken)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/refreshToken.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/refreshToken.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from \"class-validator\";\n\nexport class RefreshTokenDto {\n\n    @IsString()\n    refreshToken: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenGuard.html":{"url":"injectables/RefreshTokenGuard.html","title":"injectable - RefreshTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/common/guards/refreshToken.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt-refresh')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class RefreshTokenGuard extends AuthGuard('jwt-refresh') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RefreshTokenStrategy.html":{"url":"injectables/RefreshTokenStrategy.html","title":"injectable - RefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/refreshToken.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy,'jwt-refresh')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/refreshToken.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(req: Request, payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/refreshToken.strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { Injectable } from '@nestjs/common';\nimport { Request } from 'express';\n\n@Injectable()\nexport class RefreshTokenStrategy extends PassportStrategy(Strategy,'jwt-refresh') {\n  constructor() {\n    // Call the constructor of the parent class (PassportStrategy)\n    super({\n      // Retrieve the JWT token from the \"Authorization\" header (Bearer token)\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      // Secret key used to decode the token\n      secretOrKey: process.env.JWT_REFRESH_SECRET,\n      // Allow passing the request to the validation function\n      passReqToCallback: true,\n    });\n  }\n\n  // Method called when validating the JWT token\n  validate(req: Request, payload: any) {\n    // Retrieve the refreshToken from the header and remove the \"Bearer\" prefix\n    const refreshToken = req.get('Authorization').replace('Bearer', '').trim();\n    // Return the information extracted from the token payload along with the refresh token\n    return { ...payload, refreshToken };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseErrorInterface.html":{"url":"classes/ResponseErrorInterface.html","title":"class - ResponseErrorInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseErrorInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/response.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ResponseInterface\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                message\n                            \n                            \n                                    Optional\n                                results\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         ResponseInterface\n\n                            \n                        \n                    \n                        \n                                Defined in         ResponseInterface:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         ResponseInterface\n\n                            \n                        \n                    \n                        \n                                Defined in         ResponseInterface:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        results\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDocument\n\n                    \n                \n                        \n                            \n                                Inherited from         ResponseInterface\n\n                            \n                        \n                    \n                        \n                                Defined in         ResponseInterface:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         ResponseInterface\n\n                            \n                        \n                    \n                        \n                                Defined in         ResponseInterface:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserDocument } from \"../Schema/user.schema\";\n\n\nclass ResponseInterface {\n    results?: UserDocument;\n    error?: boolean;\n    message: string;\n    status: number;\n}\n\nexport class ResponseSuccessInterface extends ResponseInterface {\n    results?: UserDocument;\n}\n\nexport class ResponseErrorInterface extends ResponseInterface {\n    error?: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseInterface.html":{"url":"classes/ResponseInterface.html","title":"class - ResponseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/response.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                message\n                            \n                            \n                                    Optional\n                                results\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/user/interface/response.interface.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/interface/response.interface.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        results\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDocument\n\n                    \n                \n                    \n                        \n                                Defined in src/user/interface/response.interface.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/user/interface/response.interface.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserDocument } from \"../Schema/user.schema\";\n\n\nclass ResponseInterface {\n    results?: UserDocument;\n    error?: boolean;\n    message: string;\n    status: number;\n}\n\nexport class ResponseSuccessInterface extends ResponseInterface {\n    results?: UserDocument;\n}\n\nexport class ResponseErrorInterface extends ResponseInterface {\n    error?: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseSuccessInterface.html":{"url":"classes/ResponseSuccessInterface.html","title":"class - ResponseSuccessInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseSuccessInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/response.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ResponseInterface\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                results\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                message\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        results\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDocument\n\n                    \n                \n                        \n                            \n                                Inherited from         ResponseInterface\n\n                            \n                        \n                    \n                        \n                                Defined in         ResponseInterface:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                Inherited from         ResponseInterface\n\n                            \n                        \n                    \n                        \n                                Defined in         ResponseInterface:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         ResponseInterface\n\n                            \n                        \n                    \n                        \n                                Defined in         ResponseInterface:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         ResponseInterface\n\n                            \n                        \n                    \n                        \n                                Defined in         ResponseInterface:8\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserDocument } from \"../Schema/user.schema\";\n\n\nclass ResponseInterface {\n    results?: UserDocument;\n    error?: boolean;\n    message: string;\n    status: number;\n}\n\nexport class ResponseSuccessInterface extends ResponseInterface {\n    results?: UserDocument;\n}\n\nexport class ResponseErrorInterface extends ResponseInterface {\n    error?: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RpcSuccessInterceptor.html":{"url":"injectables/RpcSuccessInterceptor.html","title":"injectable - RpcSuccessInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RpcSuccessInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Interceptor/RpcSuccessInterceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor to handle successful responses for NATS communication.\nThis interceptor generates a standardized response payload using the responsePayloadNat function.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(_context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/Interceptor/RpcSuccessInterceptor.ts:67\n                        \n                    \n\n\n            \n                \n                        Intercepts the response and transforms it using the responsePayloadNat function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                _context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nExecution context.\n\n\n                                            \n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nNext handler in the chain.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Transformed Observable containing the standardized response payload.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { map } from 'rxjs/operators';\n\n/**\n * Interface for the response payload structure used for NATS communication.\n */\ninterface responsePayloadNatsInterface {\n    paginate?: object;\n    statusCode?: number;\n    datas: any;\n}\n\n/**\n * Generates a response payload for NATS communication.\n * @param values - Data and additional information to include in the payload.\n * @returns A response payload conforming to responsePayloadNatsInterface.\n */\nfunction responsePayloadNat(values: any): responsePayloadNatsInterface {\n    // Initialize an empty payload object\n    const payload = {} as responsePayloadNatsInterface;\n\n    // Extract and set pagination details if provided\n    if (values?.paginate) {\n        payload.paginate = values.paginate;\n        delete values.paginate;\n    }\n\n    // Extract and set status code if provided\n    if (values?.code) {\n        payload.statusCode = values.code;\n        delete values.code;\n    }\n\n    // Determine the format of the data and set it in the payload\n    if (values) {\n        payload.datas = Array.isArray(values) ? values : (Object.keys(values).length === 1 ? getFirstValue(values) : { ...JSON.parse(JSON.stringify(values)) })\n    } else {\n        payload.datas = null;\n    }\n\n    return payload;\n}\n\n/**\n * Extracts the value of the first property from an object.\n * @param values - Object from which to extract the value.\n * @returns The value of the first property in the object.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction getFirstValue(values: Object): string {\n    return values[Object.keys(values)[0]];\n}\n\n/**\n * Interceptor to handle successful responses for NATS communication.\n * This interceptor generates a standardized response payload using the responsePayloadNat function.\n */\n@Injectable()\nexport class RpcSuccessInterceptor {\n    /**\n     * Intercepts the response and transforms it using the responsePayloadNat function.\n     * @param _context - Execution context.\n     * @param next - Next handler in the chain.\n     * @returns Transformed Observable containing the standardized response payload.\n     */\n    intercept(_context: ExecutionContext, next: CallHandler) {\n        return next\n            .handle()\n            .pipe(map(value => responsePayloadNat(value)));\n\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenDto.html":{"url":"classes/TokenDto.html","title":"class - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/token.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from \"class-validator\";\n\nexport class TokenDto {\n\n    @IsString()\n    token: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenInterface.html":{"url":"interfaces/TokenInterface.html","title":"interface - TokenInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/authUp.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { UserDocument } from 'src/user/Schema/user.schema';\n\n\nexport interface userPayload {\n    sub: string;\n    email: string;\n}\n\nexport interface IAuthUp extends Document\n{\n    firstname: string;\n    lastname: string;\n    email: string;\n    password: string;\n}\n\nexport interface TokenInterface {\n    token: string\n}\n\nexport interface getTokenInterface {\n    accessToken: string,\n    refreshToken: string \n}\n\nexport interface signInResponseInterface {\n    user: UserDocument,\n    tokens: getTokenInterface\n}\n\nexport interface sendEmailForgotPasswordResponseInterface {\n    message: string\n}\n\nexport interface acknowledgeResponseinterface {\n    acknowledge : boolean\n}\n\nexport class signInInterface {\n    email: string;\n    password: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/Schema/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                associations\n                            \n                            \n                                    \n                                    \n                                    \n                                birthday\n                            \n                            \n                                    \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                comment\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                firstname\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                group_id\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                lastname\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})@MaxLength(70)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Schema/user.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        associations\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [literal type]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()@ApiProperty()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Schema/user.schema.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        birthday\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})@IsDate()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Schema/user.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})@MaxLength(14)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Schema/user.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})@IsString()@MaxLength(200)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Schema/user.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()@MaxLength(70)@Column()@IsEmail()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Schema/user.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()@IsString()@MaxLength(50)@MinLength(3)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Schema/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        group_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()@IsString()@MaxLength(200)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Schema/user.schema.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: false})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Schema/user.schema.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()@IsString()@MaxLength(50)@MinLength(3)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Schema/user.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})@IsStrongPassword()@Matches(undefined, {message: 'password too weak'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Schema/user.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false})@MinLength(10)@MaxLength(14)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Schema/user.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeUserEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: TypeUserEnum})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Schema/user.schema.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Document } from 'mongoose';\nimport { IsArray, IsDate,  IsEmail, IsString, IsStrongPassword, Matches, MaxLength, MinLength } from 'class-validator';\nimport { TypeUserEnum } from '../Enum/user.enum';\nimport { Column } from 'typeorm';\n\nexport type UserDocument = User & Document\n\n@Schema({ collection: 'users', timestamps: true, versionKey: false })\nexport class User {\n\n  @Prop()\n  @IsString()\n  @MaxLength(50)\n  @MinLength(3)\n  @ApiProperty()\n  firstname: string\n\n  @Prop()\n  @IsString()\n  @MaxLength(50)\n  @MinLength(3)\n  @ApiProperty()\n  lastname: string\n\n  @Prop()\n  @MaxLength(70)\n  @Column()\n  @IsEmail()\n  @ApiProperty()\n  email: string\n\n  @Prop({ required: false })\n  @IsStrongPassword()\n  @Matches(RegExp(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/), { message: 'password too weak' })\n  @ApiProperty()\n  password: string\n\n  @Prop({ required: false })\n  @MinLength(10)\n  @MaxLength(14)\n  @ApiProperty()\n  phone: string\n\n  @Prop({ required: false })\n  @MaxLength(14)\n  @ApiProperty()\n  city: string\n\n  @Prop({ required: false })\n  @MaxLength(70)\n  @ApiProperty()\n  address: string\n\n  @Prop({ type: String, enum: TypeUserEnum, })\n  @ApiProperty()\n  type: TypeUserEnum\n\n  @Prop({ required: false })\n  @IsDate()\n  @ApiProperty()\n  birthday: string\n\n  @Prop({ required: false })\n  @IsString()\n  @MaxLength(200)\n  @ApiProperty()\n  comment: string\n\n  @Prop({default: false})   \n  @ApiProperty()\n  isActive: boolean\n\n  @Prop()\n  @IsString()\n  @MaxLength(200)\n  @ApiProperty()\n  group_id: string\n\n  @Prop()\n  @ApiProperty()\n  @IsArray()\n  associations: [{\n    id: string,\n    role: string\n  }]\n\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User)\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nNatsMessengerModule\n\nNatsMessengerModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nNatsMessengerModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NatsMessengerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable @typescript-eslint/no-unused-vars */\nimport { NatsMessengerModule } from '@app/nats-messenger';\nimport { Module, forwardRef } from '@nestjs/common';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { UserController } from './user.controller'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { UserSchema } from './Schema/user.schema'\nimport { UserService } from './user.service'\n\n// Module global pour la gestion des utilisateurs \n@Module({\n  imports: [\n    // Import necessary database schema for this module\n    MongooseModule.forFeature([\n      { name: 'User', schema: UserSchema },\n    ]),\n    // Import the AuthModule with circular reference (forwardRef)\n    forwardRef(() => AuthModule),\n    // Import the NatsMessengerModule for communication with NATS\n    NatsMessengerModule,\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/acknowledgeResponseinterface.html":{"url":"interfaces/acknowledgeResponseinterface.html","title":"interface - acknowledgeResponseinterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  acknowledgeResponseinterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/authUp.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            acknowledge\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acknowledge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acknowledge:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { UserDocument } from 'src/user/Schema/user.schema';\n\n\nexport interface userPayload {\n    sub: string;\n    email: string;\n}\n\nexport interface IAuthUp extends Document\n{\n    firstname: string;\n    lastname: string;\n    email: string;\n    password: string;\n}\n\nexport interface TokenInterface {\n    token: string\n}\n\nexport interface getTokenInterface {\n    accessToken: string,\n    refreshToken: string \n}\n\nexport interface signInResponseInterface {\n    user: UserDocument,\n    tokens: getTokenInterface\n}\n\nexport interface sendEmailForgotPasswordResponseInterface {\n    message: string\n}\n\nexport interface acknowledgeResponseinterface {\n    acknowledge : boolean\n}\n\nexport class signInInterface {\n    email: string;\n    password: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/assoUserEditInterface.html":{"url":"interfaces/assoUserEditInterface.html","title":"interface - assoUserEditInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  assoUserEditInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/userRes.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         RoleUserEnum.Admin\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleUserEnum.Admin\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RoleUserEnum, TypeUserEnum } from \"../Enum/user.enum\";\nimport { UserDocument } from \"../Schema/user.schema\";\n\nexport interface getUsersCreatedInterface {\n  newKid: UserDocument,\n  newParent: UserDocument\n}\n\nexport interface assoUserEditInterface{\n  \n  id: string ; \n  role: RoleUserEnum.Admin \n}\n\nexport interface ParentInterface {\n\n    firstname?: string,\n    lastname?: string,\n    email?: string,\n    password?: string,\n    city?: string\n    address?: string,\n    phone?: string,\n    type?: TypeUserEnum,\n    birthday?: string,\n    comment?: string,\n    isActive?: boolean,\n    group_id?: string,\n    associations?: [{\n      id: string,\n      role: string\n  }]\n}\n\ninterface GlobalEditInterface {\n  firstname: string,\n  lastname: string,\n  email: string,\n  city: string\n  address: string,\n  password: string,\n  phone: string,\n  group_id: string,\n  asso_id: string,\n  comment: string,\n  birthday: Date,\n  isActive: boolean\n}\n\nexport type parentEditInterface = Omit\n\nexport type kidEditInterface = Pick\n\nexport type adminEditInterface = Pick\n\n//CREATION PARENT ADMIN INTERFACE \nexport type parentAdminCreateInterface = Omit\n\n//EDITION PARENT ADMIN INTERFACE \nexport type parentAdminEditInterface = Pick  \n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/nats-messenger/src/nats-messenger.service.ts\n            \n            injectable\n            NatsMessengerService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/Interceptor/RpcSuccessInterceptor.ts\n            \n            injectable\n            RpcSuccessInterceptor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/Interceptor/RpcSuccessInterceptor.ts\n            \n            interface\n            responsePayloadNatsInterface\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/Interceptor/RpcSuccessInterceptor.ts\n            \n            function\n            getFirstValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/Interceptor/RpcSuccessInterceptor.ts\n            \n            function\n            responsePayloadNat\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/auth/Schema/authUserToken.schema.ts\n            \n            class\n            AuthUserToken\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/Schema/authUserToken.schema.ts\n            \n            variable\n            AuthUserTokenSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/Schema/refreshToken.schema.ts\n            \n            class\n            RefreshToken\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/Schema/refreshToken.schema.ts\n            \n            variable\n            RefreshTokenSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                src/auth/common/guards/accessToken.guard.ts\n            \n            injectable\n            AccessTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/common/guards/refreshToken.guard.ts\n            \n            injectable\n            RefreshTokenGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/authToken.dto.ts\n            \n            class\n            AuthTokenDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/email.dto.ts\n            \n            class\n            EmailDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/dto/id.dto.ts\n            \n            class\n            IdDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/newPassword.dto.ts\n            \n            class\n            NewPasswordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/refreshToken.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/signIn.dto.ts\n            \n            class\n            signInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/token.dto.ts\n            \n            class\n            TokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/interface/authUp.interface.ts\n            \n            class\n            signInInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/interface/authUp.interface.ts\n            \n            interface\n            acknowledgeResponseinterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/interface/authUp.interface.ts\n            \n            interface\n            getTokenInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/interface/authUp.interface.ts\n            \n            interface\n            IAuthUp\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/interface/authUp.interface.ts\n            \n            interface\n            sendEmailForgotPasswordResponseInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/interface/authUp.interface.ts\n            \n            interface\n            signInResponseInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/interface/authUp.interface.ts\n            \n            interface\n            TokenInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/interface/authUp.interface.ts\n            \n            interface\n            userPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/accessToken.strategy.ts\n            \n            injectable\n            AccessTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/refreshToken.strategy.ts\n            \n            injectable\n            RefreshTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/Dto/createUser.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/user/Dto/id.dto.ts\n            \n            class\n            IdDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/Dto/password.dto.ts\n            \n            class\n            passwordDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/Dto/userEmail.dto.ts\n            \n            class\n            userEmailDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/Schema/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/user/Schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/interface/response.interface.ts\n            \n            class\n            ResponseErrorInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/interface/response.interface.ts\n            \n            class\n            ResponseInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/interface/response.interface.ts\n            \n            class\n            ResponseSuccessInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/user/interface/userRes.interface.ts\n            \n            interface\n            assoUserEditInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/interface/userRes.interface.ts\n            \n            interface\n            getUsersCreatedInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/interface/userRes.interface.ts\n            \n            interface\n            GlobalEditInterface\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/user/interface/userRes.interface.ts\n            \n            interface\n            ParentInterface\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                94 %\n                (33/35)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.2.0\n        \n            @nestjs/config : ^2.3.2\n        \n            @nestjs/core : ^9.2.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/microservices : ^9.1.6\n        \n            @nestjs/mongoose : ^9.2.0\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.2.0\n        \n            @nestjs/swagger : ^6.3.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @types/bcrypt : ^5.0.0\n        \n            argon2 : ^0.30.3\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            dotenv : ^16.1.4\n        \n            nats : ^2.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.11.0\n        \n            react-uuid : ^2.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.16\n        \n            uuidv4 : ^6.2.13\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CivilityUserEnum   (src/.../user.enum.ts)\n                        \n                        \n                            RoleUserEnum   (src/.../user.enum.ts)\n                        \n                        \n                            TypeUserEnum   (src/.../user.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/Enum/user.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        CivilityUserEnum\n                    \n                \n                        \n                            \n                                 Mr\n                            \n                        \n                        \n                            \n                                Value : Monsieur\n                            \n                        \n                        \n                            \n                                 Mrs\n                            \n                        \n                        \n                            \n                                Value : Madame\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RoleUserEnum\n                    \n                \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : User\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : Admin\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TypeUserEnum\n                    \n                \n                        \n                            \n                                 Kid\n                            \n                        \n                        \n                            \n                                Value : enfant\n                            \n                        \n                        \n                            \n                                 Parent\n                            \n                        \n                        \n                            \n                                Value : parent\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getFirstValue   (src/.../RpcSuccessInterceptor.ts)\n                        \n                        \n                            responsePayloadNat   (src/.../RpcSuccessInterceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/Interceptor/RpcSuccessInterceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getFirstValue\n                        \n                    \n                \n            \n            \n                \ngetFirstValue(values: Object)\n                \n            \n\n\n\n\n            \n                \n                        Extracts the value of the first property from an object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                values\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nObject from which to extract the value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The value of the first property in the object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responsePayloadNat\n                        \n                    \n                \n            \n            \n                \nresponsePayloadNat(values: any)\n                \n            \n\n\n\n\n            \n                \n                        Generates a response payload for NATS communication.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                values\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData and additional information to include in the payload.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         responsePayloadNatsInterface\n\n                        \n                            \n                                A response payload conforming to responsePayloadNatsInterface.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/getTokenInterface.html":{"url":"interfaces/getTokenInterface.html","title":"interface - getTokenInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  getTokenInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/authUp.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { UserDocument } from 'src/user/Schema/user.schema';\n\n\nexport interface userPayload {\n    sub: string;\n    email: string;\n}\n\nexport interface IAuthUp extends Document\n{\n    firstname: string;\n    lastname: string;\n    email: string;\n    password: string;\n}\n\nexport interface TokenInterface {\n    token: string\n}\n\nexport interface getTokenInterface {\n    accessToken: string,\n    refreshToken: string \n}\n\nexport interface signInResponseInterface {\n    user: UserDocument,\n    tokens: getTokenInterface\n}\n\nexport interface sendEmailForgotPasswordResponseInterface {\n    message: string\n}\n\nexport interface acknowledgeResponseinterface {\n    acknowledge : boolean\n}\n\nexport class signInInterface {\n    email: string;\n    password: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/getUsersCreatedInterface.html":{"url":"interfaces/getUsersCreatedInterface.html","title":"interface - getUsersCreatedInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  getUsersCreatedInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interface/userRes.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            newKid\n                                        \n                                \n                                \n                                        \n                                            newParent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        newKid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newKid:         UserDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDocument\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newParent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newParent:         UserDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDocument\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RoleUserEnum, TypeUserEnum } from \"../Enum/user.enum\";\nimport { UserDocument } from \"../Schema/user.schema\";\n\nexport interface getUsersCreatedInterface {\n  newKid: UserDocument,\n  newParent: UserDocument\n}\n\nexport interface assoUserEditInterface{\n  \n  id: string ; \n  role: RoleUserEnum.Admin \n}\n\nexport interface ParentInterface {\n\n    firstname?: string,\n    lastname?: string,\n    email?: string,\n    password?: string,\n    city?: string\n    address?: string,\n    phone?: string,\n    type?: TypeUserEnum,\n    birthday?: string,\n    comment?: string,\n    isActive?: boolean,\n    group_id?: string,\n    associations?: [{\n      id: string,\n      role: string\n  }]\n}\n\ninterface GlobalEditInterface {\n  firstname: string,\n  lastname: string,\n  email: string,\n  city: string\n  address: string,\n  password: string,\n  phone: string,\n  group_id: string,\n  asso_id: string,\n  comment: string,\n  birthday: Date,\n  isActive: boolean\n}\n\nexport type parentEditInterface = Omit\n\nexport type kidEditInterface = Pick\n\nexport type adminEditInterface = Pick\n\n//CREATION PARENT ADMIN INTERFACE \nexport type parentAdminCreateInterface = Omit\n\n//EDITION PARENT ADMIN INTERFACE \nexport type parentAdminEditInterface = Pick  \n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nms-auth\nDEV\nhttps://docs.nestjs.com/security/authentication\nhttps://docs.nestjs.com/recipes/passport\n// générer un token //\nnode -e \"console.log(require('crypto').randomBytes(256).toString('base64'));\"\n// généré une librairie\n$ nest g library my-library\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NatsMessengerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_NatsMessengerModule\n\n\n\ncluster_NatsMessengerModule_exports\n\n\n\ncluster_NatsMessengerModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nNatsMessengerModule\n\nNatsMessengerModule\n\nAuthModule -->\n\nNatsMessengerModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nNatsMessengerModule->UserModule\n\n\n\nAppModule -->\n\nNatsMessengerModule->AppModule\n\n\n\n\n\nNatsMessengerService \n\nNatsMessengerService \n\nNatsMessengerService  -->\n\nNatsMessengerModule->NatsMessengerService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAccessTokenStrategy\n\nAccessTokenStrategy\n\nAuthModule -->\n\nAccessTokenStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nRefreshTokenStrategy\n\nRefreshTokenStrategy\n\nAuthModule -->\n\nRefreshTokenStrategy->AuthModule\n\n\n\n\n\nNatsMessengerService\n\nNatsMessengerService\n\nNatsMessengerModule -->\n\nNatsMessengerService->NatsMessengerModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/passwordDto.html":{"url":"classes/passwordDto.html","title":"class - passwordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  passwordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/Dto/password.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                confirmPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsStrongPassword()@Matches(undefined, {message: 'password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/password.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsStrongPassword()@Matches(undefined, {message: 'password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/password.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsStrongPassword, Matches } from \"class-validator\"\n\nexport class passwordDto {\n\n    @IsString()\n    @IsStrongPassword()\n    @Matches(RegExp(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/), { message: 'password too weak' })\n    password: string\n\n    @IsString()\n    @IsStrongPassword()\n    @Matches(RegExp(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/), { message: 'password too weak' })\n    confirmPassword: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/responsePayloadNatsInterface.html":{"url":"interfaces/responsePayloadNatsInterface.html","title":"interface - responsePayloadNatsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  responsePayloadNatsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Interceptor/RpcSuccessInterceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the response payload structure used for NATS communication.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            datas\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            paginate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datas\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datas:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paginate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paginate:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { map } from 'rxjs/operators';\n\n/**\n * Interface for the response payload structure used for NATS communication.\n */\ninterface responsePayloadNatsInterface {\n    paginate?: object;\n    statusCode?: number;\n    datas: any;\n}\n\n/**\n * Generates a response payload for NATS communication.\n * @param values - Data and additional information to include in the payload.\n * @returns A response payload conforming to responsePayloadNatsInterface.\n */\nfunction responsePayloadNat(values: any): responsePayloadNatsInterface {\n    // Initialize an empty payload object\n    const payload = {} as responsePayloadNatsInterface;\n\n    // Extract and set pagination details if provided\n    if (values?.paginate) {\n        payload.paginate = values.paginate;\n        delete values.paginate;\n    }\n\n    // Extract and set status code if provided\n    if (values?.code) {\n        payload.statusCode = values.code;\n        delete values.code;\n    }\n\n    // Determine the format of the data and set it in the payload\n    if (values) {\n        payload.datas = Array.isArray(values) ? values : (Object.keys(values).length === 1 ? getFirstValue(values) : { ...JSON.parse(JSON.stringify(values)) })\n    } else {\n        payload.datas = null;\n    }\n\n    return payload;\n}\n\n/**\n * Extracts the value of the first property from an object.\n * @param values - Object from which to extract the value.\n * @returns The value of the first property in the object.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction getFirstValue(values: Object): string {\n    return values[Object.keys(values)[0]];\n}\n\n/**\n * Interceptor to handle successful responses for NATS communication.\n * This interceptor generates a standardized response payload using the responsePayloadNat function.\n */\n@Injectable()\nexport class RpcSuccessInterceptor {\n    /**\n     * Intercepts the response and transforms it using the responsePayloadNat function.\n     * @param _context - Execution context.\n     * @param next - Next handler in the chain.\n     * @returns Transformed Observable containing the standardized response payload.\n     */\n    intercept(_context: ExecutionContext, next: CallHandler) {\n        return next\n            .handle()\n            .pipe(map(value => responsePayloadNat(value)));\n\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/sendEmailForgotPasswordResponseInterface.html":{"url":"interfaces/sendEmailForgotPasswordResponseInterface.html","title":"interface - sendEmailForgotPasswordResponseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  sendEmailForgotPasswordResponseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/authUp.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { UserDocument } from 'src/user/Schema/user.schema';\n\n\nexport interface userPayload {\n    sub: string;\n    email: string;\n}\n\nexport interface IAuthUp extends Document\n{\n    firstname: string;\n    lastname: string;\n    email: string;\n    password: string;\n}\n\nexport interface TokenInterface {\n    token: string\n}\n\nexport interface getTokenInterface {\n    accessToken: string,\n    refreshToken: string \n}\n\nexport interface signInResponseInterface {\n    user: UserDocument,\n    tokens: getTokenInterface\n}\n\nexport interface sendEmailForgotPasswordResponseInterface {\n    message: string\n}\n\nexport interface acknowledgeResponseinterface {\n    acknowledge : boolean\n}\n\nexport class signInInterface {\n    email: string;\n    password: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/signInDto.html":{"url":"classes/signInDto.html","title":"class - signInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  signInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signIn.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signIn.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signIn.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from \"class-validator\";\n\nexport class signInDto {\n\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    password: string\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/signInInterface.html":{"url":"classes/signInInterface.html","title":"class - signInInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  signInInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/authUp.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interface/authUp.interface.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/interface/authUp.interface.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { UserDocument } from 'src/user/Schema/user.schema';\n\n\nexport interface userPayload {\n    sub: string;\n    email: string;\n}\n\nexport interface IAuthUp extends Document\n{\n    firstname: string;\n    lastname: string;\n    email: string;\n    password: string;\n}\n\nexport interface TokenInterface {\n    token: string\n}\n\nexport interface getTokenInterface {\n    accessToken: string,\n    refreshToken: string \n}\n\nexport interface signInResponseInterface {\n    user: UserDocument,\n    tokens: getTokenInterface\n}\n\nexport interface sendEmailForgotPasswordResponseInterface {\n    message: string\n}\n\nexport interface acknowledgeResponseinterface {\n    acknowledge : boolean\n}\n\nexport class signInInterface {\n    email: string;\n    password: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/signInResponseInterface.html":{"url":"interfaces/signInResponseInterface.html","title":"interface - signInResponseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  signInResponseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/authUp.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tokens\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tokens\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tokens:         getTokenInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         getTokenInterface\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserDocument\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDocument\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { UserDocument } from 'src/user/Schema/user.schema';\n\n\nexport interface userPayload {\n    sub: string;\n    email: string;\n}\n\nexport interface IAuthUp extends Document\n{\n    firstname: string;\n    lastname: string;\n    email: string;\n    password: string;\n}\n\nexport interface TokenInterface {\n    token: string\n}\n\nexport interface getTokenInterface {\n    accessToken: string,\n    refreshToken: string \n}\n\nexport interface signInResponseInterface {\n    user: UserDocument,\n    tokens: getTokenInterface\n}\n\nexport interface sendEmailForgotPasswordResponseInterface {\n    message: string\n}\n\nexport interface acknowledgeResponseinterface {\n    acknowledge : boolean\n}\n\nexport class signInInterface {\n    email: string;\n    password: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adminEditInterface   (src/.../userRes.interface.ts)\n                        \n                        \n                            AuthUserTokenDocument   (src/.../authUserToken.schema.ts)\n                        \n                        \n                            kidEditInterface   (src/.../userRes.interface.ts)\n                        \n                        \n                            parentAdminCreateInterface   (src/.../userRes.interface.ts)\n                        \n                        \n                            parentAdminEditInterface   (src/.../userRes.interface.ts)\n                        \n                        \n                            parentEditInterface   (src/.../userRes.interface.ts)\n                        \n                        \n                            RefreshTokenDocument   (src/.../refreshToken.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/interface/userRes.interface.ts\n    \n    \n        \n            \n                \n                    \n                    adminEditInterface\n                \n            \n            \n                \n                            Pick\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    kidEditInterface\n                \n            \n            \n                \n                            Pick\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    parentAdminCreateInterface\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    parentAdminEditInterface\n                \n            \n            \n                \n                            Pick\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    parentEditInterface\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    src/auth/Schema/authUserToken.schema.ts\n    \n    \n        \n            \n                \n                    \n                    AuthUserTokenDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/auth/Schema/refreshToken.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RefreshTokenDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/Schema/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/userEmailDto.html":{"url":"classes/userEmailDto.html","title":"class - userEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  userEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/Dto/userEmail.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/Dto/userEmail.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail } from \"class-validator\";\n\n\nexport class userEmailDto {\n    \n    @IsEmail()\n    email: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/userPayload.html":{"url":"interfaces/userPayload.html","title":"interface - userPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  userPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/authUp.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { UserDocument } from 'src/user/Schema/user.schema';\n\n\nexport interface userPayload {\n    sub: string;\n    email: string;\n}\n\nexport interface IAuthUp extends Document\n{\n    firstname: string;\n    lastname: string;\n    email: string;\n    password: string;\n}\n\nexport interface TokenInterface {\n    token: string\n}\n\nexport interface getTokenInterface {\n    accessToken: string,\n    refreshToken: string \n}\n\nexport interface signInResponseInterface {\n    user: UserDocument,\n    tokens: getTokenInterface\n}\n\nexport interface sendEmailForgotPasswordResponseInterface {\n    message: string\n}\n\nexport interface acknowledgeResponseinterface {\n    acknowledge : boolean\n}\n\nexport class signInInterface {\n    email: string;\n    password: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthUserTokenSchema   (src/.../authUserToken.schema.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            RefreshTokenSchema   (src/.../refreshToken.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/Schema/authUserToken.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthUserTokenSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(AuthUserToken)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/auth/Schema/refreshToken.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RefreshTokenSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(RefreshToken)\n                    \n                \n\n\n        \n    \n\n    src/user/Schema/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
